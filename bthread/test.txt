
test.elf:     file format elf32-littlearm
test.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000040

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00002afc memsz 0x00002b08 flags rwx
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002978  00000000  00000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init         00000018  00002978  00002978  0000a978  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         00000018  00002990  00002990  0000a990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000144  000029a8  000029a8  0000a9a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .data         00000004  00002aec  00002aec  0000aaec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .init_array   00000004  00002af0  00002af0  0000aaf0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .fini_array   00000004  00002af4  00002af4  0000aaf4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .jcr          00000004  00002af8  00002af8  0000aaf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          0000000c  00002afc  00002afc  0000aafc  2**2
                  ALLOC
  9 .ARM.attributes 0000002b  00000000  00000000  0000aafc  2**0
                  CONTENTS, READONLY
 10 .comment      0000012d  00000000  00000000  0000ab27  2**0
                  CONTENTS, READONLY
 11 .debug_abbrev 0000006d  00000000  00000000  0000ac54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   00000107  00000000  00000000  0000acc1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000000f3  00000000  00000000  0000adc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000002b  00000000  00000000  0000aebb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_pubnames 0000001b  00000000  00000000  0000aee6  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_aranges 00000060  00000000  00000000  0000af08  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00000049  00000000  00000000  0000af68  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_frame  0000004c  00000000  00000000  0000afb4  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00002978 l    d  .init	00000000 .init
00002990 l    d  .fini	00000000 .fini
000029a8 l    d  .rodata	00000000 .rodata
00002aec l    d  .data	00000000 .data
00002af0 l    d  .init_array	00000000 .init_array
00002af4 l    d  .fini_array	00000000 .fini_array
00002af8 l    d  .jcr	00000000 .jcr
00002afc l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000024 l       .text	00000000 UND_Addr
00000028 l       .text	00000000 SWI_Addr
0000002c l       .text	00000000 PRE_Addr
00000030 l       .text	00000000 DAB_Addr
00000038 l       .text	00000000 IRQ_Addr
0000003c l       .text	00000000 FIQ_Addr
00000020 l       .text	00000000 RST_Addr
00000010 l       *ABS*	00000000 Mode_USR
00000011 l       *ABS*	00000000 Mode_FIQ
00000012 l       *ABS*	00000000 Mode_IRQ
00000013 l       *ABS*	00000000 Mode_SVC
00000017 l       *ABS*	00000000 Mode_ABT
0000001b l       *ABS*	00000000 Mode_UND
00000080 l       *ABS*	00000000 I_Bit
00000040 l       *ABS*	00000000 F_Bit
00000100 l       *ABS*	00000000 len_FIQ_stack
00000100 l       *ABS*	00000000 len_IRQ_stack
00000100 l       *ABS*	00000000 len_SVC_stack
00000040 l       *ABS*	00000000 len_ABT_stack
00000040 l       *ABS*	00000000 len_UND_stack
00002000 l       *ABS*	00000000 len_USR_stack
00002380 l       *ABS*	00000000 offset_USR_stack
00002000 l       *ABS*	00000000 offset_FIQ_stack
00002100 l       *ABS*	00000000 offset_IRQ_stack
00002200 l       *ABS*	00000000 offset_SVC_stack
00002300 l       *ABS*	00000000 offset_ABT_stack
00002340 l       *ABS*	00000000 offset_UND_stack
08000000 l       *ABS*	00000000 Top_of_stack_0
07000000 l       *ABS*	00000000 Top_of_stack_1
06000000 l       *ABS*	00000000 Top_of_stack_2
05000000 l       *ABS*	00000000 Top_of_stack_3
00000054 l       .text	00000000 init_stack_part1
00000090 l       .text	00000000 init_stack_part2
000000bc l       .text	00000000 init_bss
00000140 l       .text	00000000 start_bss
00000144 l       .text	00000000 length_bss
000000c8 l       .text	00000000 bss_clear_loop
000000d8 l       .text	00000000 bss_clear_end
000000d8 l       .text	00000000 mmu_enable
000000e8 l       .text	00000000 icache_enable
000000f8 l       .text	00000000 dcache_enable
00000108 l       .text	00000000 go
0000011c l       .text	00000000 stop
00000128 l       .text	00000000 start_text
0000012c l       .text	00000000 length_text
00000130 l       .text	00000000 start_rodata
00000134 l       .text	00000000 length_rodata
00000138 l       .text	00000000 start_data
0000013c l       .text	00000000 length_data
00000000 l    df *ABS*	00000000 crtstuff.c
00002af8 l     O .jcr	00000000 __JCR_LIST__
00000150 l     F .text	00000000 __do_global_dtors_aux
00002afc l       .bss	00000000 completed.4678
00002af4 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
0000016c l     F .text	00000000 frame_dummy
00002af0 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 stdio.c
00000240 l     F .text	000000d4 kprintn
000029f0 l     O .rodata	00000050 C.3.926
00000440 l     F .text	00000298 p_ieee754
000006d8 l     F .text	00000318 kprintn_d
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 bthread.c
00001710 l       .text	00000000 spin_in
00001728 l       .text	00000000 spin_loop
00001734 l       .text	00000000 lock_held
00001758 l       .text	00000000 spin_out
00001774 l       .text	00000000 lock_realse
00001798 l       .text	00000000 spin_in_b
000017b0 l       .text	00000000 spin_loop_b
000017dc l       .text	00000000 spin_out_b
0000184c l       .text	00000000 barrier_reached
00001970 l       .text	00000000 barrier_crossed
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vic.c
00001db4 l       .text	00000000 .udivsi3_nodiv0
00000000 l    df *ABS*	00000000 crtstuff.c
00002af8 l     O .jcr	00000000 __JCR_END__
00001184 g     F .text	00000028 putchar
00002880 g     F .text	00000018 __aeabi_dcmple
00001484 g     F .text	00000080 strcpy
00002794 g     F .text	00000088 __cmpdf2
00000004 g       *ABS*	00000000 _length_data
00002794 g     F .text	00000088 __eqdf2
00002b00 g     O .bss	00000004 core_id
00002288 g     F .text	00000060 __floatdidf
000001ec g     F .text	00000054 printf
00001700 g     F .text	00000048 bthread_mutex_lock
000029a8 g       .rodata	00000000 _start_rodata
00002aec g       .rodata	00000000 _end_rodata
00001564 g     F .text	0000009c IRQ_Handler
00002784 g     F .text	00000098 __gtdf2
00002aec g       .data	00000000 _start_data
00002838 g     F .text	00000018 __aeabi_cdcmple
00001830 g     F .text	00000168 bthread_barrier_wait
000016e0 g     F .text	00000020 TimerAHB2IntHandler
00001ca0 g     F .text	0000002c vic_mode
00002af0 g       .data	00000000 _end_data
000011ec g     F .text	00000080 memcpy
0000281c g     F .text	00000034 __aeabi_cdrcmple
0000220c g     F .text	00000028 __floatsidf
0000278c g     F .text	00000090 __ltdf2
000011ac g     F .text	00000028 puts
00001748 g     F .text	00000040 bthread_mutex_unlock
00001c84 g     F .text	0000001c vic_init
00001db4 g     F .text	000000f4 __udivsi3
00001654 g     F .text	0000002c SWI_Handler
00002924 g     F .text	00000054 __fixunsdfsi
00002aec g     O .data	00000000 .hidden __dso_handle
000021e8 g     F .text	00000024 __aeabi_ui2d
00001ecc g     F .text	00000000 __aeabi_drsub
00001a10 g     F .text	00000028 bthread_cond_broadcast
00002868 g     F .text	00000018 __aeabi_dcmplt
00001600 g     F .text	00000020 DAB_Handler
00002234 g     F .text	00000040 __extendsfdf2
00002578 g     F .text	0000020c __aeabi_ddiv
00001ed8 g     F .text	00000310 __adddf3
00000040 g       .text	00000000 _start_text
000022e8 g     F .text	00000290 __aeabi_dmul
000021e8 g     F .text	00000024 __floatunsidf
00000001 g       *ABS*	00000000 _length_bss
00002978 g     F .init	00000000 _init
00002978 g       .text	00000000 _end_text
00001620 g     F .text	00000018 RST_Handler
000028c8 g     F .text	0000005c __fixdfsi
000029a8 g       *ABS*	00000000 _rodata
00001d90 g     F .text	00000024 vic_clear
00001ed8 g     F .text	00000310 __aeabi_dadd
0000278c g     F .text	00000090 __ledf2
00001504 g     F .text	00000060 strcat
00002274 g     F .text	00000074 __aeabi_ul2d
000009f0 g     F .text	0000003c vprintf
000028b0 g     F .text	00000018 __aeabi_dcmpgt
00001a60 g     F .text	000000b0 uart_init
00002898 g     F .text	00000018 __aeabi_dcmpge
00001998 g     F .text	00000078 bthread_cond_wait
000017cc g     F .text	0000003c bthread_mutex_unlock_b
00002afc g       *ABS*	00000000 _bss
00001ed4 g     F .text	00000314 __aeabi_dsub
00001c54 g     F .text	00000030 uart_rx_char
00000040 g       .text	00000108 _start
00002274 g     F .text	00000074 __floatundidf
00001b48 g     F .text	0000003c uart_wait_rxfe
00001d50 g     F .text	00000040 vic_vector_isr
0000220c g     F .text	00000028 __aeabi_i2d
000012d8 g     F .text	000000a0 memcmp
00001b84 g     F .text	00000068 uart_tx_char
00001ec8  w    F .text	00000004 __aeabi_ldiv0
00002578 g     F .text	0000020c __divdf3
00002b04 g     O .bss	00000004 setting
000022e8 g     F .text	00000290 __muldf3
00002978 g       *ABS*	00000000 _text
00002938 g       *ABS*	00000000 _length_text
0000126c g     F .text	0000006c memset
000001a0 g     F .text	0000004c main
00001db4 g     F .text	00000000 __aeabi_uidiv
00000314 g     F .text	000000a8 powerof2_n
000011d4 g     F .text	00000018 getchar
00002288 g     F .text	00000060 __aeabi_l2d
00001638 g     F .text	0000001c UND_Handler
00001378 g     F .text	000000b4 strcmp
00002794 g     F .text	00000088 __nedf2
00002990 g     F .fini	00000000 _fini
00001cf8 g     F .text	00000058 vic_vector
000003bc g     F .text	00000084 round_of
000016c0 g     F .text	00000020 TimerAHB1IntHandler
00002aec g       *ABS*	00000000 _data
000016a0 g     F .text	00000020 FIQ_Handler
00002924 g     F .text	00000054 __aeabi_d2uiz
00002afd g       .bss	00000000 _end_bss
00001ea8 g     F .text	00000020 __aeabi_uidivmod
00002850 g     F .text	00000018 __aeabi_dcmpeq
00002afc g       .bss	00000000 _start_bss
00001680 g     F .text	00000020 PRE_Handler
000028c8 g     F .text	0000005c __aeabi_d2iz
00001ccc g     F .text	0000002c vic_enable
00001ec8  w    F .text	00000004 __aeabi_idiv0
0000142c g     F .text	00000058 strlen
00002838 g     F .text	00000018 __aeabi_cdcmpeq
00002784 g     F .text	00000098 __gedf2
00000a2c g     F .text	00000758 kdoprint
00001788 g     F .text	00000044 bthread_mutex_lock_b
00001808 g     F .text	00000028 bthread_barrier_init
00002234 g     F .text	00000040 __aeabi_f2d
00001b10 g     F .text	00000038 uart_wait_txff
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00000144 g       *ABS*	00000000 _length_rodata
00001ed4 g     F .text	00000314 __subdf3
00002abd g       *ABS*	00000000 _length_program
00001a38 g     F .text	00000028 bthread_cond_clear
00001bec g     F .text	00000068 uart_tx_string



Disassembly of section .text:

00000000 <RST_Addr-0x20>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
       0:	e3a0f040 	mov	pc, #64	; 0x40
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <UND_Addr>
        LDR     PC, SWI_Addr
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <SWI_Addr>
        LDR     PC, PRE_Addr
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <PRE_Addr>
        LDR     PC, DAB_Addr
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <DAB_Addr>
        NOP
      14:	e320f000 	nop	{0}
        LDR     PC, IRQ_Addr           
      18:	e59ff018 	ldr	pc, [pc, #24]	; 38 <IRQ_Addr>
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <FIQ_Addr>

00000020 <RST_Addr>:
      20:	00001620 	andeq	r1, r0, r0, lsr #12

00000024 <UND_Addr>:
      24:	00001638 	andeq	r1, r0, r8, lsr r6

00000028 <SWI_Addr>:
      28:	00001654 	andeq	r1, r0, r4, asr r6

0000002c <PRE_Addr>:
      2c:	00001680 	andeq	r1, r0, r0, lsl #13

00000030 <DAB_Addr>:
      30:	00001600 	andeq	r1, r0, r0, lsl #12
      34:	00000000 	andeq	r0, r0, r0

00000038 <IRQ_Addr>:
      38:	00001564 	andeq	r1, r0, r4, ror #10

0000003c <FIQ_Addr>:
      3c:	000016a0 	andeq	r1, r0, r0, lsr #13

00000040 <_start>:
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
      40:	e3a00000 	mov	r0, #0
	mrs r1, cpsr
      44:	e10f1000 	mrs	r1, CPSR
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
      48:	e2011cff 	and	r1, r1, #65280	; 0xff00
	orr r1, r1, #0x00df
      4c:	e38110df 	orr	r1, r1, #223	; 0xdf
	msr cpsr_c, r1
      50:	e121f001 	msr	CPSR_c, r1

00000054 <init_stack_part1>:
.equ Top_of_stack_1, 0x07000000 @ 112MB
.equ Top_of_stack_2, 0x06000000 @ 96MB
.equ Top_of_stack_3, 0x05000000 @ 80MB

init_stack_part1:
	mrc p15, 0, r6, c0, c0, 5
      54:	ee106fb0 	mrc	15, 0, r6, cr0, cr0, {5}
	
	mov r0, #Top_of_stack_3
      58:	e3a00405 	mov	r0, #83886080	; 0x5000000
	cmp r6 , #0x3
      5c:	e3560003 	cmp	r6, #3
	beq init_stack_part2
      60:	0a00000a 	beq	90 <init_stack_part2>
	
	mov r0, #Top_of_stack_2
      64:	e3a00406 	mov	r0, #100663296	; 0x6000000
	cmp r6 , #0x2
      68:	e3560002 	cmp	r6, #2
	beq init_stack_part2
      6c:	0a000007 	beq	90 <init_stack_part2>
	
	mov r0, #Top_of_stack_1
      70:	e3a00407 	mov	r0, #117440512	; 0x7000000
	cmp r6 , #0x1
      74:	e3560001 	cmp	r6, #1
	beq init_stack_part2
      78:	0a000004 	beq	90 <init_stack_part2>

	mov r0, #Top_of_stack_0
      7c:	e3a00302 	mov	r0, #134217728	; 0x8000000
	cmp r6 , #0x0
      80:	e3560000 	cmp	r6, #0
	beq init_stack_part2
      84:	0a000001 	beq	90 <init_stack_part2>

	nop
      88:	e320f000 	nop	{0}
	b .
      8c:	eafffffe 	b	8c <I_Bit+0xc>

00000090 <init_stack_part2>:

init_stack_part2:
	sub sp, r0, #offset_USR_stack @ set user/sys mode stack pointer
      90:	e240dd8e 	sub	sp, r0, #9088	; 0x2380
	
	msr cpsr_c, #Mode_FIQ|I_Bit|F_Bit @ set fiq mode stack pointer
      94:	e321f0d1 	msr	CPSR_c, #209	; 0xd1
	sub sp, r0, #offset_FIQ_stack
      98:	e240da02 	sub	sp, r0, #8192	; 0x2000
	
	msr cpsr_c, #Mode_IRQ|I_Bit|F_Bit @ set irq mode stack pointer
      9c:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
	sub sp, r0, #offset_IRQ_stack
      a0:	e240dc21 	sub	sp, r0, #8448	; 0x2100
	
	msr cpsr_c, #Mode_SVC|I_Bit|F_Bit @ set svc mode stack pointer
      a4:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
	sub sp, r0, #offset_SVC_stack
      a8:	e240dc22 	sub	sp, r0, #8704	; 0x2200
	
	msr cpsr_c, #Mode_ABT|I_Bit|F_Bit @ set abt mode stack pointer
      ac:	e321f0d7 	msr	CPSR_c, #215	; 0xd7
	sub sp, r0, #offset_ABT_stack
      b0:	e240dc23 	sub	sp, r0, #8960	; 0x2300
	
	msr cpsr_c, #Mode_UND|I_Bit|F_Bit @ set und mode stack pointer
      b4:	e321f0db 	msr	CPSR_c, #219	; 0xdb
	sub sp, r0, #offset_UND_stack
      b8:	e240dd8d 	sub	sp, r0, #9024	; 0x2340

000000bc <init_bss>:



/* to setup the BBS section */
init_bss:
	ldr r0, start_bss
      bc:	e59f007c 	ldr	r0, [pc, #124]	; 140 <start_bss>
	ldr r1, length_bss
      c0:	e59f107c 	ldr	r1, [pc, #124]	; 144 <length_bss>
	eor r2, r2, r2			@ $r2 = 0
      c4:	e0222002 	eor	r2, r2, r2

000000c8 <bss_clear_loop>:

bss_clear_loop:
	subs r1, r1, #4
      c8:	e2511004 	subs	r1, r1, #4
	bmi bss_clear_end
      cc:	4a000001 	bmi	d8 <bss_clear_end>
	str r2, [r0]
      d0:	e5802000 	str	r2, [r0]
	b bss_clear_loop
      d4:	eafffffb 	b	c8 <bss_clear_loop>

000000d8 <bss_clear_end>:

bss_clear_end:

/* MMU enable */	
mmu_enable:
	mrc p15, 0, r2, c1, c0, 0 
      d8:	ee112f10 	mrc	15, 0, r2, cr1, cr0, {0}
	mov r1, #0x00000001
      dc:	e3a01001 	mov	r1, #1
	orr r2, r2, r1
      e0:	e1822001 	orr	r2, r2, r1
	mcr p15, 0, r2, c1, c0, 0 @ Enable MMU
      e4:	ee012f10 	mcr	15, 0, r2, cr1, cr0, {0}

000000e8 <icache_enable>:

	
/* I-Cache enable */
icache_enable:
	mrc p15, 0, r2, c1, c0, 0 
      e8:	ee112f10 	mrc	15, 0, r2, cr1, cr0, {0}
	mov r1, #0x00001000
      ec:	e3a01a01 	mov	r1, #4096	; 0x1000
	orr r2, r2, r1
      f0:	e1822001 	orr	r2, r2, r1
	mcr p15, 0, r2, c1, c0, 0 @ Enable Icache
      f4:	ee012f10 	mcr	15, 0, r2, cr1, cr0, {0}

000000f8 <dcache_enable>:

/* I-Cache enable */	
dcache_enable:
	mrc p15, 0, r2, c1, c0, 0 
      f8:	ee112f10 	mrc	15, 0, r2, cr1, cr0, {0}
	mov r1, #0x00000004
      fc:	e3a01004 	mov	r1, #4
	orr r2, r2, r1
     100:	e1822001 	orr	r2, r2, r1
	mcr p15, 0, r2, c1, c0, 0 @ Enable Dcache
     104:	ee012f10 	mcr	15, 0, r2, cr1, cr0, {0}

00000108 <go>:
/****************************************************************************************************
 * the initialization process is done now
 * switch to USR mode and then go to the entry of the test program
 ****************************************************************************************************/
go:
	mrs r5, cpsr
     108:	e10f5000 	mrs	r5, CPSR
	and r5, r5, #~0x00ff
     10c:	e3c550ff 	bic	r5, r5, #255	; 0xff
	orr r5, r5, #0x0010
     110:	e3855010 	orr	r5, r5, #16
	msr cpsr_c, r5
     114:	e121f005 	msr	CPSR_c, r5
	bl main
     118:	eb000020 	bl	1a0 <main>

0000011c <stop>:
/****************************************************************************************************
 * the test program is also done now
 * terminate and shutdown the system through semihosting
 ****************************************************************************************************/
stop:
	swi 0x00ffffff
     11c:	efffffff 	svc	0x00ffffff
	nop
     120:	e320f000 	nop	{0}
	b .
     124:	eafffffe 	b	124 <stop+0x8>

00000128 <start_text>:
     128:	00000040 	andeq	r0, r0, r0, asr #32

0000012c <length_text>:
     12c:	00002938 	andeq	r2, r0, r8, lsr r9

00000130 <start_rodata>:
     130:	000029a8 	andeq	r2, r0, r8, lsr #19

00000134 <length_rodata>:
     134:	00000144 	andeq	r0, r0, r4, asr #2

00000138 <start_data>:
     138:	00002aec 	andeq	r2, r0, ip, ror #21

0000013c <length_data>:
     13c:	00000004 	andeq	r0, r0, r4

00000140 <start_bss>:
     140:	00002afc 	strdeq	r2, [r0], -ip

00000144 <length_bss>:
     144:	00000001 	andeq	r0, r0, r1
     148:	e320f000 	nop	{0}
     14c:	e320f000 	nop	{0}

00000150 <__do_global_dtors_aux>:
     150:	e59f3010 	ldr	r3, [pc, #16]	; 168 <__do_global_dtors_aux+0x18>
     154:	e5d32000 	ldrb	r2, [r3]
     158:	e3520000 	cmp	r2, #0
     15c:	03a02001 	moveq	r2, #1
     160:	05c32000 	strbeq	r2, [r3]
     164:	e12fff1e 	bx	lr
     168:	00002afc 	strdeq	r2, [r0], -ip

0000016c <frame_dummy>:
     16c:	e59f0024 	ldr	r0, [pc, #36]	; 198 <frame_dummy+0x2c>
     170:	e92d4008 	push	{r3, lr}
     174:	e5903000 	ldr	r3, [r0]
     178:	e3530000 	cmp	r3, #0
     17c:	0a000003 	beq	190 <frame_dummy+0x24>
     180:	e59f3014 	ldr	r3, [pc, #20]	; 19c <frame_dummy+0x30>
     184:	e3530000 	cmp	r3, #0
     188:	11a0e00f 	movne	lr, pc
     18c:	112fff13 	bxne	r3
     190:	e8bd4008 	pop	{r3, lr}
     194:	e12fff1e 	bx	lr
     198:	00002af8 	strdeq	r2, [r0], -r8
     19c:	00000000 	andeq	r0, r0, r0

000001a0 <main>:
#include <stdio.h>

#define l_cpuid 0x00100004

int main()
{
     1a0:	e92d4800 	push	{fp, lr}
     1a4:	e28db004 	add	fp, sp, #4
     1a8:	e24dd008 	sub	sp, sp, #8

    int i;
    /* get core id*/
    //bthread_mutex_lock(l_cpuid);

    for (i = 0; i < 1000; i++) {
     1ac:	e3a03000 	mov	r3, #0
     1b0:	e50b3008 	str	r3, [fp, #-8]
     1b4:	ea000005 	b	1d0 <main+0x30>
        printf("i = %d\n", i);
     1b8:	e59f0024 	ldr	r0, [pc, #36]	; 1e4 <main+0x44>
     1bc:	e51b1008 	ldr	r1, [fp, #-8]
     1c0:	eb000009 	bl	1ec <printf>

    int i;
    /* get core id*/
    //bthread_mutex_lock(l_cpuid);

    for (i = 0; i < 1000; i++) {
     1c4:	e51b3008 	ldr	r3, [fp, #-8]
     1c8:	e2833001 	add	r3, r3, #1
     1cc:	e50b3008 	str	r3, [fp, #-8]
     1d0:	e51b2008 	ldr	r2, [fp, #-8]
     1d4:	e59f300c 	ldr	r3, [pc, #12]	; 1e8 <main+0x48>
     1d8:	e1520003 	cmp	r2, r3
     1dc:	dafffff5 	ble	1b8 <main+0x18>
        printf("i = %d\n", i);
    }

    //bthread_mutex_unlock(l_cpuid);
    while(1);
     1e0:	eafffffe 	b	1e0 <main+0x40>
     1e4:	000029a8 	andeq	r2, r0, r8, lsr #19
     1e8:	000003e7 	andeq	r0, r0, r7, ror #7

000001ec <printf>:
     1ec:	e92d000f 	push	{r0, r1, r2, r3}
     1f0:	e92d4800 	push	{fp, lr}
     1f4:	e28db004 	add	fp, sp, #4
     1f8:	e24dd008 	sub	sp, sp, #8
     1fc:	e3a00601 	mov	r0, #1048576	; 0x100000
     200:	eb00053e 	bl	1700 <bthread_mutex_lock>
     204:	e28b3008 	add	r3, fp, #8
     208:	e50b300c 	str	r3, [fp, #-12]
     20c:	e59b0004 	ldr	r0, [fp, #4]
     210:	e51b100c 	ldr	r1, [fp, #-12]
     214:	eb0001f5 	bl	9f0 <vprintf>
     218:	e1a03000 	mov	r3, r0
     21c:	e50b3008 	str	r3, [fp, #-8]
     220:	e3a00601 	mov	r0, #1048576	; 0x100000
     224:	eb000547 	bl	1748 <bthread_mutex_unlock>
     228:	e51b3008 	ldr	r3, [fp, #-8]
     22c:	e1a00003 	mov	r0, r3
     230:	e24bd004 	sub	sp, fp, #4
     234:	e8bd4800 	pop	{fp, lr}
     238:	e28dd010 	add	sp, sp, #16
     23c:	e12fff1e 	bx	lr

00000240 <kprintn>:
     240:	e92d4800 	push	{fp, lr}
     244:	e28db004 	add	fp, sp, #4
     248:	e24dd028 	sub	sp, sp, #40	; 0x28
     24c:	e50b0020 	str	r0, [fp, #-32]
     250:	e50b1024 	str	r1, [fp, #-36]	; 0x24
     254:	e50b2028 	str	r2, [fp, #-40]	; 0x28
     258:	e3a03000 	mov	r3, #0
     25c:	e50b3008 	str	r3, [fp, #-8]
     260:	e24b3018 	sub	r3, fp, #24
     264:	e50b300c 	str	r3, [fp, #-12]
     268:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     26c:	e51b2024 	ldr	r2, [fp, #-36]	; 0x24
     270:	e1a00002 	mov	r0, r2
     274:	e1a01003 	mov	r1, r3
     278:	eb00070a 	bl	1ea8 <__aeabi_uidivmod>
     27c:	e1a03001 	mov	r3, r1
     280:	e1a02003 	mov	r2, r3
     284:	e30239b0 	movw	r3, #10672	; 0x29b0
     288:	e3403000 	movt	r3, #0
     28c:	e7d32002 	ldrb	r2, [r3, r2]
     290:	e51b300c 	ldr	r3, [fp, #-12]
     294:	e5c32000 	strb	r2, [r3]
     298:	e51b300c 	ldr	r3, [fp, #-12]
     29c:	e2833001 	add	r3, r3, #1
     2a0:	e50b300c 	str	r3, [fp, #-12]
     2a4:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     2a8:	e51b0024 	ldr	r0, [fp, #-36]	; 0x24
     2ac:	e1a01003 	mov	r1, r3
     2b0:	eb0006bf 	bl	1db4 <__aeabi_uidiv>
     2b4:	e1a03000 	mov	r3, r0
     2b8:	e50b3024 	str	r3, [fp, #-36]	; 0x24
     2bc:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
     2c0:	e3530000 	cmp	r3, #0
     2c4:	1affffe7 	bne	268 <kprintn+0x28>
     2c8:	e51b300c 	ldr	r3, [fp, #-12]
     2cc:	e2433001 	sub	r3, r3, #1
     2d0:	e50b300c 	str	r3, [fp, #-12]
     2d4:	e51b300c 	ldr	r3, [fp, #-12]
     2d8:	e5d32000 	ldrb	r2, [r3]
     2dc:	e51b3020 	ldr	r3, [fp, #-32]
     2e0:	e1a00002 	mov	r0, r2
     2e4:	e12fff33 	blx	r3
     2e8:	e51b3008 	ldr	r3, [fp, #-8]
     2ec:	e2833001 	add	r3, r3, #1
     2f0:	e50b3008 	str	r3, [fp, #-8]
     2f4:	e24b2018 	sub	r2, fp, #24
     2f8:	e51b300c 	ldr	r3, [fp, #-12]
     2fc:	e1520003 	cmp	r2, r3
     300:	3afffff0 	bcc	2c8 <kprintn+0x88>
     304:	e51b3008 	ldr	r3, [fp, #-8]
     308:	e1a00003 	mov	r0, r3
     30c:	e24bd004 	sub	sp, fp, #4
     310:	e8bd8800 	pop	{fp, pc}

00000314 <powerof2_n>:
     314:	e92d4800 	push	{fp, lr}
     318:	e28db004 	add	fp, sp, #4
     31c:	e24dd028 	sub	sp, sp, #40	; 0x28
     320:	e14b02f4 	strd	r0, [fp, #-36]	; 0xffffffdc
     324:	e50b2028 	str	r2, [fp, #-40]	; 0x28
     328:	e3a02000 	mov	r2, #0
     32c:	e3a035ff 	mov	r3, #1069547520	; 0x3fc00000
     330:	e2833603 	add	r3, r3, #3145728	; 0x300000
     334:	e14b21f4 	strd	r2, [fp, #-20]	; 0xffffffec
     338:	e14b02d4 	ldrd	r0, [fp, #-36]	; 0xffffffdc
     33c:	eb0007cc 	bl	2274 <__aeabi_ul2d>
     340:	e1a02000 	mov	r2, r0
     344:	e1a03001 	mov	r3, r1
     348:	e1a00002 	mov	r0, r2
     34c:	e1a01003 	mov	r1, r3
     350:	e14b21d4 	ldrd	r2, [fp, #-20]	; 0xffffffec
     354:	eb000887 	bl	2578 <__aeabi_ddiv>
     358:	e1a02000 	mov	r2, r0
     35c:	e1a03001 	mov	r3, r1
     360:	e14b20fc 	strd	r2, [fp, #-12]
     364:	e3a03000 	mov	r3, #0
     368:	e50b3018 	str	r3, [fp, #-24]
     36c:	ea000009 	b	398 <powerof2_n+0x84>
     370:	e14b00dc 	ldrd	r0, [fp, #-12]
     374:	e3a02000 	mov	r2, #0
     378:	e3a03101 	mov	r3, #1073741824	; 0x40000000
     37c:	eb00087d 	bl	2578 <__aeabi_ddiv>
     380:	e1a02000 	mov	r2, r0
     384:	e1a03001 	mov	r3, r1
     388:	e14b20fc 	strd	r2, [fp, #-12]
     38c:	e51b3018 	ldr	r3, [fp, #-24]
     390:	e2833001 	add	r3, r3, #1
     394:	e50b3018 	str	r3, [fp, #-24]
     398:	e51b2018 	ldr	r2, [fp, #-24]
     39c:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     3a0:	e1520003 	cmp	r2, r3
     3a4:	bafffff1 	blt	370 <powerof2_n+0x5c>
     3a8:	e14b20dc 	ldrd	r2, [fp, #-12]
     3ac:	e1a00002 	mov	r0, r2
     3b0:	e1a01003 	mov	r1, r3
     3b4:	e24bd004 	sub	sp, fp, #4
     3b8:	e8bd8800 	pop	{fp, pc}

000003bc <round_of>:
     3bc:	e92d4800 	push	{fp, lr}
     3c0:	e28db004 	add	fp, sp, #4
     3c4:	e24dd058 	sub	sp, sp, #88	; 0x58
     3c8:	e50b0058 	str	r0, [fp, #-88]	; 0x58
     3cc:	e30239f0 	movw	r3, #10736	; 0x29f0
     3d0:	e3403000 	movt	r3, #0
     3d4:	e24b1054 	sub	r1, fp, #84	; 0x54
     3d8:	e1a02003 	mov	r2, r3
     3dc:	e3a03050 	mov	r3, #80	; 0x50
     3e0:	e1a00001 	mov	r0, r1
     3e4:	e1a01002 	mov	r1, r2
     3e8:	e1a02003 	mov	r2, r3
     3ec:	eb00037e 	bl	11ec <memcpy>
     3f0:	e51b3058 	ldr	r3, [fp, #-88]	; 0x58
     3f4:	e3530009 	cmp	r3, #9
     3f8:	ca000002 	bgt	408 <round_of+0x4c>
     3fc:	e51b3058 	ldr	r3, [fp, #-88]	; 0x58
     400:	e3530000 	cmp	r3, #0
     404:	aa000002 	bge	414 <round_of+0x58>
     408:	e3a02000 	mov	r2, #0
     40c:	e3a03000 	mov	r3, #0
     410:	ea000006 	b	430 <round_of+0x74>
     414:	e51b2058 	ldr	r2, [fp, #-88]	; 0x58
     418:	e3e0304f 	mvn	r3, #79	; 0x4f
     41c:	e1a02182 	lsl	r2, r2, #3
     420:	e24b1004 	sub	r1, fp, #4
     424:	e0822001 	add	r2, r2, r1
     428:	e0823003 	add	r3, r2, r3
     42c:	e1c320d0 	ldrd	r2, [r3]
     430:	e1a00002 	mov	r0, r2
     434:	e1a01003 	mov	r1, r3
     438:	e24bd004 	sub	sp, fp, #4
     43c:	e8bd8800 	pop	{fp, pc}

00000440 <p_ieee754>:
     440:	e92d4810 	push	{r4, fp, lr}
     444:	e28db008 	add	fp, sp, #8
     448:	e24dd02c 	sub	sp, sp, #44	; 0x2c
     44c:	e50b0028 	str	r0, [fp, #-40]	; 0x28
     450:	e14b23f4 	strd	r2, [fp, #-52]	; 0xffffffcc
     454:	e3a03000 	mov	r3, #0
     458:	e50b3020 	str	r3, [fp, #-32]
     45c:	e59b300c 	ldr	r3, [fp, #12]
     460:	e3530004 	cmp	r3, #4
     464:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
     468:	ea000096 	b	6c8 <p_ieee754+0x288>
     46c:	00000480 	andeq	r0, r0, r0, lsl #9
     470:	000004b4 	strheq	r0, [r0], -r4
     474:	0000051c 	andeq	r0, r0, ip, lsl r5
     478:	0000056c 	andeq	r0, r0, ip, ror #10
     47c:	000004e8 	andeq	r0, r0, r8, ror #9
     480:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     484:	e3a00049 	mov	r0, #73	; 0x49
     488:	e12fff33 	blx	r3
     48c:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     490:	e3a0006e 	mov	r0, #110	; 0x6e
     494:	e12fff33 	blx	r3
     498:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     49c:	e3a00066 	mov	r0, #102	; 0x66
     4a0:	e12fff33 	blx	r3
     4a4:	e51b3020 	ldr	r3, [fp, #-32]
     4a8:	e2833003 	add	r3, r3, #3
     4ac:	e50b3020 	str	r3, [fp, #-32]
     4b0:	ea000084 	b	6c8 <p_ieee754+0x288>
     4b4:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     4b8:	e3a0004e 	mov	r0, #78	; 0x4e
     4bc:	e12fff33 	blx	r3
     4c0:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     4c4:	e3a00061 	mov	r0, #97	; 0x61
     4c8:	e12fff33 	blx	r3
     4cc:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     4d0:	e3a0004e 	mov	r0, #78	; 0x4e
     4d4:	e12fff33 	blx	r3
     4d8:	e51b3020 	ldr	r3, [fp, #-32]
     4dc:	e2833003 	add	r3, r3, #3
     4e0:	e50b3020 	str	r3, [fp, #-32]
     4e4:	ea000077 	b	6c8 <p_ieee754+0x288>
     4e8:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     4ec:	e3a00042 	mov	r0, #66	; 0x42
     4f0:	e12fff33 	blx	r3
     4f4:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     4f8:	e3a00069 	mov	r0, #105	; 0x69
     4fc:	e12fff33 	blx	r3
     500:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     504:	e3a00067 	mov	r0, #103	; 0x67
     508:	e12fff33 	blx	r3
     50c:	e51b3020 	ldr	r3, [fp, #-32]
     510:	e2833003 	add	r3, r3, #3
     514:	e50b3020 	str	r3, [fp, #-32]
     518:	ea00006a 	b	6c8 <p_ieee754+0x288>
     51c:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     520:	e3a0002e 	mov	r0, #46	; 0x2e
     524:	e12fff33 	blx	r3
     528:	e3a03000 	mov	r3, #0
     52c:	e50b301c 	str	r3, [fp, #-28]
     530:	ea000008 	b	558 <p_ieee754+0x118>
     534:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     538:	e3a00030 	mov	r0, #48	; 0x30
     53c:	e12fff33 	blx	r3
     540:	e51b3020 	ldr	r3, [fp, #-32]
     544:	e2833001 	add	r3, r3, #1
     548:	e50b3020 	str	r3, [fp, #-32]
     54c:	e51b301c 	ldr	r3, [fp, #-28]
     550:	e2833001 	add	r3, r3, #1
     554:	e50b301c 	str	r3, [fp, #-28]
     558:	e51b201c 	ldr	r2, [fp, #-28]
     55c:	e59b3008 	ldr	r3, [fp, #8]
     560:	e1520003 	cmp	r2, r3
     564:	bafffff2 	blt	534 <p_ieee754+0xf4>
     568:	ea000056 	b	6c8 <p_ieee754+0x288>
     56c:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     570:	e3a0002e 	mov	r0, #46	; 0x2e
     574:	e12fff33 	blx	r3
     578:	e14b03d4 	ldrd	r0, [fp, #-52]	; 0xffffffcc
     57c:	e59b2004 	ldr	r2, [fp, #4]
     580:	ebffff63 	bl	314 <powerof2_n>
     584:	e1a02000 	mov	r2, r0
     588:	e1a03001 	mov	r3, r1
     58c:	e14b21f4 	strd	r2, [fp, #-20]	; 0xffffffec
     590:	e59b0008 	ldr	r0, [fp, #8]
     594:	ebffff88 	bl	3bc <round_of>
     598:	e1a02000 	mov	r2, r0
     59c:	e1a03001 	mov	r3, r1
     5a0:	e1a00002 	mov	r0, r2
     5a4:	e1a01003 	mov	r1, r3
     5a8:	e14b21d4 	ldrd	r2, [fp, #-20]	; 0xffffffec
     5ac:	eb000649 	bl	1ed8 <__adddf3>
     5b0:	e1a02000 	mov	r2, r0
     5b4:	e1a03001 	mov	r3, r1
     5b8:	e3a01000 	mov	r1, #0
     5bc:	e1a04001 	mov	r4, r1
     5c0:	e1a00002 	mov	r0, r2
     5c4:	e1a01003 	mov	r1, r3
     5c8:	e3a02000 	mov	r2, #0
     5cc:	e3a035ff 	mov	r3, #1069547520	; 0x3fc00000
     5d0:	e2833603 	add	r3, r3, #3145728	; 0x300000
     5d4:	eb0008a3 	bl	2868 <__aeabi_dcmplt>
     5d8:	e1a03000 	mov	r3, r0
     5dc:	e3530000 	cmp	r3, #0
     5e0:	0a000001 	beq	5ec <p_ieee754+0x1ac>
     5e4:	e3a03001 	mov	r3, #1
     5e8:	e1a04003 	mov	r4, r3
     5ec:	e6ef3074 	uxtb	r3, r4
     5f0:	e3530000 	cmp	r3, #0
     5f4:	0a000008 	beq	61c <p_ieee754+0x1dc>
     5f8:	e59b0008 	ldr	r0, [fp, #8]
     5fc:	ebffff6e 	bl	3bc <round_of>
     600:	e1a02000 	mov	r2, r0
     604:	e1a03001 	mov	r3, r1
     608:	e14b01d4 	ldrd	r0, [fp, #-20]	; 0xffffffec
     60c:	eb000631 	bl	1ed8 <__adddf3>
     610:	e1a02000 	mov	r2, r0
     614:	e1a03001 	mov	r3, r1
     618:	e14b21f4 	strd	r2, [fp, #-20]	; 0xffffffec
     61c:	e3a03000 	mov	r3, #0
     620:	e50b301c 	str	r3, [fp, #-28]
     624:	ea000023 	b	6b8 <p_ieee754+0x278>
     628:	e14b01d4 	ldrd	r0, [fp, #-20]	; 0xffffffec
     62c:	e3a02000 	mov	r2, #0
     630:	e3a03101 	mov	r3, #1073741824	; 0x40000000
     634:	e2833709 	add	r3, r3, #2359296	; 0x240000
     638:	eb00072a 	bl	22e8 <__aeabi_dmul>
     63c:	e1a02000 	mov	r2, r0
     640:	e1a03001 	mov	r3, r1
     644:	e14b21f4 	strd	r2, [fp, #-20]	; 0xffffffec
     648:	e14b01d4 	ldrd	r0, [fp, #-20]	; 0xffffffec
     64c:	eb00089d 	bl	28c8 <__aeabi_d2iz>
     650:	e1a01000 	mov	r1, r0
     654:	e3063667 	movw	r3, #26215	; 0x6667
     658:	e3463666 	movt	r3, #26214	; 0x6666
     65c:	e0c32193 	smull	r2, r3, r3, r1
     660:	e1a02143 	asr	r2, r3, #2
     664:	e1a03fc1 	asr	r3, r1, #31
     668:	e0632002 	rsb	r2, r3, r2
     66c:	e1a03002 	mov	r3, r2
     670:	e1a03103 	lsl	r3, r3, #2
     674:	e0833002 	add	r3, r3, r2
     678:	e1a03083 	lsl	r3, r3, #1
     67c:	e0632001 	rsb	r2, r3, r1
     680:	e30239c4 	movw	r3, #10692	; 0x29c4
     684:	e3403000 	movt	r3, #0
     688:	e7d33002 	ldrb	r3, [r3, r2]
     68c:	e54b3015 	strb	r3, [fp, #-21]
     690:	e55b2015 	ldrb	r2, [fp, #-21]
     694:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     698:	e1a00002 	mov	r0, r2
     69c:	e12fff33 	blx	r3
     6a0:	e51b3020 	ldr	r3, [fp, #-32]
     6a4:	e2833001 	add	r3, r3, #1
     6a8:	e50b3020 	str	r3, [fp, #-32]
     6ac:	e51b301c 	ldr	r3, [fp, #-28]
     6b0:	e2833001 	add	r3, r3, #1
     6b4:	e50b301c 	str	r3, [fp, #-28]
     6b8:	e51b201c 	ldr	r2, [fp, #-28]
     6bc:	e59b3008 	ldr	r3, [fp, #8]
     6c0:	e1520003 	cmp	r2, r3
     6c4:	baffffd7 	blt	628 <p_ieee754+0x1e8>
     6c8:	e51b3020 	ldr	r3, [fp, #-32]
     6cc:	e1a00003 	mov	r0, r3
     6d0:	e24bd008 	sub	sp, fp, #8
     6d4:	e8bd8810 	pop	{r4, fp, pc}

000006d8 <kprintn_d>:
     6d8:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
     6dc:	e28db014 	add	fp, sp, #20
     6e0:	e24dd050 	sub	sp, sp, #80	; 0x50
     6e4:	e50b0048 	str	r0, [fp, #-72]	; 0x48
     6e8:	e14b25f4 	strd	r2, [fp, #-84]	; 0xffffffac
     6ec:	e3a03000 	mov	r3, #0
     6f0:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     6f4:	e24b3054 	sub	r3, fp, #84	; 0x54
     6f8:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     6fc:	e3a03000 	mov	r3, #0
     700:	e50b3038 	str	r3, [fp, #-56]	; 0x38
     704:	ea00000f 	b	748 <kprintn_d+0x70>
     708:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     70c:	e2631001 	rsb	r1, r3, #1
     710:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     714:	e5932000 	ldr	r2, [r3]
     718:	e3e0302b 	mvn	r3, #43	; 0x2b
     71c:	e1a01101 	lsl	r1, r1, #2
     720:	e24b0014 	sub	r0, fp, #20
     724:	e0811000 	add	r1, r1, r0
     728:	e0813003 	add	r3, r1, r3
     72c:	e5832000 	str	r2, [r3]
     730:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     734:	e2833004 	add	r3, r3, #4
     738:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     73c:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     740:	e2833001 	add	r3, r3, #1
     744:	e50b3038 	str	r3, [fp, #-56]	; 0x38
     748:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     74c:	e3530001 	cmp	r3, #1
     750:	daffffec 	ble	708 <kprintn_d+0x30>
     754:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     758:	e1a03a23 	lsr	r3, r3, #20
     75c:	e1a03a83 	lsl	r3, r3, #21
     760:	e1a03aa3 	lsr	r3, r3, #21
     764:	e50b302c 	str	r3, [fp, #-44]	; 0x2c
     768:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
     76c:	e2433fff 	sub	r3, r3, #1020	; 0x3fc
     770:	e2433003 	sub	r3, r3, #3
     774:	e50b3028 	str	r3, [fp, #-40]	; 0x28
     778:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     77c:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
     780:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
     784:	e50b3024 	str	r3, [fp, #-36]	; 0x24
     788:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     78c:	e50b3020 	str	r3, [fp, #-32]
     790:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     794:	e3530000 	cmp	r3, #0
     798:	aa000011 	bge	7e4 <kprintn_d+0x10c>
     79c:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
     7a0:	e1a02003 	mov	r2, r3
     7a4:	e3a03000 	mov	r3, #0
     7a8:	e1a07002 	mov	r7, r2
     7ac:	e3a06000 	mov	r6, #0
     7b0:	e51b3020 	ldr	r3, [fp, #-32]
     7b4:	e1a02003 	mov	r2, r3
     7b8:	e3a03000 	mov	r3, #0
     7bc:	e1a00006 	mov	r0, r6
     7c0:	e1a01007 	mov	r1, r7
     7c4:	e0900002 	adds	r0, r0, r2
     7c8:	e0a11003 	adc	r1, r1, r3
     7cc:	e3a02000 	mov	r2, #0
     7d0:	e3a03601 	mov	r3, #1048576	; 0x100000
     7d4:	e0922000 	adds	r2, r2, r0
     7d8:	e0a33001 	adc	r3, r3, r1
     7dc:	e14b21fc 	strd	r2, [fp, #-28]	; 0xffffffe4
     7e0:	ea00000a 	b	810 <kprintn_d+0x138>
     7e4:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
     7e8:	e1a02003 	mov	r2, r3
     7ec:	e3a03000 	mov	r3, #0
     7f0:	e1a05002 	mov	r5, r2
     7f4:	e3a04000 	mov	r4, #0
     7f8:	e51b3020 	ldr	r3, [fp, #-32]
     7fc:	e1a02003 	mov	r2, r3
     800:	e3a03000 	mov	r3, #0
     804:	e0922004 	adds	r2, r2, r4
     808:	e0a33005 	adc	r3, r3, r5
     80c:	e14b21fc 	strd	r2, [fp, #-28]	; 0xffffffe4
     810:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
     814:	e3530000 	cmp	r3, #0
     818:	1a000021 	bne	8a4 <kprintn_d+0x1cc>
     81c:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     820:	e1921003 	orrs	r1, r2, r3
     824:	1a000008 	bne	84c <kprintn_d+0x174>
     828:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     82c:	e3a01000 	mov	r1, #0
     830:	e3a0200a 	mov	r2, #10
     834:	ebfffe81 	bl	240 <kprintn>
     838:	e1a03000 	mov	r3, r0
     83c:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     840:	e0823003 	add	r3, r2, r3
     844:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     848:	ea000064 	b	9e0 <kprintn_d+0x308>
     84c:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     850:	e3a01000 	mov	r1, #0
     854:	e3a0200a 	mov	r2, #10
     858:	ebfffe78 	bl	240 <kprintn>
     85c:	e1a03000 	mov	r3, r0
     860:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     864:	e0823003 	add	r3, r2, r3
     868:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     86c:	e3a03000 	mov	r3, #0
     870:	e58d3000 	str	r3, [sp]
     874:	e59b3004 	ldr	r3, [fp, #4]
     878:	e58d3004 	str	r3, [sp, #4]
     87c:	e3a03002 	mov	r3, #2
     880:	e58d3008 	str	r3, [sp, #8]
     884:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     888:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     88c:	ebfffeeb 	bl	440 <p_ieee754>
     890:	e1a03000 	mov	r3, r0
     894:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     898:	e0823003 	add	r3, r2, r3
     89c:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     8a0:	ea00004e 	b	9e0 <kprintn_d+0x308>
     8a4:	e51b202c 	ldr	r2, [fp, #-44]	; 0x2c
     8a8:	e30037ff 	movw	r3, #2047	; 0x7ff
     8ac:	e1520003 	cmp	r2, r3
     8b0:	1a00001e 	bne	930 <kprintn_d+0x258>
     8b4:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     8b8:	e1920003 	orrs	r0, r2, r3
     8bc:	1a00000d 	bne	8f8 <kprintn_d+0x220>
     8c0:	e3a03000 	mov	r3, #0
     8c4:	e58d3000 	str	r3, [sp]
     8c8:	e3a03000 	mov	r3, #0
     8cc:	e58d3004 	str	r3, [sp, #4]
     8d0:	e3a03000 	mov	r3, #0
     8d4:	e58d3008 	str	r3, [sp, #8]
     8d8:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     8dc:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     8e0:	ebfffed6 	bl	440 <p_ieee754>
     8e4:	e1a03000 	mov	r3, r0
     8e8:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     8ec:	e0823003 	add	r3, r2, r3
     8f0:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     8f4:	ea000039 	b	9e0 <kprintn_d+0x308>
     8f8:	e3a03000 	mov	r3, #0
     8fc:	e58d3000 	str	r3, [sp]
     900:	e3a03000 	mov	r3, #0
     904:	e58d3004 	str	r3, [sp, #4]
     908:	e3a03001 	mov	r3, #1
     90c:	e58d3008 	str	r3, [sp, #8]
     910:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     914:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     918:	ebfffec8 	bl	440 <p_ieee754>
     91c:	e1a03000 	mov	r3, r0
     920:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     924:	e0823003 	add	r3, r2, r3
     928:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     92c:	ea00002b 	b	9e0 <kprintn_d+0x308>
     930:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     934:	e3530034 	cmp	r3, #52	; 0x34
     938:	da00000d 	ble	974 <kprintn_d+0x29c>
     93c:	e3a03000 	mov	r3, #0
     940:	e58d3000 	str	r3, [sp]
     944:	e3a03000 	mov	r3, #0
     948:	e58d3004 	str	r3, [sp, #4]
     94c:	e3a03004 	mov	r3, #4
     950:	e58d3008 	str	r3, [sp, #8]
     954:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     958:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     95c:	ebfffeb7 	bl	440 <p_ieee754>
     960:	e1a03000 	mov	r3, r0
     964:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     968:	e0823003 	add	r3, r2, r3
     96c:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     970:	ea00001a 	b	9e0 <kprintn_d+0x308>
     974:	e14b25d4 	ldrd	r2, [fp, #-84]	; 0xffffffac
     978:	e1a00002 	mov	r0, r2
     97c:	e1a01003 	mov	r1, r3
     980:	eb0007e7 	bl	2924 <__aeabi_d2uiz>
     984:	e1a03000 	mov	r3, r0
     988:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     98c:	e1a01003 	mov	r1, r3
     990:	e3a0200a 	mov	r2, #10
     994:	ebfffe29 	bl	240 <kprintn>
     998:	e1a03000 	mov	r3, r0
     99c:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     9a0:	e0823003 	add	r3, r2, r3
     9a4:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     9a8:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     9ac:	e2633034 	rsb	r3, r3, #52	; 0x34
     9b0:	e58d3000 	str	r3, [sp]
     9b4:	e59b3004 	ldr	r3, [fp, #4]
     9b8:	e58d3004 	str	r3, [sp, #4]
     9bc:	e3a03003 	mov	r3, #3
     9c0:	e58d3008 	str	r3, [sp, #8]
     9c4:	e51b0048 	ldr	r0, [fp, #-72]	; 0x48
     9c8:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     9cc:	ebfffe9b 	bl	440 <p_ieee754>
     9d0:	e1a03000 	mov	r3, r0
     9d4:	e51b2034 	ldr	r2, [fp, #-52]	; 0x34
     9d8:	e0823003 	add	r3, r2, r3
     9dc:	e50b3034 	str	r3, [fp, #-52]	; 0x34
     9e0:	e51b3034 	ldr	r3, [fp, #-52]	; 0x34
     9e4:	e1a00003 	mov	r0, r3
     9e8:	e24bd014 	sub	sp, fp, #20
     9ec:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

000009f0 <vprintf>:
     9f0:	e92d4800 	push	{fp, lr}
     9f4:	e28db004 	add	fp, sp, #4
     9f8:	e24dd008 	sub	sp, sp, #8
     9fc:	e50b0008 	str	r0, [fp, #-8]
     a00:	e50b100c 	str	r1, [fp, #-12]
     a04:	e3013184 	movw	r3, #4484	; 0x1184
     a08:	e3403000 	movt	r3, #0
     a0c:	e1a00003 	mov	r0, r3
     a10:	e51b1008 	ldr	r1, [fp, #-8]
     a14:	e51b200c 	ldr	r2, [fp, #-12]
     a18:	eb000003 	bl	a2c <kdoprint>
     a1c:	e1a03000 	mov	r3, r0
     a20:	e1a00003 	mov	r0, r3
     a24:	e24bd004 	sub	sp, fp, #4
     a28:	e8bd8800 	pop	{fp, pc}

00000a2c <kdoprint>:
     a2c:	e92d4810 	push	{r4, fp, lr}
     a30:	e28db008 	add	fp, sp, #8
     a34:	e24dd044 	sub	sp, sp, #68	; 0x44
     a38:	e50b0038 	str	r0, [fp, #-56]	; 0x38
     a3c:	e50b103c 	str	r1, [fp, #-60]	; 0x3c
     a40:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     a44:	e3a03000 	mov	r3, #0
     a48:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     a4c:	e3a03000 	mov	r3, #0
     a50:	e50b302c 	str	r3, [fp, #-44]	; 0x2c
     a54:	e3a03000 	mov	r3, #0
     a58:	e50b3028 	str	r3, [fp, #-40]	; 0x28
     a5c:	ea0001c1 	b	1168 <kdoprint+0x73c>
     a60:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     a64:	e5d33000 	ldrb	r3, [r3]
     a68:	e50b3020 	str	r3, [fp, #-32]
     a6c:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     a70:	e2833001 	add	r3, r3, #1
     a74:	e50b303c 	str	r3, [fp, #-60]	; 0x3c
     a78:	e51b3020 	ldr	r3, [fp, #-32]
     a7c:	e3530000 	cmp	r3, #0
     a80:	0a000002 	beq	a90 <kdoprint+0x64>
     a84:	e3530025 	cmp	r3, #37	; 0x25
     a88:	0a000004 	beq	aa0 <kdoprint+0x74>
     a8c:	ea0001ab 	b	1140 <kdoprint+0x714>
     a90:	e3a03001 	mov	r3, #1
     a94:	e50b302c 	str	r3, [fp, #-44]	; 0x2c
     a98:	ea0001b2 	b	1168 <kdoprint+0x73c>
     a9c:	e1a00000 	nop			; (mov r0, r0)
     aa0:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     aa4:	e5d33000 	ldrb	r3, [r3]
     aa8:	e50b3020 	str	r3, [fp, #-32]
     aac:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     ab0:	e2833001 	add	r3, r3, #1
     ab4:	e50b303c 	str	r3, [fp, #-60]	; 0x3c
     ab8:	e51b3020 	ldr	r3, [fp, #-32]
     abc:	e2833009 	add	r3, r3, #9
     ac0:	e3530081 	cmp	r3, #129	; 0x81
     ac4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
     ac8:	ea0001a5 	b	1164 <kdoprint+0x738>
     acc:	00000a9c 	muleq	r0, ip, sl
     ad0:	00001164 	andeq	r1, r0, r4, ror #2
     ad4:	00001164 	andeq	r1, r0, r4, ror #2
     ad8:	00001164 	andeq	r1, r0, r4, ror #2
     adc:	00001164 	andeq	r1, r0, r4, ror #2
     ae0:	00001164 	andeq	r1, r0, r4, ror #2
     ae4:	00001164 	andeq	r1, r0, r4, ror #2
     ae8:	00001164 	andeq	r1, r0, r4, ror #2
     aec:	00001164 	andeq	r1, r0, r4, ror #2
     af0:	00001164 	andeq	r1, r0, r4, ror #2
     af4:	00001164 	andeq	r1, r0, r4, ror #2
     af8:	00001164 	andeq	r1, r0, r4, ror #2
     afc:	00001164 	andeq	r1, r0, r4, ror #2
     b00:	00001164 	andeq	r1, r0, r4, ror #2
     b04:	00001164 	andeq	r1, r0, r4, ror #2
     b08:	00001164 	andeq	r1, r0, r4, ror #2
     b0c:	00001164 	andeq	r1, r0, r4, ror #2
     b10:	00001164 	andeq	r1, r0, r4, ror #2
     b14:	00001164 	andeq	r1, r0, r4, ror #2
     b18:	00001164 	andeq	r1, r0, r4, ror #2
     b1c:	00001164 	andeq	r1, r0, r4, ror #2
     b20:	00001164 	andeq	r1, r0, r4, ror #2
     b24:	00001164 	andeq	r1, r0, r4, ror #2
     b28:	00001164 	andeq	r1, r0, r4, ror #2
     b2c:	00001164 	andeq	r1, r0, r4, ror #2
     b30:	00001164 	andeq	r1, r0, r4, ror #2
     b34:	00001164 	andeq	r1, r0, r4, ror #2
     b38:	00001164 	andeq	r1, r0, r4, ror #2
     b3c:	00001164 	andeq	r1, r0, r4, ror #2
     b40:	00001164 	andeq	r1, r0, r4, ror #2
     b44:	00001164 	andeq	r1, r0, r4, ror #2
     b48:	00001164 	andeq	r1, r0, r4, ror #2
     b4c:	00001164 	andeq	r1, r0, r4, ror #2
     b50:	00001164 	andeq	r1, r0, r4, ror #2
     b54:	00001164 	andeq	r1, r0, r4, ror #2
     b58:	00001164 	andeq	r1, r0, r4, ror #2
     b5c:	00001164 	andeq	r1, r0, r4, ror #2
     b60:	00001164 	andeq	r1, r0, r4, ror #2
     b64:	00001164 	andeq	r1, r0, r4, ror #2
     b68:	00001164 	andeq	r1, r0, r4, ror #2
     b6c:	00001164 	andeq	r1, r0, r4, ror #2
     b70:	00001164 	andeq	r1, r0, r4, ror #2
     b74:	00001164 	andeq	r1, r0, r4, ror #2
     b78:	00001164 	andeq	r1, r0, r4, ror #2
     b7c:	00001164 	andeq	r1, r0, r4, ror #2
     b80:	00001164 	andeq	r1, r0, r4, ror #2
     b84:	00000df8 	strdeq	r0, [r0], -r8
     b88:	00001164 	andeq	r1, r0, r4, ror #2
     b8c:	00001164 	andeq	r1, r0, r4, ror #2
     b90:	00001164 	andeq	r1, r0, r4, ror #2
     b94:	00001164 	andeq	r1, r0, r4, ror #2
     b98:	00001164 	andeq	r1, r0, r4, ror #2
     b9c:	00001164 	andeq	r1, r0, r4, ror #2
     ba0:	00001164 	andeq	r1, r0, r4, ror #2
     ba4:	00001164 	andeq	r1, r0, r4, ror #2
     ba8:	00000cd4 	ldrdeq	r0, [r0], -r4
     bac:	00001164 	andeq	r1, r0, r4, ror #2
     bb0:	00001164 	andeq	r1, r0, r4, ror #2
     bb4:	00001164 	andeq	r1, r0, r4, ror #2
     bb8:	00001164 	andeq	r1, r0, r4, ror #2
     bbc:	00001164 	andeq	r1, r0, r4, ror #2
     bc0:	00001164 	andeq	r1, r0, r4, ror #2
     bc4:	00001164 	andeq	r1, r0, r4, ror #2
     bc8:	00001164 	andeq	r1, r0, r4, ror #2
     bcc:	00001164 	andeq	r1, r0, r4, ror #2
     bd0:	00001164 	andeq	r1, r0, r4, ror #2
     bd4:	00001164 	andeq	r1, r0, r4, ror #2
     bd8:	00001164 	andeq	r1, r0, r4, ror #2
     bdc:	00001164 	andeq	r1, r0, r4, ror #2
     be0:	00001164 	andeq	r1, r0, r4, ror #2
     be4:	00001164 	andeq	r1, r0, r4, ror #2
     be8:	00001164 	andeq	r1, r0, r4, ror #2
     bec:	00001164 	andeq	r1, r0, r4, ror #2
     bf0:	00001164 	andeq	r1, r0, r4, ror #2
     bf4:	00001164 	andeq	r1, r0, r4, ror #2
     bf8:	00001164 	andeq	r1, r0, r4, ror #2
     bfc:	00001164 	andeq	r1, r0, r4, ror #2
     c00:	00001164 	andeq	r1, r0, r4, ror #2
     c04:	00001164 	andeq	r1, r0, r4, ror #2
     c08:	00001164 	andeq	r1, r0, r4, ror #2
     c0c:	00001164 	andeq	r1, r0, r4, ror #2
     c10:	00000a9c 	muleq	r0, ip, sl
     c14:	00001164 	andeq	r1, r0, r4, ror #2
     c18:	00001164 	andeq	r1, r0, r4, ror #2
     c1c:	00001164 	andeq	r1, r0, r4, ror #2
     c20:	00000f8c 	andeq	r0, r0, ip, lsl #31
     c24:	00001164 	andeq	r1, r0, r4, ror #2
     c28:	00001164 	andeq	r1, r0, r4, ror #2
     c2c:	00001164 	andeq	r1, r0, r4, ror #2
     c30:	00001164 	andeq	r1, r0, r4, ror #2
     c34:	00001164 	andeq	r1, r0, r4, ror #2
     c38:	00001164 	andeq	r1, r0, r4, ror #2
     c3c:	00001164 	andeq	r1, r0, r4, ror #2
     c40:	00001164 	andeq	r1, r0, r4, ror #2
     c44:	00001164 	andeq	r1, r0, r4, ror #2
     c48:	00001164 	andeq	r1, r0, r4, ror #2
     c4c:	00001164 	andeq	r1, r0, r4, ror #2
     c50:	000010dc 	ldrdeq	r1, [r0], -ip
     c54:	00001164 	andeq	r1, r0, r4, ror #2
     c58:	00001164 	andeq	r1, r0, r4, ror #2
     c5c:	00001164 	andeq	r1, r0, r4, ror #2
     c60:	00001164 	andeq	r1, r0, r4, ror #2
     c64:	00001164 	andeq	r1, r0, r4, ror #2
     c68:	00001164 	andeq	r1, r0, r4, ror #2
     c6c:	00001164 	andeq	r1, r0, r4, ror #2
     c70:	00001164 	andeq	r1, r0, r4, ror #2
     c74:	00001164 	andeq	r1, r0, r4, ror #2
     c78:	00001164 	andeq	r1, r0, r4, ror #2
     c7c:	00000e1c 	andeq	r0, r0, ip, lsl lr
     c80:	00000efc 	strdeq	r0, [r0], -ip
     c84:	00001164 	andeq	r1, r0, r4, ror #2
     c88:	00000e54 	andeq	r0, r0, r4, asr lr
     c8c:	00001164 	andeq	r1, r0, r4, ror #2
     c90:	00000a9c 	muleq	r0, ip, sl
     c94:	00000efc 	strdeq	r0, [r0], -ip
     c98:	00001164 	andeq	r1, r0, r4, ror #2
     c9c:	00001164 	andeq	r1, r0, r4, ror #2
     ca0:	00000f8c 	andeq	r0, r0, ip, lsl #31
     ca4:	00001164 	andeq	r1, r0, r4, ror #2
     ca8:	00001164 	andeq	r1, r0, r4, ror #2
     cac:	00000f98 	muleq	r0, r8, pc
     cb0:	00000ff8 	strdeq	r0, [r0], -r8
     cb4:	00001164 	andeq	r1, r0, r4, ror #2
     cb8:	00001164 	andeq	r1, r0, r4, ror #2
     cbc:	00001048 	andeq	r1, r0, r8, asr #32
     cc0:	00001164 	andeq	r1, r0, r4, ror #2
     cc4:	0000107c 	andeq	r1, r0, ip, ror r0
     cc8:	00001164 	andeq	r1, r0, r4, ror #2
     ccc:	00001164 	andeq	r1, r0, r4, ror #2
     cd0:	000010dc 	ldrdeq	r1, [r0], -ip
     cd4:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     cd8:	e5d33000 	ldrb	r3, [r3]
     cdc:	e50b3020 	str	r3, [fp, #-32]
     ce0:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     ce4:	e2833001 	add	r3, r3, #1
     ce8:	e50b303c 	str	r3, [fp, #-60]	; 0x3c
     cec:	e51b3020 	ldr	r3, [fp, #-32]
     cf0:	e3530039 	cmp	r3, #57	; 0x39
     cf4:	ca00000c 	bgt	d2c <kdoprint+0x300>
     cf8:	e51b3020 	ldr	r3, [fp, #-32]
     cfc:	e353002f 	cmp	r3, #47	; 0x2f
     d00:	da000009 	ble	d2c <kdoprint+0x300>
     d04:	e51b3020 	ldr	r3, [fp, #-32]
     d08:	e2433030 	sub	r3, r3, #48	; 0x30
     d0c:	e50b3024 	str	r3, [fp, #-36]	; 0x24
     d10:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     d14:	e5d33000 	ldrb	r3, [r3]
     d18:	e50b3020 	str	r3, [fp, #-32]
     d1c:	e51b303c 	ldr	r3, [fp, #-60]	; 0x3c
     d20:	e2833001 	add	r3, r3, #1
     d24:	e50b303c 	str	r3, [fp, #-60]	; 0x3c
     d28:	ea000008 	b	d50 <kdoprint+0x324>
     d2c:	e51b3020 	ldr	r3, [fp, #-32]
     d30:	e3530066 	cmp	r3, #102	; 0x66
     d34:	1a000002 	bne	d44 <kdoprint+0x318>
     d38:	e3a03005 	mov	r3, #5
     d3c:	e50b3024 	str	r3, [fp, #-36]	; 0x24
     d40:	ea000002 	b	d50 <kdoprint+0x324>
     d44:	e30209d0 	movw	r0, #10704	; 0x29d0
     d48:	e3400000 	movt	r0, #0
     d4c:	ebfffd26 	bl	1ec <printf>
     d50:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     d54:	e2833007 	add	r3, r3, #7
     d58:	e3c33007 	bic	r3, r3, #7
     d5c:	e2832008 	add	r2, r3, #8
     d60:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     d64:	e1c320d0 	ldrd	r2, [r3]
     d68:	e14b21fc 	strd	r2, [fp, #-28]	; 0xffffffe4
     d6c:	e3a03000 	mov	r3, #0
     d70:	e1a04003 	mov	r4, r3
     d74:	e14b01dc 	ldrd	r0, [fp, #-28]	; 0xffffffe4
     d78:	e3a02000 	mov	r2, #0
     d7c:	e3a03000 	mov	r3, #0
     d80:	eb0006b8 	bl	2868 <__aeabi_dcmplt>
     d84:	e1a03000 	mov	r3, r0
     d88:	e3530000 	cmp	r3, #0
     d8c:	0a000001 	beq	d98 <kdoprint+0x36c>
     d90:	e3a03001 	mov	r3, #1
     d94:	e1a04003 	mov	r4, r3
     d98:	e6ef3074 	uxtb	r3, r4
     d9c:	e3530000 	cmp	r3, #0
     da0:	0a00000a 	beq	dd0 <kdoprint+0x3a4>
     da4:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     da8:	e3a0002d 	mov	r0, #45	; 0x2d
     dac:	e12fff33 	blx	r3
     db0:	e51b301c 	ldr	r3, [fp, #-28]
     db4:	e50b301c 	str	r3, [fp, #-28]
     db8:	e51b3018 	ldr	r3, [fp, #-24]
     dbc:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000
     dc0:	e50b3018 	str	r3, [fp, #-24]
     dc4:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     dc8:	e2833001 	add	r3, r3, #1
     dcc:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     dd0:	e51b3024 	ldr	r3, [fp, #-36]	; 0x24
     dd4:	e58d3000 	str	r3, [sp]
     dd8:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
     ddc:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     de0:	ebfffe3c 	bl	6d8 <kprintn_d>
     de4:	e1a03000 	mov	r3, r0
     de8:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
     dec:	e0823003 	add	r3, r2, r3
     df0:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     df4:	ea0000d0 	b	113c <kdoprint+0x710>
     df8:	e51b3020 	ldr	r3, [fp, #-32]
     dfc:	e6ef2073 	uxtb	r2, r3
     e00:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     e04:	e1a00002 	mov	r0, r2
     e08:	e12fff33 	blx	r3
     e0c:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     e10:	e2833001 	add	r3, r3, #1
     e14:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     e18:	ea0000c7 	b	113c <kdoprint+0x710>
     e1c:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     e20:	e2832004 	add	r2, r3, #4
     e24:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     e28:	e5933000 	ldr	r3, [r3]
     e2c:	e50b3020 	str	r3, [fp, #-32]
     e30:	e51b3020 	ldr	r3, [fp, #-32]
     e34:	e6ef2073 	uxtb	r2, r3
     e38:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     e3c:	e1a00002 	mov	r0, r2
     e40:	e12fff33 	blx	r3
     e44:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     e48:	e2833001 	add	r3, r3, #1
     e4c:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     e50:	ea0000b9 	b	113c <kdoprint+0x710>
     e54:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     e58:	e2833007 	add	r3, r3, #7
     e5c:	e3c33007 	bic	r3, r3, #7
     e60:	e2832008 	add	r2, r3, #8
     e64:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     e68:	e1c320d0 	ldrd	r2, [r3]
     e6c:	e14b21fc 	strd	r2, [fp, #-28]	; 0xffffffe4
     e70:	e3a03000 	mov	r3, #0
     e74:	e1a04003 	mov	r4, r3
     e78:	e14b01dc 	ldrd	r0, [fp, #-28]	; 0xffffffe4
     e7c:	e3a02000 	mov	r2, #0
     e80:	e3a03000 	mov	r3, #0
     e84:	eb000677 	bl	2868 <__aeabi_dcmplt>
     e88:	e1a03000 	mov	r3, r0
     e8c:	e3530000 	cmp	r3, #0
     e90:	0a000001 	beq	e9c <kdoprint+0x470>
     e94:	e3a03001 	mov	r3, #1
     e98:	e1a04003 	mov	r4, r3
     e9c:	e6ef3074 	uxtb	r3, r4
     ea0:	e3530000 	cmp	r3, #0
     ea4:	0a00000a 	beq	ed4 <kdoprint+0x4a8>
     ea8:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     eac:	e3a0002d 	mov	r0, #45	; 0x2d
     eb0:	e12fff33 	blx	r3
     eb4:	e51b301c 	ldr	r3, [fp, #-28]
     eb8:	e50b301c 	str	r3, [fp, #-28]
     ebc:	e51b3018 	ldr	r3, [fp, #-24]
     ec0:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000
     ec4:	e50b3018 	str	r3, [fp, #-24]
     ec8:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     ecc:	e2833001 	add	r3, r3, #1
     ed0:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     ed4:	e3a03005 	mov	r3, #5
     ed8:	e58d3000 	str	r3, [sp]
     edc:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
     ee0:	e14b21dc 	ldrd	r2, [fp, #-28]	; 0xffffffe4
     ee4:	ebfffdfb 	bl	6d8 <kprintn_d>
     ee8:	e1a03000 	mov	r3, r0
     eec:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
     ef0:	e0823003 	add	r3, r2, r3
     ef4:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     ef8:	ea00008f 	b	113c <kdoprint+0x710>
     efc:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     f00:	e3530000 	cmp	r3, #0
     f04:	0a000004 	beq	f1c <kdoprint+0x4f0>
     f08:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     f0c:	e2832004 	add	r2, r3, #4
     f10:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     f14:	e5933000 	ldr	r3, [r3]
     f18:	ea000003 	b	f2c <kdoprint+0x500>
     f1c:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     f20:	e2832004 	add	r2, r3, #4
     f24:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     f28:	e5933000 	ldr	r3, [r3]
     f2c:	e50b3010 	str	r3, [fp, #-16]
     f30:	e51b3010 	ldr	r3, [fp, #-16]
     f34:	e3530000 	cmp	r3, #0
     f38:	aa000008 	bge	f60 <kdoprint+0x534>
     f3c:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
     f40:	e3a0002d 	mov	r0, #45	; 0x2d
     f44:	e12fff33 	blx	r3
     f48:	e51b3010 	ldr	r3, [fp, #-16]
     f4c:	e2633000 	rsb	r3, r3, #0
     f50:	e50b3010 	str	r3, [fp, #-16]
     f54:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
     f58:	e2833001 	add	r3, r3, #1
     f5c:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     f60:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
     f64:	e51b1010 	ldr	r1, [fp, #-16]
     f68:	e3a0200a 	mov	r2, #10
     f6c:	ebfffcb3 	bl	240 <kprintn>
     f70:	e1a03000 	mov	r3, r0
     f74:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
     f78:	e0823003 	add	r3, r2, r3
     f7c:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     f80:	e3a03000 	mov	r3, #0
     f84:	e50b3028 	str	r3, [fp, #-40]	; 0x28
     f88:	ea00006b 	b	113c <kdoprint+0x710>
     f8c:	e3a03001 	mov	r3, #1
     f90:	e50b3028 	str	r3, [fp, #-40]	; 0x28
     f94:	eafffec1 	b	aa0 <kdoprint+0x74>
     f98:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
     f9c:	e3530000 	cmp	r3, #0
     fa0:	0a000004 	beq	fb8 <kdoprint+0x58c>
     fa4:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     fa8:	e2832004 	add	r2, r3, #4
     fac:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     fb0:	e5933000 	ldr	r3, [r3]
     fb4:	ea000003 	b	fc8 <kdoprint+0x59c>
     fb8:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     fbc:	e2832004 	add	r2, r3, #4
     fc0:	e50b2040 	str	r2, [fp, #-64]	; 0x40
     fc4:	e5933000 	ldr	r3, [r3]
     fc8:	e50b3010 	str	r3, [fp, #-16]
     fcc:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
     fd0:	e51b1010 	ldr	r1, [fp, #-16]
     fd4:	e3a02008 	mov	r2, #8
     fd8:	ebfffc98 	bl	240 <kprintn>
     fdc:	e1a03000 	mov	r3, r0
     fe0:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
     fe4:	e0823003 	add	r3, r2, r3
     fe8:	e50b3030 	str	r3, [fp, #-48]	; 0x30
     fec:	e3a03000 	mov	r3, #0
     ff0:	e50b3028 	str	r3, [fp, #-40]	; 0x28
     ff4:	ea000050 	b	113c <kdoprint+0x710>
     ff8:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
     ffc:	e2832004 	add	r2, r3, #4
    1000:	e50b2040 	str	r2, [fp, #-64]	; 0x40
    1004:	e5933000 	ldr	r3, [r3]
    1008:	e50b3010 	str	r3, [fp, #-16]
    100c:	e30209e8 	movw	r0, #10728	; 0x29e8
    1010:	e3400000 	movt	r0, #0
    1014:	eb000064 	bl	11ac <puts>
    1018:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
    101c:	e51b1010 	ldr	r1, [fp, #-16]
    1020:	e3a02010 	mov	r2, #16
    1024:	ebfffc85 	bl	240 <kprintn>
    1028:	e1a02000 	mov	r2, r0
    102c:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
    1030:	e0823003 	add	r3, r2, r3
    1034:	e2833002 	add	r3, r3, #2
    1038:	e50b3030 	str	r3, [fp, #-48]	; 0x30
    103c:	e3a03000 	mov	r3, #0
    1040:	e50b3028 	str	r3, [fp, #-40]	; 0x28
    1044:	ea00003c 	b	113c <kdoprint+0x710>
    1048:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
    104c:	e2832004 	add	r2, r3, #4
    1050:	e50b2040 	str	r2, [fp, #-64]	; 0x40
    1054:	e5933000 	ldr	r3, [r3]
    1058:	e50b3020 	str	r3, [fp, #-32]
    105c:	e51b3020 	ldr	r3, [fp, #-32]
    1060:	e1a00003 	mov	r0, r3
    1064:	eb000050 	bl	11ac <puts>
    1068:	e1a03000 	mov	r3, r0
    106c:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
    1070:	e0823003 	add	r3, r2, r3
    1074:	e50b3030 	str	r3, [fp, #-48]	; 0x30
    1078:	ea00002f 	b	113c <kdoprint+0x710>
    107c:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
    1080:	e3530000 	cmp	r3, #0
    1084:	0a000004 	beq	109c <kdoprint+0x670>
    1088:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
    108c:	e2832004 	add	r2, r3, #4
    1090:	e50b2040 	str	r2, [fp, #-64]	; 0x40
    1094:	e5933000 	ldr	r3, [r3]
    1098:	ea000003 	b	10ac <kdoprint+0x680>
    109c:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
    10a0:	e2832004 	add	r2, r3, #4
    10a4:	e50b2040 	str	r2, [fp, #-64]	; 0x40
    10a8:	e5933000 	ldr	r3, [r3]
    10ac:	e50b3010 	str	r3, [fp, #-16]
    10b0:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
    10b4:	e51b1010 	ldr	r1, [fp, #-16]
    10b8:	e3a0200a 	mov	r2, #10
    10bc:	ebfffc5f 	bl	240 <kprintn>
    10c0:	e1a03000 	mov	r3, r0
    10c4:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
    10c8:	e0823003 	add	r3, r2, r3
    10cc:	e50b3030 	str	r3, [fp, #-48]	; 0x30
    10d0:	e3a03000 	mov	r3, #0
    10d4:	e50b3028 	str	r3, [fp, #-40]	; 0x28
    10d8:	ea000017 	b	113c <kdoprint+0x710>
    10dc:	e51b3028 	ldr	r3, [fp, #-40]	; 0x28
    10e0:	e3530000 	cmp	r3, #0
    10e4:	0a000004 	beq	10fc <kdoprint+0x6d0>
    10e8:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
    10ec:	e2832004 	add	r2, r3, #4
    10f0:	e50b2040 	str	r2, [fp, #-64]	; 0x40
    10f4:	e5933000 	ldr	r3, [r3]
    10f8:	ea000003 	b	110c <kdoprint+0x6e0>
    10fc:	e51b3040 	ldr	r3, [fp, #-64]	; 0x40
    1100:	e2832004 	add	r2, r3, #4
    1104:	e50b2040 	str	r2, [fp, #-64]	; 0x40
    1108:	e5933000 	ldr	r3, [r3]
    110c:	e50b3010 	str	r3, [fp, #-16]
    1110:	e51b0038 	ldr	r0, [fp, #-56]	; 0x38
    1114:	e51b1010 	ldr	r1, [fp, #-16]
    1118:	e3a02010 	mov	r2, #16
    111c:	ebfffc47 	bl	240 <kprintn>
    1120:	e1a03000 	mov	r3, r0
    1124:	e51b2030 	ldr	r2, [fp, #-48]	; 0x30
    1128:	e0823003 	add	r3, r2, r3
    112c:	e50b3030 	str	r3, [fp, #-48]	; 0x30
    1130:	e3a03000 	mov	r3, #0
    1134:	e50b3028 	str	r3, [fp, #-40]	; 0x28
    1138:	ea00000a 	b	1168 <kdoprint+0x73c>
    113c:	ea000009 	b	1168 <kdoprint+0x73c>
    1140:	e51b3020 	ldr	r3, [fp, #-32]
    1144:	e6ef2073 	uxtb	r2, r3
    1148:	e51b3038 	ldr	r3, [fp, #-56]	; 0x38
    114c:	e1a00002 	mov	r0, r2
    1150:	e12fff33 	blx	r3
    1154:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
    1158:	e2833001 	add	r3, r3, #1
    115c:	e50b3030 	str	r3, [fp, #-48]	; 0x30
    1160:	ea000000 	b	1168 <kdoprint+0x73c>
    1164:	e1a00000 	nop			; (mov r0, r0)
    1168:	e51b302c 	ldr	r3, [fp, #-44]	; 0x2c
    116c:	e3530000 	cmp	r3, #0
    1170:	0afffe3a 	beq	a60 <kdoprint+0x34>
    1174:	e51b3030 	ldr	r3, [fp, #-48]	; 0x30
    1178:	e1a00003 	mov	r0, r3
    117c:	e24bd008 	sub	sp, fp, #8
    1180:	e8bd8810 	pop	{r4, fp, pc}

00001184 <putchar>:
    1184:	e92d4800 	push	{fp, lr}
    1188:	e28db004 	add	fp, sp, #4
    118c:	e24dd008 	sub	sp, sp, #8
    1190:	e1a03000 	mov	r3, r0
    1194:	e54b3005 	strb	r3, [fp, #-5]
    1198:	e55b3005 	ldrb	r3, [fp, #-5]
    119c:	e1a00003 	mov	r0, r3
    11a0:	eb000277 	bl	1b84 <uart_tx_char>
    11a4:	e24bd004 	sub	sp, fp, #4
    11a8:	e8bd8800 	pop	{fp, pc}

000011ac <puts>:
    11ac:	e92d4800 	push	{fp, lr}
    11b0:	e28db004 	add	fp, sp, #4
    11b4:	e24dd008 	sub	sp, sp, #8
    11b8:	e50b0008 	str	r0, [fp, #-8]
    11bc:	e51b0008 	ldr	r0, [fp, #-8]
    11c0:	eb000289 	bl	1bec <uart_tx_string>
    11c4:	e1a03000 	mov	r3, r0
    11c8:	e1a00003 	mov	r0, r3
    11cc:	e24bd004 	sub	sp, fp, #4
    11d0:	e8bd8800 	pop	{fp, pc}

000011d4 <getchar>:
    11d4:	e92d4800 	push	{fp, lr}
    11d8:	e28db004 	add	fp, sp, #4
    11dc:	eb00029c 	bl	1c54 <uart_rx_char>
    11e0:	e1a03000 	mov	r3, r0
    11e4:	e1a00003 	mov	r0, r3
    11e8:	e8bd8800 	pop	{fp, pc}

000011ec <memcpy>:
    11ec:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    11f0:	e28db000 	add	fp, sp, #0
    11f4:	e24dd01c 	sub	sp, sp, #28
    11f8:	e50b0010 	str	r0, [fp, #-16]
    11fc:	e50b1014 	str	r1, [fp, #-20]
    1200:	e50b2018 	str	r2, [fp, #-24]
    1204:	e51b3010 	ldr	r3, [fp, #-16]
    1208:	e50b300c 	str	r3, [fp, #-12]
    120c:	e51b3014 	ldr	r3, [fp, #-20]
    1210:	e50b3008 	str	r3, [fp, #-8]
    1214:	ea00000c 	b	124c <memcpy+0x60>
    1218:	e51b3008 	ldr	r3, [fp, #-8]
    121c:	e5d32000 	ldrb	r2, [r3]
    1220:	e51b300c 	ldr	r3, [fp, #-12]
    1224:	e5c32000 	strb	r2, [r3]
    1228:	e51b300c 	ldr	r3, [fp, #-12]
    122c:	e2833001 	add	r3, r3, #1
    1230:	e50b300c 	str	r3, [fp, #-12]
    1234:	e51b3008 	ldr	r3, [fp, #-8]
    1238:	e2833001 	add	r3, r3, #1
    123c:	e50b3008 	str	r3, [fp, #-8]
    1240:	e51b3018 	ldr	r3, [fp, #-24]
    1244:	e2433001 	sub	r3, r3, #1
    1248:	e50b3018 	str	r3, [fp, #-24]
    124c:	e51b3018 	ldr	r3, [fp, #-24]
    1250:	e3530000 	cmp	r3, #0
    1254:	1affffef 	bne	1218 <memcpy+0x2c>
    1258:	e51b3010 	ldr	r3, [fp, #-16]
    125c:	e1a00003 	mov	r0, r3
    1260:	e28bd000 	add	sp, fp, #0
    1264:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1268:	e12fff1e 	bx	lr

0000126c <memset>:
    126c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1270:	e28db000 	add	fp, sp, #0
    1274:	e24dd01c 	sub	sp, sp, #28
    1278:	e50b0010 	str	r0, [fp, #-16]
    127c:	e1a03001 	mov	r3, r1
    1280:	e50b2018 	str	r2, [fp, #-24]
    1284:	e54b3011 	strb	r3, [fp, #-17]
    1288:	e51b3010 	ldr	r3, [fp, #-16]
    128c:	e50b3008 	str	r3, [fp, #-8]
    1290:	ea000008 	b	12b8 <memset+0x4c>
    1294:	e51b3008 	ldr	r3, [fp, #-8]
    1298:	e55b2011 	ldrb	r2, [fp, #-17]
    129c:	e5c32000 	strb	r2, [r3]
    12a0:	e51b3008 	ldr	r3, [fp, #-8]
    12a4:	e2833001 	add	r3, r3, #1
    12a8:	e50b3008 	str	r3, [fp, #-8]
    12ac:	e51b3018 	ldr	r3, [fp, #-24]
    12b0:	e2433001 	sub	r3, r3, #1
    12b4:	e50b3018 	str	r3, [fp, #-24]
    12b8:	e51b3018 	ldr	r3, [fp, #-24]
    12bc:	e3530000 	cmp	r3, #0
    12c0:	1afffff3 	bne	1294 <memset+0x28>
    12c4:	e51b3010 	ldr	r3, [fp, #-16]
    12c8:	e1a00003 	mov	r0, r3
    12cc:	e28bd000 	add	sp, fp, #0
    12d0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    12d4:	e12fff1e 	bx	lr

000012d8 <memcmp>:
    12d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    12dc:	e28db000 	add	fp, sp, #0
    12e0:	e24dd024 	sub	sp, sp, #36	; 0x24
    12e4:	e50b0018 	str	r0, [fp, #-24]
    12e8:	e50b101c 	str	r1, [fp, #-28]
    12ec:	e50b2020 	str	r2, [fp, #-32]
    12f0:	e3a03001 	mov	r3, #1
    12f4:	e50b3008 	str	r3, [fp, #-8]
    12f8:	e51b3018 	ldr	r3, [fp, #-24]
    12fc:	e50b3010 	str	r3, [fp, #-16]
    1300:	e51b301c 	ldr	r3, [fp, #-28]
    1304:	e50b300c 	str	r3, [fp, #-12]
    1308:	ea000012 	b	1358 <memcmp+0x80>
    130c:	e51b3010 	ldr	r3, [fp, #-16]
    1310:	e5d32000 	ldrb	r2, [r3]
    1314:	e51b300c 	ldr	r3, [fp, #-12]
    1318:	e5d33000 	ldrb	r3, [r3]
    131c:	e1520003 	cmp	r2, r3
    1320:	1a000009 	bne	134c <memcmp+0x74>
    1324:	e51b3010 	ldr	r3, [fp, #-16]
    1328:	e2833001 	add	r3, r3, #1
    132c:	e50b3010 	str	r3, [fp, #-16]
    1330:	e51b300c 	ldr	r3, [fp, #-12]
    1334:	e2833001 	add	r3, r3, #1
    1338:	e50b300c 	str	r3, [fp, #-12]
    133c:	e51b3020 	ldr	r3, [fp, #-32]
    1340:	e2433001 	sub	r3, r3, #1
    1344:	e50b3020 	str	r3, [fp, #-32]
    1348:	ea000002 	b	1358 <memcmp+0x80>
    134c:	e3a03000 	mov	r3, #0
    1350:	e50b3008 	str	r3, [fp, #-8]
    1354:	ea000002 	b	1364 <memcmp+0x8c>
    1358:	e51b3020 	ldr	r3, [fp, #-32]
    135c:	e3530000 	cmp	r3, #0
    1360:	1affffe9 	bne	130c <memcmp+0x34>
    1364:	e51b3008 	ldr	r3, [fp, #-8]
    1368:	e1a00003 	mov	r0, r3
    136c:	e28bd000 	add	sp, fp, #0
    1370:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1374:	e12fff1e 	bx	lr

00001378 <strcmp>:
    1378:	e92d4800 	push	{fp, lr}
    137c:	e28db004 	add	fp, sp, #4
    1380:	e24dd010 	sub	sp, sp, #16
    1384:	e50b0010 	str	r0, [fp, #-16]
    1388:	e50b1014 	str	r1, [fp, #-20]
    138c:	e3a03001 	mov	r3, #1
    1390:	e50b300c 	str	r3, [fp, #-12]
    1394:	e51b0010 	ldr	r0, [fp, #-16]
    1398:	eb000023 	bl	142c <strlen>
    139c:	e1a03000 	mov	r3, r0
    13a0:	e50b3008 	str	r3, [fp, #-8]
    13a4:	e51b0014 	ldr	r0, [fp, #-20]
    13a8:	eb00001f 	bl	142c <strlen>
    13ac:	e1a03000 	mov	r3, r0
    13b0:	e51b2008 	ldr	r2, [fp, #-8]
    13b4:	e1520003 	cmp	r2, r3
    13b8:	0a000014 	beq	1410 <strcmp+0x98>
    13bc:	e3a03000 	mov	r3, #0
    13c0:	e50b300c 	str	r3, [fp, #-12]
    13c4:	ea000014 	b	141c <strcmp+0xa4>
    13c8:	e51b3010 	ldr	r3, [fp, #-16]
    13cc:	e5d32000 	ldrb	r2, [r3]
    13d0:	e51b3014 	ldr	r3, [fp, #-20]
    13d4:	e5d33000 	ldrb	r3, [r3]
    13d8:	e1520003 	cmp	r2, r3
    13dc:	0a000002 	beq	13ec <strcmp+0x74>
    13e0:	e3a03000 	mov	r3, #0
    13e4:	e50b300c 	str	r3, [fp, #-12]
    13e8:	ea00000b 	b	141c <strcmp+0xa4>
    13ec:	e51b3010 	ldr	r3, [fp, #-16]
    13f0:	e2833001 	add	r3, r3, #1
    13f4:	e50b3010 	str	r3, [fp, #-16]
    13f8:	e51b3014 	ldr	r3, [fp, #-20]
    13fc:	e2833001 	add	r3, r3, #1
    1400:	e50b3014 	str	r3, [fp, #-20]
    1404:	e51b3008 	ldr	r3, [fp, #-8]
    1408:	e2433001 	sub	r3, r3, #1
    140c:	e50b3008 	str	r3, [fp, #-8]
    1410:	e51b3008 	ldr	r3, [fp, #-8]
    1414:	e3530000 	cmp	r3, #0
    1418:	1affffea 	bne	13c8 <strcmp+0x50>
    141c:	e51b300c 	ldr	r3, [fp, #-12]
    1420:	e1a00003 	mov	r0, r3
    1424:	e24bd004 	sub	sp, fp, #4
    1428:	e8bd8800 	pop	{fp, pc}

0000142c <strlen>:
    142c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1430:	e28db000 	add	fp, sp, #0
    1434:	e24dd014 	sub	sp, sp, #20
    1438:	e50b0010 	str	r0, [fp, #-16]
    143c:	e3a03000 	mov	r3, #0
    1440:	e50b3008 	str	r3, [fp, #-8]
    1444:	ea000005 	b	1460 <strlen+0x34>
    1448:	e51b3010 	ldr	r3, [fp, #-16]
    144c:	e2833001 	add	r3, r3, #1
    1450:	e50b3010 	str	r3, [fp, #-16]
    1454:	e51b3008 	ldr	r3, [fp, #-8]
    1458:	e2833001 	add	r3, r3, #1
    145c:	e50b3008 	str	r3, [fp, #-8]
    1460:	e51b3010 	ldr	r3, [fp, #-16]
    1464:	e5d33000 	ldrb	r3, [r3]
    1468:	e3530000 	cmp	r3, #0
    146c:	1afffff5 	bne	1448 <strlen+0x1c>
    1470:	e51b3008 	ldr	r3, [fp, #-8]
    1474:	e1a00003 	mov	r0, r3
    1478:	e28bd000 	add	sp, fp, #0
    147c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1480:	e12fff1e 	bx	lr

00001484 <strcpy>:
    1484:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1488:	e28db000 	add	fp, sp, #0
    148c:	e24dd014 	sub	sp, sp, #20
    1490:	e50b0010 	str	r0, [fp, #-16]
    1494:	e50b1014 	str	r1, [fp, #-20]
    1498:	e51b3010 	ldr	r3, [fp, #-16]
    149c:	e50b300c 	str	r3, [fp, #-12]
    14a0:	e51b3014 	ldr	r3, [fp, #-20]
    14a4:	e50b3008 	str	r3, [fp, #-8]
    14a8:	ea000009 	b	14d4 <strcpy+0x50>
    14ac:	e51b3008 	ldr	r3, [fp, #-8]
    14b0:	e5d32000 	ldrb	r2, [r3]
    14b4:	e51b300c 	ldr	r3, [fp, #-12]
    14b8:	e5c32000 	strb	r2, [r3]
    14bc:	e51b300c 	ldr	r3, [fp, #-12]
    14c0:	e2833001 	add	r3, r3, #1
    14c4:	e50b300c 	str	r3, [fp, #-12]
    14c8:	e51b3008 	ldr	r3, [fp, #-8]
    14cc:	e2833001 	add	r3, r3, #1
    14d0:	e50b3008 	str	r3, [fp, #-8]
    14d4:	e51b3008 	ldr	r3, [fp, #-8]
    14d8:	e5d33000 	ldrb	r3, [r3]
    14dc:	e3530000 	cmp	r3, #0
    14e0:	1afffff1 	bne	14ac <strcpy+0x28>
    14e4:	e51b300c 	ldr	r3, [fp, #-12]
    14e8:	e3a02000 	mov	r2, #0
    14ec:	e5c32000 	strb	r2, [r3]
    14f0:	e51b3010 	ldr	r3, [fp, #-16]
    14f4:	e1a00003 	mov	r0, r3
    14f8:	e28bd000 	add	sp, fp, #0
    14fc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1500:	e12fff1e 	bx	lr

00001504 <strcat>:
    1504:	e92d4800 	push	{fp, lr}
    1508:	e28db004 	add	fp, sp, #4
    150c:	e24dd010 	sub	sp, sp, #16
    1510:	e50b0010 	str	r0, [fp, #-16]
    1514:	e50b1014 	str	r1, [fp, #-20]
    1518:	e51b3010 	ldr	r3, [fp, #-16]
    151c:	e50b300c 	str	r3, [fp, #-12]
    1520:	e51b3014 	ldr	r3, [fp, #-20]
    1524:	e50b3008 	str	r3, [fp, #-8]
    1528:	ea000002 	b	1538 <strcat+0x34>
    152c:	e51b300c 	ldr	r3, [fp, #-12]
    1530:	e2833001 	add	r3, r3, #1
    1534:	e50b300c 	str	r3, [fp, #-12]
    1538:	e51b300c 	ldr	r3, [fp, #-12]
    153c:	e5d33000 	ldrb	r3, [r3]
    1540:	e3530000 	cmp	r3, #0
    1544:	1afffff8 	bne	152c <strcat+0x28>
    1548:	e51b000c 	ldr	r0, [fp, #-12]
    154c:	e51b1008 	ldr	r1, [fp, #-8]
    1550:	ebffffcb 	bl	1484 <strcpy>
    1554:	e51b3010 	ldr	r3, [fp, #-16]
    1558:	e1a00003 	mov	r0, r3
    155c:	e24bd004 	sub	sp, fp, #4
    1560:	e8bd8800 	pop	{fp, pc}

00001564 <IRQ_Handler>:
    1564:	e24ee004 	sub	lr, lr, #4
    1568:	e92d580f 	push	{r0, r1, r2, r3, fp, ip, lr}
    156c:	e28db018 	add	fp, sp, #24
    1570:	e24dd00c 	sub	sp, sp, #12
    1574:	e3003000 	movw	r3, #0
    1578:	e3413014 	movt	r3, #4116	; 0x1014
    157c:	e5933000 	ldr	r3, [r3]
    1580:	e50b3024 	str	r3, [fp, #-36]	; 0x24
    1584:	e3a03000 	mov	r3, #0
    1588:	e50b3020 	str	r3, [fp, #-32]
    158c:	ea000016 	b	15ec <IRQ_Handler+0x88>
    1590:	e51b2024 	ldr	r2, [fp, #-36]	; 0x24
    1594:	e51b3020 	ldr	r3, [fp, #-32]
    1598:	e1a03332 	lsr	r3, r2, r3
    159c:	e2033001 	and	r3, r3, #1
    15a0:	e6ef3073 	uxtb	r3, r3
    15a4:	e3530000 	cmp	r3, #0
    15a8:	0a00000c 	beq	15e0 <IRQ_Handler+0x7c>
    15ac:	e51b3020 	ldr	r3, [fp, #-32]
    15b0:	e3530004 	cmp	r3, #4
    15b4:	0a000002 	beq	15c4 <IRQ_Handler+0x60>
    15b8:	e3530005 	cmp	r3, #5
    15bc:	0a000002 	beq	15cc <IRQ_Handler+0x68>
    15c0:	ea000003 	b	15d4 <IRQ_Handler+0x70>
    15c4:	eb00003d 	bl	16c0 <TimerAHB1IntHandler>
    15c8:	ea000004 	b	15e0 <IRQ_Handler+0x7c>
    15cc:	eb000043 	bl	16e0 <TimerAHB2IntHandler>
    15d0:	ea000002 	b	15e0 <IRQ_Handler+0x7c>
    15d4:	e3020a40 	movw	r0, #10816	; 0x2a40
    15d8:	e3400000 	movt	r0, #0
    15dc:	ebfffb02 	bl	1ec <printf>
    15e0:	e51b3020 	ldr	r3, [fp, #-32]
    15e4:	e2833001 	add	r3, r3, #1
    15e8:	e50b3020 	str	r3, [fp, #-32]
    15ec:	e51b3020 	ldr	r3, [fp, #-32]
    15f0:	e353001e 	cmp	r3, #30
    15f4:	daffffe5 	ble	1590 <IRQ_Handler+0x2c>
    15f8:	e24bd018 	sub	sp, fp, #24
    15fc:	e8fd980f 	ldm	sp!, {r0, r1, r2, r3, fp, ip, pc}^

00001600 <DAB_Handler>:
    1600:	e24ee004 	sub	lr, lr, #4
    1604:	e92d580f 	push	{r0, r1, r2, r3, fp, ip, lr}
    1608:	e28db018 	add	fp, sp, #24
    160c:	e24dd004 	sub	sp, sp, #4
    1610:	e3020a58 	movw	r0, #10840	; 0x2a58
    1614:	e3400000 	movt	r0, #0
    1618:	ebfffaf3 	bl	1ec <printf>
    161c:	eafffffb 	b	1610 <DAB_Handler+0x10>

00001620 <RST_Handler>:
    1620:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1624:	e28db000 	add	fp, sp, #0
    1628:	e3a0f040 	mov	pc, #64	; 0x40
    162c:	e28bd000 	add	sp, fp, #0
    1630:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1634:	e12fff1e 	bx	lr

00001638 <UND_Handler>:
    1638:	e92d580f 	push	{r0, r1, r2, r3, fp, ip, lr}
    163c:	e28db018 	add	fp, sp, #24
    1640:	e24dd004 	sub	sp, sp, #4
    1644:	e3020a74 	movw	r0, #10868	; 0x2a74
    1648:	e3400000 	movt	r0, #0
    164c:	ebfffae6 	bl	1ec <printf>
    1650:	eafffffb 	b	1644 <UND_Handler+0xc>

00001654 <SWI_Handler>:
    1654:	e92d580f 	push	{r0, r1, r2, r3, fp, ip, lr}
    1658:	e28db018 	add	fp, sp, #24
    165c:	e24dd00c 	sub	sp, sp, #12
    1660:	ee103fb0 	mrc	15, 0, r3, cr0, cr0, {5}
    1664:	e50b3020 	str	r3, [fp, #-32]
    1668:	e3020a90 	movw	r0, #10896	; 0x2a90
    166c:	e3400000 	movt	r0, #0
    1670:	e51b1020 	ldr	r1, [fp, #-32]
    1674:	ebfffadc 	bl	1ec <printf>
    1678:	e24bd018 	sub	sp, fp, #24
    167c:	e8fd980f 	ldm	sp!, {r0, r1, r2, r3, fp, ip, pc}^

00001680 <PRE_Handler>:
    1680:	e24ee004 	sub	lr, lr, #4
    1684:	e92d580f 	push	{r0, r1, r2, r3, fp, ip, lr}
    1688:	e28db018 	add	fp, sp, #24
    168c:	e24dd004 	sub	sp, sp, #4
    1690:	e3020ab8 	movw	r0, #10936	; 0x2ab8
    1694:	e3400000 	movt	r0, #0
    1698:	ebfffad3 	bl	1ec <printf>
    169c:	eafffffb 	b	1690 <PRE_Handler+0x10>

000016a0 <FIQ_Handler>:
    16a0:	e24ee004 	sub	lr, lr, #4
    16a4:	e92d400f 	push	{r0, r1, r2, r3, lr}
    16a8:	e28db010 	add	fp, sp, #16
    16ac:	e24dd004 	sub	sp, sp, #4
    16b0:	e3020ad8 	movw	r0, #10968	; 0x2ad8
    16b4:	e3400000 	movt	r0, #0
    16b8:	ebfffacb 	bl	1ec <printf>
    16bc:	eafffffb 	b	16b0 <FIQ_Handler+0x10>

000016c0 <TimerAHB1IntHandler>:
    16c0:	e92d4800 	push	{fp, lr}
    16c4:	e28db004 	add	fp, sp, #4
    16c8:	e302300c 	movw	r3, #8204	; 0x200c
    16cc:	e341301e 	movt	r3, #4126	; 0x101e
    16d0:	e3a02000 	mov	r2, #0
    16d4:	e5832000 	str	r2, [r3]
    16d8:	eb0001ac 	bl	1d90 <vic_clear>
    16dc:	e8bd8800 	pop	{fp, pc}

000016e0 <TimerAHB2IntHandler>:
    16e0:	e92d4800 	push	{fp, lr}
    16e4:	e28db004 	add	fp, sp, #4
    16e8:	e302302c 	movw	r3, #8236	; 0x202c
    16ec:	e341301e 	movt	r3, #4126	; 0x101e
    16f0:	e3a02000 	mov	r2, #0
    16f4:	e5832000 	str	r2, [r3]
    16f8:	eb0001a4 	bl	1d90 <vic_clear>
    16fc:	e8bd8800 	pop	{fp, pc}

00001700 <bthread_mutex_lock>:
    1700:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1704:	e28db000 	add	fp, sp, #0
    1708:	e24dd00c 	sub	sp, sp, #12
    170c:	e50b0008 	str	r0, [fp, #-8]

00001710 <spin_in>:
    1710:	e92d0006 	push	{r1, r2}
    1714:	e3a01001 	mov	r1, #1
    1718:	e3a02000 	mov	r2, #0
    171c:	e1a02a02 	lsl	r2, r2, #20
    1720:	e51b3008 	ldr	r3, [fp, #-8]
    1724:	e1822003 	orr	r2, r2, r3

00001728 <spin_loop>:
    1728:	e1421091 	swpb	r1, r1, [r2]
    172c:	e3510001 	cmp	r1, #1
    1730:	0afffffc 	beq	1728 <spin_loop>

00001734 <lock_held>:
    1734:	e4812000 	str	r2, [r1], #0
    1738:	e8bd0006 	pop	{r1, r2}
    173c:	e28bd000 	add	sp, fp, #0
    1740:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1744:	e12fff1e 	bx	lr

00001748 <bthread_mutex_unlock>:
    1748:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    174c:	e28db000 	add	fp, sp, #0
    1750:	e24dd00c 	sub	sp, sp, #12
    1754:	e50b0008 	str	r0, [fp, #-8]

00001758 <spin_out>:
    1758:	e92d0006 	push	{r1, r2}
    175c:	e3a01000 	mov	r1, #0
    1760:	e3a02000 	mov	r2, #0
    1764:	e1a02a02 	lsl	r2, r2, #20
    1768:	e51b3008 	ldr	r3, [fp, #-8]
    176c:	e1822003 	orr	r2, r2, r3
    1770:	e5c21000 	strb	r1, [r2]

00001774 <lock_realse>:
    1774:	e5812004 	str	r2, [r1, #4]
    1778:	e8bd0006 	pop	{r1, r2}
    177c:	e28bd000 	add	sp, fp, #0
    1780:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1784:	e12fff1e 	bx	lr

00001788 <bthread_mutex_lock_b>:
    1788:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    178c:	e28db000 	add	fp, sp, #0
    1790:	e24dd00c 	sub	sp, sp, #12
    1794:	e50b0008 	str	r0, [fp, #-8]

00001798 <spin_in_b>:
    1798:	e92d0006 	push	{r1, r2}
    179c:	e3a01001 	mov	r1, #1
    17a0:	e3a02000 	mov	r2, #0
    17a4:	e1a02a02 	lsl	r2, r2, #20
    17a8:	e51b3008 	ldr	r3, [fp, #-8]
    17ac:	e1822003 	orr	r2, r2, r3

000017b0 <spin_loop_b>:
    17b0:	e1421091 	swpb	r1, r1, [r2]
    17b4:	e3510001 	cmp	r1, #1
    17b8:	0afffffc 	beq	17b0 <spin_loop_b>
    17bc:	e8bd0006 	pop	{r1, r2}
    17c0:	e28bd000 	add	sp, fp, #0
    17c4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    17c8:	e12fff1e 	bx	lr

000017cc <bthread_mutex_unlock_b>:
    17cc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    17d0:	e28db000 	add	fp, sp, #0
    17d4:	e24dd00c 	sub	sp, sp, #12
    17d8:	e50b0008 	str	r0, [fp, #-8]

000017dc <spin_out_b>:
    17dc:	e92d0006 	push	{r1, r2}
    17e0:	e3a01000 	mov	r1, #0
    17e4:	e3a02000 	mov	r2, #0
    17e8:	e1a02a02 	lsl	r2, r2, #20
    17ec:	e51b3008 	ldr	r3, [fp, #-8]
    17f0:	e1822003 	orr	r2, r2, r3
    17f4:	e5c21000 	strb	r1, [r2]
    17f8:	e8bd0006 	pop	{r1, r2}
    17fc:	e28bd000 	add	sp, fp, #0
    1800:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1804:	e12fff1e 	bx	lr

00001808 <bthread_barrier_init>:
    1808:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    180c:	e28db000 	add	fp, sp, #0
    1810:	e24dd00c 	sub	sp, sp, #12
    1814:	e50b0008 	str	r0, [fp, #-8]
    1818:	e51b3008 	ldr	r3, [fp, #-8]
    181c:	e3a02004 	mov	r2, #4
    1820:	e5c32000 	strb	r2, [r3]
    1824:	e28bd000 	add	sp, fp, #0
    1828:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    182c:	e12fff1e 	bx	lr

00001830 <bthread_barrier_wait>:
    1830:	e92d4800 	push	{fp, lr}
    1834:	e28db004 	add	fp, sp, #4
    1838:	e24dd010 	sub	sp, sp, #16
    183c:	e50b0010 	str	r0, [fp, #-16]
    1840:	e50b1014 	str	r1, [fp, #-20]
    1844:	e3a03003 	mov	r3, #3
    1848:	e50b3008 	str	r3, [fp, #-8]

0000184c <barrier_reached>:
    184c:	e92d0006 	push	{r1, r2}
    1850:	e3a01000 	mov	r1, #0
    1854:	e3a02000 	mov	r2, #0
    1858:	e1a02a02 	lsl	r2, r2, #20
    185c:	e51b3014 	ldr	r3, [fp, #-20]
    1860:	e1822003 	orr	r2, r2, r3
    1864:	e5812008 	str	r2, [r1, #8]
    1868:	e8bd0006 	pop	{r1, r2}
    186c:	e51b0014 	ldr	r0, [fp, #-20]
    1870:	ebffffc4 	bl	1788 <bthread_mutex_lock_b>
    1874:	e51b3010 	ldr	r3, [fp, #-16]
    1878:	e5d33000 	ldrb	r3, [r3]
    187c:	e6ef3073 	uxtb	r3, r3
    1880:	e3530000 	cmp	r3, #0
    1884:	1a000008 	bne	18ac <barrier_reached+0x60>
    1888:	e51b3010 	ldr	r3, [fp, #-16]
    188c:	e5d33000 	ldrb	r3, [r3]
    1890:	e6ef3073 	uxtb	r3, r3
    1894:	e3530003 	cmp	r3, #3
    1898:	0a00000b 	beq	18cc <barrier_reached+0x80>
    189c:	e51b3010 	ldr	r3, [fp, #-16]
    18a0:	e3a02003 	mov	r2, #3
    18a4:	e5c32000 	strb	r2, [r3]
    18a8:	ea000008 	b	18d0 <barrier_reached+0x84>
    18ac:	e51b3010 	ldr	r3, [fp, #-16]
    18b0:	e5d33000 	ldrb	r3, [r3]
    18b4:	e6ef3073 	uxtb	r3, r3
    18b8:	e2433001 	sub	r3, r3, #1
    18bc:	e6ef2073 	uxtb	r2, r3
    18c0:	e51b3010 	ldr	r3, [fp, #-16]
    18c4:	e5c32000 	strb	r2, [r3]
    18c8:	ea000000 	b	18d0 <barrier_reached+0x84>
    18cc:	e1a00000 	nop			; (mov r0, r0)
    18d0:	e51b0014 	ldr	r0, [fp, #-20]
    18d4:	ebffffbc 	bl	17cc <bthread_mutex_unlock_b>
    18d8:	e51b3008 	ldr	r3, [fp, #-8]
    18dc:	e3530000 	cmp	r3, #0
    18e0:	03a03000 	moveq	r3, #0
    18e4:	13a03001 	movne	r3, #1
    18e8:	e6ef3073 	uxtb	r3, r3
    18ec:	e51b2008 	ldr	r2, [fp, #-8]
    18f0:	e2422001 	sub	r2, r2, #1
    18f4:	e50b2008 	str	r2, [fp, #-8]
    18f8:	e3530000 	cmp	r3, #0
    18fc:	1afffff5 	bne	18d8 <barrier_reached+0x8c>
    1900:	e3a03003 	mov	r3, #3
    1904:	e50b3008 	str	r3, [fp, #-8]
    1908:	e51b0014 	ldr	r0, [fp, #-20]
    190c:	ebffff9d 	bl	1788 <bthread_mutex_lock_b>
    1910:	ea00000f 	b	1954 <barrier_reached+0x108>
    1914:	e51b0014 	ldr	r0, [fp, #-20]
    1918:	ebffffab 	bl	17cc <bthread_mutex_unlock_b>
    191c:	e51b3008 	ldr	r3, [fp, #-8]
    1920:	e3530000 	cmp	r3, #0
    1924:	03a03000 	moveq	r3, #0
    1928:	13a03001 	movne	r3, #1
    192c:	e6ef3073 	uxtb	r3, r3
    1930:	e51b2008 	ldr	r2, [fp, #-8]
    1934:	e2422001 	sub	r2, r2, #1
    1938:	e50b2008 	str	r2, [fp, #-8]
    193c:	e3530000 	cmp	r3, #0
    1940:	1afffff5 	bne	191c <barrier_reached+0xd0>
    1944:	e3a03003 	mov	r3, #3
    1948:	e50b3008 	str	r3, [fp, #-8]
    194c:	e51b0014 	ldr	r0, [fp, #-20]
    1950:	ebffff8c 	bl	1788 <bthread_mutex_lock_b>
    1954:	e51b3010 	ldr	r3, [fp, #-16]
    1958:	e5d33000 	ldrb	r3, [r3]
    195c:	e6ef3073 	uxtb	r3, r3
    1960:	e3530000 	cmp	r3, #0
    1964:	1affffea 	bne	1914 <barrier_reached+0xc8>
    1968:	e51b0014 	ldr	r0, [fp, #-20]
    196c:	ebffff96 	bl	17cc <bthread_mutex_unlock_b>

00001970 <barrier_crossed>:
    1970:	e92d0006 	push	{r1, r2}
    1974:	e3a01000 	mov	r1, #0
    1978:	e3a02000 	mov	r2, #0
    197c:	e1a02a02 	lsl	r2, r2, #20
    1980:	e51b3014 	ldr	r3, [fp, #-20]
    1984:	e1822003 	orr	r2, r2, r3
    1988:	e581200c 	str	r2, [r1, #12]
    198c:	e8bd0006 	pop	{r1, r2}
    1990:	e24bd004 	sub	sp, fp, #4
    1994:	e8bd8800 	pop	{fp, pc}

00001998 <bthread_cond_wait>:
    1998:	e92d4800 	push	{fp, lr}
    199c:	e28db004 	add	fp, sp, #4
    19a0:	e24dd010 	sub	sp, sp, #16
    19a4:	e50b0010 	str	r0, [fp, #-16]
    19a8:	e50b1014 	str	r1, [fp, #-20]
    19ac:	e3a03003 	mov	r3, #3
    19b0:	e50b3008 	str	r3, [fp, #-8]
    19b4:	ea00000f 	b	19f8 <bthread_cond_wait+0x60>
    19b8:	e51b0014 	ldr	r0, [fp, #-20]
    19bc:	ebffff61 	bl	1748 <bthread_mutex_unlock>
    19c0:	e51b3008 	ldr	r3, [fp, #-8]
    19c4:	e3530000 	cmp	r3, #0
    19c8:	03a03000 	moveq	r3, #0
    19cc:	13a03001 	movne	r3, #1
    19d0:	e6ef3073 	uxtb	r3, r3
    19d4:	e51b2008 	ldr	r2, [fp, #-8]
    19d8:	e2422001 	sub	r2, r2, #1
    19dc:	e50b2008 	str	r2, [fp, #-8]
    19e0:	e3530000 	cmp	r3, #0
    19e4:	1afffff5 	bne	19c0 <bthread_cond_wait+0x28>
    19e8:	e3a03003 	mov	r3, #3
    19ec:	e50b3008 	str	r3, [fp, #-8]
    19f0:	e51b0014 	ldr	r0, [fp, #-20]
    19f4:	ebffff41 	bl	1700 <bthread_mutex_lock>
    19f8:	e51b3010 	ldr	r3, [fp, #-16]
    19fc:	e5933000 	ldr	r3, [r3]
    1a00:	e3530000 	cmp	r3, #0
    1a04:	0affffeb 	beq	19b8 <bthread_cond_wait+0x20>
    1a08:	e24bd004 	sub	sp, fp, #4
    1a0c:	e8bd8800 	pop	{fp, pc}

00001a10 <bthread_cond_broadcast>:
    1a10:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1a14:	e28db000 	add	fp, sp, #0
    1a18:	e24dd00c 	sub	sp, sp, #12
    1a1c:	e50b0008 	str	r0, [fp, #-8]
    1a20:	e51b3008 	ldr	r3, [fp, #-8]
    1a24:	e3a02001 	mov	r2, #1
    1a28:	e5832000 	str	r2, [r3]
    1a2c:	e28bd000 	add	sp, fp, #0
    1a30:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1a34:	e12fff1e 	bx	lr

00001a38 <bthread_cond_clear>:
    1a38:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1a3c:	e28db000 	add	fp, sp, #0
    1a40:	e24dd00c 	sub	sp, sp, #12
    1a44:	e50b0008 	str	r0, [fp, #-8]
    1a48:	e51b3008 	ldr	r3, [fp, #-8]
    1a4c:	e3a02000 	mov	r2, #0
    1a50:	e5832000 	str	r2, [r3]
    1a54:	e28bd000 	add	sp, fp, #0
    1a58:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1a5c:	e12fff1e 	bx	lr

00001a60 <uart_init>:
    1a60:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1a64:	e28db000 	add	fp, sp, #0
    1a68:	ee102fb0 	mrc	15, 0, r2, cr0, cr0, {5}
    1a6c:	e3023b00 	movw	r3, #11008	; 0x2b00
    1a70:	e3403000 	movt	r3, #0
    1a74:	e5832000 	str	r2, [r3]
    1a78:	e3023b00 	movw	r3, #11008	; 0x2b00
    1a7c:	e3403000 	movt	r3, #0
    1a80:	e5933000 	ldr	r3, [r3]
    1a84:	e3530000 	cmp	r3, #0
    1a88:	1a000018 	bne	1af0 <uart_init+0x90>
    1a8c:	e3093030 	movw	r3, #36912	; 0x9030
    1a90:	e3413000 	movt	r3, #4096	; 0x1000
    1a94:	e3a02000 	mov	r2, #0
    1a98:	e1c320b0 	strh	r2, [r3]
    1a9c:	e3093024 	movw	r3, #36900	; 0x9024
    1aa0:	e3413000 	movt	r3, #4096	; 0x1000
    1aa4:	e3a02027 	mov	r2, #39	; 0x27
    1aa8:	e1c320b0 	strh	r2, [r3]
    1aac:	e3093028 	movw	r3, #36904	; 0x9028
    1ab0:	e3413000 	movt	r3, #4096	; 0x1000
    1ab4:	e3a02004 	mov	r2, #4
    1ab8:	e1c320b0 	strh	r2, [r3]
    1abc:	e309302c 	movw	r3, #36908	; 0x902c
    1ac0:	e3413000 	movt	r3, #4096	; 0x1000
    1ac4:	e3a02070 	mov	r2, #112	; 0x70
    1ac8:	e5c32000 	strb	r2, [r3]
    1acc:	e3093030 	movw	r3, #36912	; 0x9030
    1ad0:	e3413000 	movt	r3, #4096	; 0x1000
    1ad4:	e3002301 	movw	r2, #769	; 0x301
    1ad8:	e1c320b0 	strh	r2, [r3]
    1adc:	e3023b04 	movw	r3, #11012	; 0x2b04
    1ae0:	e3403000 	movt	r3, #0
    1ae4:	e3a02001 	mov	r2, #1
    1ae8:	e5832000 	str	r2, [r3]
    1aec:	ea000004 	b	1b04 <uart_init+0xa4>
    1af0:	e3023b04 	movw	r3, #11012	; 0x2b04
    1af4:	e3403000 	movt	r3, #0
    1af8:	e5933000 	ldr	r3, [r3]
    1afc:	e3530000 	cmp	r3, #0
    1b00:	0afffffa 	beq	1af0 <uart_init+0x90>
    1b04:	e28bd000 	add	sp, fp, #0
    1b08:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1b0c:	e12fff1e 	bx	lr

00001b10 <uart_wait_txff>:
    1b10:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1b14:	e28db000 	add	fp, sp, #0
    1b18:	e24dd00c 	sub	sp, sp, #12
    1b1c:	e3093018 	movw	r3, #36888	; 0x9018
    1b20:	e3413000 	movt	r3, #4096	; 0x1000
    1b24:	e1d330b0 	ldrh	r3, [r3]
    1b28:	e14b30b6 	strh	r3, [fp, #-6]
    1b2c:	e15b30b6 	ldrh	r3, [fp, #-6]
    1b30:	e2033020 	and	r3, r3, #32
    1b34:	e3530000 	cmp	r3, #0
    1b38:	1afffff7 	bne	1b1c <uart_wait_txff+0xc>
    1b3c:	e28bd000 	add	sp, fp, #0
    1b40:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1b44:	e12fff1e 	bx	lr

00001b48 <uart_wait_rxfe>:
    1b48:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1b4c:	e28db000 	add	fp, sp, #0
    1b50:	e24dd00c 	sub	sp, sp, #12
    1b54:	e3093018 	movw	r3, #36888	; 0x9018
    1b58:	e3413000 	movt	r3, #4096	; 0x1000
    1b5c:	e1d330b0 	ldrh	r3, [r3]
    1b60:	e6ff3073 	uxth	r3, r3
    1b64:	e54b3005 	strb	r3, [fp, #-5]
    1b68:	e55b3005 	ldrb	r3, [fp, #-5]
    1b6c:	e2033010 	and	r3, r3, #16
    1b70:	e3530000 	cmp	r3, #0
    1b74:	1afffff6 	bne	1b54 <uart_wait_rxfe+0xc>
    1b78:	e28bd000 	add	sp, fp, #0
    1b7c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1b80:	e12fff1e 	bx	lr

00001b84 <uart_tx_char>:
    1b84:	e92d4800 	push	{fp, lr}
    1b88:	e28db004 	add	fp, sp, #4
    1b8c:	e24dd008 	sub	sp, sp, #8
    1b90:	e1a03000 	mov	r3, r0
    1b94:	e54b3005 	strb	r3, [fp, #-5]
    1b98:	e55b3005 	ldrb	r3, [fp, #-5]
    1b9c:	e353000a 	cmp	r3, #10
    1ba0:	1a00000a 	bne	1bd0 <uart_tx_char+0x4c>
    1ba4:	ebffffd9 	bl	1b10 <uart_wait_txff>
    1ba8:	e3093000 	movw	r3, #36864	; 0x9000
    1bac:	e3413000 	movt	r3, #4096	; 0x1000
    1bb0:	e3a0200d 	mov	r2, #13
    1bb4:	e5c32000 	strb	r2, [r3]
    1bb8:	ebffffd4 	bl	1b10 <uart_wait_txff>
    1bbc:	e3093000 	movw	r3, #36864	; 0x9000
    1bc0:	e3413000 	movt	r3, #4096	; 0x1000
    1bc4:	e55b2005 	ldrb	r2, [fp, #-5]
    1bc8:	e5c32000 	strb	r2, [r3]
    1bcc:	ea000004 	b	1be4 <uart_tx_char+0x60>
    1bd0:	ebffffce 	bl	1b10 <uart_wait_txff>
    1bd4:	e3093000 	movw	r3, #36864	; 0x9000
    1bd8:	e3413000 	movt	r3, #4096	; 0x1000
    1bdc:	e55b2005 	ldrb	r2, [fp, #-5]
    1be0:	e5c32000 	strb	r2, [r3]
    1be4:	e24bd004 	sub	sp, fp, #4
    1be8:	e8bd8800 	pop	{fp, pc}

00001bec <uart_tx_string>:
    1bec:	e92d4800 	push	{fp, lr}
    1bf0:	e28db004 	add	fp, sp, #4
    1bf4:	e24dd010 	sub	sp, sp, #16
    1bf8:	e50b0010 	str	r0, [fp, #-16]
    1bfc:	e3a03000 	mov	r3, #0
    1c00:	e50b3008 	str	r3, [fp, #-8]
    1c04:	ea000008 	b	1c2c <uart_tx_string+0x40>
    1c08:	e55b3009 	ldrb	r3, [fp, #-9]
    1c0c:	e1a00003 	mov	r0, r3
    1c10:	ebffffdb 	bl	1b84 <uart_tx_char>
    1c14:	e51b3010 	ldr	r3, [fp, #-16]
    1c18:	e2833001 	add	r3, r3, #1
    1c1c:	e50b3010 	str	r3, [fp, #-16]
    1c20:	e51b3008 	ldr	r3, [fp, #-8]
    1c24:	e2833001 	add	r3, r3, #1
    1c28:	e50b3008 	str	r3, [fp, #-8]
    1c2c:	e51b3010 	ldr	r3, [fp, #-16]
    1c30:	e5d33000 	ldrb	r3, [r3]
    1c34:	e54b3009 	strb	r3, [fp, #-9]
    1c38:	e55b3009 	ldrb	r3, [fp, #-9]
    1c3c:	e3530000 	cmp	r3, #0
    1c40:	1afffff0 	bne	1c08 <uart_tx_string+0x1c>
    1c44:	e51b3008 	ldr	r3, [fp, #-8]
    1c48:	e1a00003 	mov	r0, r3
    1c4c:	e24bd004 	sub	sp, fp, #4
    1c50:	e8bd8800 	pop	{fp, pc}

00001c54 <uart_rx_char>:
    1c54:	e92d4800 	push	{fp, lr}
    1c58:	e28db004 	add	fp, sp, #4
    1c5c:	e24dd008 	sub	sp, sp, #8
    1c60:	ebffffb8 	bl	1b48 <uart_wait_rxfe>
    1c64:	e3093000 	movw	r3, #36864	; 0x9000
    1c68:	e3413000 	movt	r3, #4096	; 0x1000
    1c6c:	e5d33000 	ldrb	r3, [r3]
    1c70:	e54b3005 	strb	r3, [fp, #-5]
    1c74:	e55b3005 	ldrb	r3, [fp, #-5]
    1c78:	e1a00003 	mov	r0, r3
    1c7c:	e24bd004 	sub	sp, fp, #4
    1c80:	e8bd8800 	pop	{fp, pc}

00001c84 <vic_init>:
    1c84:	e92d4800 	push	{fp, lr}
    1c88:	e28db004 	add	fp, sp, #4
    1c8c:	e3a00000 	mov	r0, #0
    1c90:	eb000002 	bl	1ca0 <vic_mode>
    1c94:	e3a00000 	mov	r0, #0
    1c98:	eb00000b 	bl	1ccc <vic_enable>
    1c9c:	e8bd8800 	pop	{fp, pc}

00001ca0 <vic_mode>:
    1ca0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1ca4:	e28db000 	add	fp, sp, #0
    1ca8:	e24dd00c 	sub	sp, sp, #12
    1cac:	e50b0008 	str	r0, [fp, #-8]
    1cb0:	e300300c 	movw	r3, #12
    1cb4:	e3413014 	movt	r3, #4116	; 0x1014
    1cb8:	e51b2008 	ldr	r2, [fp, #-8]
    1cbc:	e5832000 	str	r2, [r3]
    1cc0:	e28bd000 	add	sp, fp, #0
    1cc4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1cc8:	e12fff1e 	bx	lr

00001ccc <vic_enable>:
    1ccc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1cd0:	e28db000 	add	fp, sp, #0
    1cd4:	e24dd00c 	sub	sp, sp, #12
    1cd8:	e50b0008 	str	r0, [fp, #-8]
    1cdc:	e3003010 	movw	r3, #16
    1ce0:	e3413014 	movt	r3, #4116	; 0x1014
    1ce4:	e51b2008 	ldr	r2, [fp, #-8]
    1ce8:	e5832000 	str	r2, [r3]
    1cec:	e28bd000 	add	sp, fp, #0
    1cf0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1cf4:	e12fff1e 	bx	lr

00001cf8 <vic_vector>:
    1cf8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1cfc:	e28db000 	add	fp, sp, #0
    1d00:	e24dd00c 	sub	sp, sp, #12
    1d04:	e1a03002 	mov	r3, r2
    1d08:	e14b00b6 	strh	r0, [fp, #-6]
    1d0c:	e14b10b8 	strh	r1, [fp, #-8]
    1d10:	e14b30ba 	strh	r3, [fp, #-10]
    1d14:	e15b30b8 	ldrh	r3, [fp, #-8]
    1d18:	e1a02103 	lsl	r2, r3, #2
    1d1c:	e3003200 	movw	r3, #512	; 0x200
    1d20:	e3413014 	movt	r3, #4116	; 0x1014
    1d24:	e0823003 	add	r3, r2, r3
    1d28:	e15b20ba 	ldrh	r2, [fp, #-10]
    1d2c:	e2022001 	and	r2, r2, #1
    1d30:	e1a01282 	lsl	r1, r2, #5
    1d34:	e15b20b6 	ldrh	r2, [fp, #-6]
    1d38:	e202201f 	and	r2, r2, #31
    1d3c:	e0812002 	add	r2, r1, r2
    1d40:	e5832000 	str	r2, [r3]
    1d44:	e28bd000 	add	sp, fp, #0
    1d48:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1d4c:	e12fff1e 	bx	lr

00001d50 <vic_vector_isr>:
    1d50:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1d54:	e28db000 	add	fp, sp, #0
    1d58:	e24dd00c 	sub	sp, sp, #12
    1d5c:	e50b0008 	str	r0, [fp, #-8]
    1d60:	e1a03001 	mov	r3, r1
    1d64:	e14b30ba 	strh	r3, [fp, #-10]
    1d68:	e15b30ba 	ldrh	r3, [fp, #-10]
    1d6c:	e1a02103 	lsl	r2, r3, #2
    1d70:	e3003100 	movw	r3, #256	; 0x100
    1d74:	e3413014 	movt	r3, #4116	; 0x1014
    1d78:	e0823003 	add	r3, r2, r3
    1d7c:	e51b2008 	ldr	r2, [fp, #-8]
    1d80:	e5832000 	str	r2, [r3]
    1d84:	e28bd000 	add	sp, fp, #0
    1d88:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1d8c:	e12fff1e 	bx	lr

00001d90 <vic_clear>:
    1d90:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    1d94:	e28db000 	add	fp, sp, #0
    1d98:	e3003030 	movw	r3, #48	; 0x30
    1d9c:	e3413014 	movt	r3, #4116	; 0x1014
    1da0:	e3a02000 	mov	r2, #0
    1da4:	e5832000 	str	r2, [r3]
    1da8:	e28bd000 	add	sp, fp, #0
    1dac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    1db0:	e12fff1e 	bx	lr

00001db4 <__aeabi_uidiv>:
    1db4:	e2512001 	subs	r2, r1, #1
    1db8:	012fff1e 	bxeq	lr
    1dbc:	3a000036 	bcc	1e9c <__aeabi_uidiv+0xe8>
    1dc0:	e1500001 	cmp	r0, r1
    1dc4:	9a000022 	bls	1e54 <__aeabi_uidiv+0xa0>
    1dc8:	e1110002 	tst	r1, r2
    1dcc:	0a000023 	beq	1e60 <__aeabi_uidiv+0xac>
    1dd0:	e311020e 	tst	r1, #-536870912	; 0xe0000000
    1dd4:	01a01181 	lsleq	r1, r1, #3
    1dd8:	03a03008 	moveq	r3, #8
    1ddc:	13a03001 	movne	r3, #1
    1de0:	e3510201 	cmp	r1, #268435456	; 0x10000000
    1de4:	31510000 	cmpcc	r1, r0
    1de8:	31a01201 	lslcc	r1, r1, #4
    1dec:	31a03203 	lslcc	r3, r3, #4
    1df0:	3afffffa 	bcc	1de0 <__aeabi_uidiv+0x2c>
    1df4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    1df8:	31510000 	cmpcc	r1, r0
    1dfc:	31a01081 	lslcc	r1, r1, #1
    1e00:	31a03083 	lslcc	r3, r3, #1
    1e04:	3afffffa 	bcc	1df4 <__aeabi_uidiv+0x40>
    1e08:	e3a02000 	mov	r2, #0
    1e0c:	e1500001 	cmp	r0, r1
    1e10:	20400001 	subcs	r0, r0, r1
    1e14:	21822003 	orrcs	r2, r2, r3
    1e18:	e15000a1 	cmp	r0, r1, lsr #1
    1e1c:	204000a1 	subcs	r0, r0, r1, lsr #1
    1e20:	218220a3 	orrcs	r2, r2, r3, lsr #1
    1e24:	e1500121 	cmp	r0, r1, lsr #2
    1e28:	20400121 	subcs	r0, r0, r1, lsr #2
    1e2c:	21822123 	orrcs	r2, r2, r3, lsr #2
    1e30:	e15001a1 	cmp	r0, r1, lsr #3
    1e34:	204001a1 	subcs	r0, r0, r1, lsr #3
    1e38:	218221a3 	orrcs	r2, r2, r3, lsr #3
    1e3c:	e3500000 	cmp	r0, #0
    1e40:	11b03223 	lsrsne	r3, r3, #4
    1e44:	11a01221 	lsrne	r1, r1, #4
    1e48:	1affffef 	bne	1e0c <__aeabi_uidiv+0x58>
    1e4c:	e1a00002 	mov	r0, r2
    1e50:	e12fff1e 	bx	lr
    1e54:	03a00001 	moveq	r0, #1
    1e58:	13a00000 	movne	r0, #0
    1e5c:	e12fff1e 	bx	lr
    1e60:	e3510801 	cmp	r1, #65536	; 0x10000
    1e64:	21a01821 	lsrcs	r1, r1, #16
    1e68:	23a02010 	movcs	r2, #16
    1e6c:	33a02000 	movcc	r2, #0
    1e70:	e3510c01 	cmp	r1, #256	; 0x100
    1e74:	21a01421 	lsrcs	r1, r1, #8
    1e78:	22822008 	addcs	r2, r2, #8
    1e7c:	e3510010 	cmp	r1, #16
    1e80:	21a01221 	lsrcs	r1, r1, #4
    1e84:	22822004 	addcs	r2, r2, #4
    1e88:	e3510004 	cmp	r1, #4
    1e8c:	82822003 	addhi	r2, r2, #3
    1e90:	908220a1 	addls	r2, r2, r1, lsr #1
    1e94:	e1a00230 	lsr	r0, r0, r2
    1e98:	e12fff1e 	bx	lr
    1e9c:	e3500000 	cmp	r0, #0
    1ea0:	13e00000 	mvnne	r0, #0
    1ea4:	ea000007 	b	1ec8 <__aeabi_idiv0>

00001ea8 <__aeabi_uidivmod>:
    1ea8:	e3510000 	cmp	r1, #0
    1eac:	0afffffa 	beq	1e9c <__aeabi_uidiv+0xe8>
    1eb0:	e92d4003 	push	{r0, r1, lr}
    1eb4:	ebffffbe 	bl	1db4 <__aeabi_uidiv>
    1eb8:	e8bd4006 	pop	{r1, r2, lr}
    1ebc:	e0030092 	mul	r3, r2, r0
    1ec0:	e0411003 	sub	r1, r1, r3
    1ec4:	e12fff1e 	bx	lr

00001ec8 <__aeabi_idiv0>:
    1ec8:	e12fff1e 	bx	lr

00001ecc <__aeabi_drsub>:
    1ecc:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
    1ed0:	ea000000 	b	1ed8 <__adddf3>

00001ed4 <__aeabi_dsub>:
    1ed4:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

00001ed8 <__adddf3>:
    1ed8:	e92d4030 	push	{r4, r5, lr}
    1edc:	e1a04081 	lsl	r4, r1, #1
    1ee0:	e1a05083 	lsl	r5, r3, #1
    1ee4:	e1340005 	teq	r4, r5
    1ee8:	01300002 	teqeq	r0, r2
    1eec:	1194c000 	orrsne	ip, r4, r0
    1ef0:	1195c002 	orrsne	ip, r5, r2
    1ef4:	11f0cac4 	mvnsne	ip, r4, asr #21
    1ef8:	11f0cac5 	mvnsne	ip, r5, asr #21
    1efc:	0a00008c 	beq	2134 <offset_IRQ_stack+0x34>
    1f00:	e1a04aa4 	lsr	r4, r4, #21
    1f04:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
    1f08:	b2655000 	rsblt	r5, r5, #0
    1f0c:	da000006 	ble	1f2c <__adddf3+0x54>
    1f10:	e0844005 	add	r4, r4, r5
    1f14:	e0202002 	eor	r2, r0, r2
    1f18:	e0213003 	eor	r3, r1, r3
    1f1c:	e0220000 	eor	r0, r2, r0
    1f20:	e0231001 	eor	r1, r3, r1
    1f24:	e0202002 	eor	r2, r0, r2
    1f28:	e0213003 	eor	r3, r1, r3
    1f2c:	e3550036 	cmp	r5, #54	; 0x36
    1f30:	88bd4030 	pophi	{r4, r5, lr}
    1f34:	812fff1e 	bxhi	lr
    1f38:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    1f3c:	e1a01601 	lsl	r1, r1, #12
    1f40:	e3a0c601 	mov	ip, #1048576	; 0x100000
    1f44:	e18c1621 	orr	r1, ip, r1, lsr #12
    1f48:	0a000001 	beq	1f54 <__adddf3+0x7c>
    1f4c:	e2700000 	rsbs	r0, r0, #0
    1f50:	e2e11000 	rsc	r1, r1, #0
    1f54:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    1f58:	e1a03603 	lsl	r3, r3, #12
    1f5c:	e18c3623 	orr	r3, ip, r3, lsr #12
    1f60:	0a000001 	beq	1f6c <__adddf3+0x94>
    1f64:	e2722000 	rsbs	r2, r2, #0
    1f68:	e2e33000 	rsc	r3, r3, #0
    1f6c:	e1340005 	teq	r4, r5
    1f70:	0a000069 	beq	211c <offset_IRQ_stack+0x1c>
    1f74:	e2444001 	sub	r4, r4, #1
    1f78:	e275e020 	rsbs	lr, r5, #32
    1f7c:	ba000005 	blt	1f98 <__adddf3+0xc0>
    1f80:	e1a0ce12 	lsl	ip, r2, lr
    1f84:	e0900532 	adds	r0, r0, r2, lsr r5
    1f88:	e2a11000 	adc	r1, r1, #0
    1f8c:	e0900e13 	adds	r0, r0, r3, lsl lr
    1f90:	e0b11553 	adcs	r1, r1, r3, asr r5
    1f94:	ea000006 	b	1fb4 <__adddf3+0xdc>
    1f98:	e2455020 	sub	r5, r5, #32
    1f9c:	e28ee020 	add	lr, lr, #32
    1fa0:	e3520001 	cmp	r2, #1
    1fa4:	e1a0ce13 	lsl	ip, r3, lr
    1fa8:	238cc002 	orrcs	ip, ip, #2
    1fac:	e0900553 	adds	r0, r0, r3, asr r5
    1fb0:	e0b11fc3 	adcs	r1, r1, r3, asr #31
    1fb4:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    1fb8:	5a000002 	bpl	1fc8 <__adddf3+0xf0>
    1fbc:	e27cc000 	rsbs	ip, ip, #0
    1fc0:	e2f00000 	rscs	r0, r0, #0
    1fc4:	e2e11000 	rsc	r1, r1, #0
    1fc8:	e3510601 	cmp	r1, #1048576	; 0x100000
    1fcc:	3a00000f 	bcc	2010 <len_USR_stack+0x10>
    1fd0:	e3510602 	cmp	r1, #2097152	; 0x200000
    1fd4:	3a000006 	bcc	1ff4 <__adddf3+0x11c>
    1fd8:	e1b010a1 	lsrs	r1, r1, #1
    1fdc:	e1b00060 	rrxs	r0, r0
    1fe0:	e1a0c06c 	rrx	ip, ip
    1fe4:	e2844001 	add	r4, r4, #1
    1fe8:	e1a02a84 	lsl	r2, r4, #21
    1fec:	e3720501 	cmn	r2, #4194304	; 0x400000
    1ff0:	2a00006b 	bcs	21a4 <offset_IRQ_stack+0xa4>
    1ff4:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
    1ff8:	01b0c0a0 	lsrseq	ip, r0, #1
    1ffc:	e2b00000 	adcs	r0, r0, #0
    2000:	e0a11a04 	adc	r1, r1, r4, lsl #20
    2004:	e1811005 	orr	r1, r1, r5
    2008:	e8bd4030 	pop	{r4, r5, lr}
    200c:	e12fff1e 	bx	lr
    2010:	e1b0c08c 	lsls	ip, ip, #1
    2014:	e0b00000 	adcs	r0, r0, r0
    2018:	e0a11001 	adc	r1, r1, r1
    201c:	e3110601 	tst	r1, #1048576	; 0x100000
    2020:	e2444001 	sub	r4, r4, #1
    2024:	1afffff2 	bne	1ff4 <__adddf3+0x11c>
    2028:	e3310000 	teq	r1, #0
    202c:	13a03014 	movne	r3, #20
    2030:	03a03034 	moveq	r3, #52	; 0x34
    2034:	01a01000 	moveq	r1, r0
    2038:	03a00000 	moveq	r0, #0
    203c:	e1a02001 	mov	r2, r1
    2040:	e3520801 	cmp	r2, #65536	; 0x10000
    2044:	21a02822 	lsrcs	r2, r2, #16
    2048:	22433010 	subcs	r3, r3, #16
    204c:	e3520c01 	cmp	r2, #256	; 0x100
    2050:	21a02422 	lsrcs	r2, r2, #8
    2054:	22433008 	subcs	r3, r3, #8
    2058:	e3520010 	cmp	r2, #16
    205c:	21a02222 	lsrcs	r2, r2, #4
    2060:	22433004 	subcs	r3, r3, #4
    2064:	e3520004 	cmp	r2, #4
    2068:	22433002 	subcs	r3, r3, #2
    206c:	304330a2 	subcc	r3, r3, r2, lsr #1
    2070:	e04331a2 	sub	r3, r3, r2, lsr #3
    2074:	e2532020 	subs	r2, r3, #32
    2078:	aa000007 	bge	209c <len_USR_stack+0x9c>
    207c:	e292200c 	adds	r2, r2, #12
    2080:	da000004 	ble	2098 <len_USR_stack+0x98>
    2084:	e282c014 	add	ip, r2, #20
    2088:	e262200c 	rsb	r2, r2, #12
    208c:	e1a00c11 	lsl	r0, r1, ip
    2090:	e1a01231 	lsr	r1, r1, r2
    2094:	ea000004 	b	20ac <len_USR_stack+0xac>
    2098:	e2822014 	add	r2, r2, #20
    209c:	d262c020 	rsble	ip, r2, #32
    20a0:	e1a01211 	lsl	r1, r1, r2
    20a4:	d1811c30 	orrle	r1, r1, r0, lsr ip
    20a8:	d1a00210 	lslle	r0, r0, r2
    20ac:	e0544003 	subs	r4, r4, r3
    20b0:	a0811a04 	addge	r1, r1, r4, lsl #20
    20b4:	a1811005 	orrge	r1, r1, r5
    20b8:	a8bd4030 	popge	{r4, r5, lr}
    20bc:	a12fff1e 	bxge	lr
    20c0:	e1e04004 	mvn	r4, r4
    20c4:	e254401f 	subs	r4, r4, #31
    20c8:	aa00000f 	bge	210c <offset_IRQ_stack+0xc>
    20cc:	e294400c 	adds	r4, r4, #12
    20d0:	ca000006 	bgt	20f0 <len_USR_stack+0xf0>
    20d4:	e2844014 	add	r4, r4, #20
    20d8:	e2642020 	rsb	r2, r4, #32
    20dc:	e1a00430 	lsr	r0, r0, r4
    20e0:	e1800211 	orr	r0, r0, r1, lsl r2
    20e4:	e1851431 	orr	r1, r5, r1, lsr r4
    20e8:	e8bd4030 	pop	{r4, r5, lr}
    20ec:	e12fff1e 	bx	lr
    20f0:	e264400c 	rsb	r4, r4, #12
    20f4:	e2642020 	rsb	r2, r4, #32
    20f8:	e1a00230 	lsr	r0, r0, r2
    20fc:	e1800411 	orr	r0, r0, r1, lsl r4
    2100:	e1a01005 	mov	r1, r5
    2104:	e8bd4030 	pop	{r4, r5, lr}
    2108:	e12fff1e 	bx	lr
    210c:	e1a00431 	lsr	r0, r1, r4
    2110:	e1a01005 	mov	r1, r5
    2114:	e8bd4030 	pop	{r4, r5, lr}
    2118:	e12fff1e 	bx	lr
    211c:	e3340000 	teq	r4, #0
    2120:	e2233601 	eor	r3, r3, #1048576	; 0x100000
    2124:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
    2128:	02844001 	addeq	r4, r4, #1
    212c:	12455001 	subne	r5, r5, #1
    2130:	eaffff8f 	b	1f74 <__adddf3+0x9c>
    2134:	e1f0cac4 	mvns	ip, r4, asr #21
    2138:	11f0cac5 	mvnsne	ip, r5, asr #21
    213c:	0a00001d 	beq	21b8 <offset_IRQ_stack+0xb8>
    2140:	e1340005 	teq	r4, r5
    2144:	01300002 	teqeq	r0, r2
    2148:	0a000004 	beq	2160 <offset_IRQ_stack+0x60>
    214c:	e194c000 	orrs	ip, r4, r0
    2150:	01a01003 	moveq	r1, r3
    2154:	01a00002 	moveq	r0, r2
    2158:	e8bd4030 	pop	{r4, r5, lr}
    215c:	e12fff1e 	bx	lr
    2160:	e1310003 	teq	r1, r3
    2164:	13a01000 	movne	r1, #0
    2168:	13a00000 	movne	r0, #0
    216c:	18bd4030 	popne	{r4, r5, lr}
    2170:	112fff1e 	bxne	lr
    2174:	e1b0caa4 	lsrs	ip, r4, #21
    2178:	1a000004 	bne	2190 <offset_IRQ_stack+0x90>
    217c:	e1b00080 	lsls	r0, r0, #1
    2180:	e0b11001 	adcs	r1, r1, r1
    2184:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
    2188:	e8bd4030 	pop	{r4, r5, lr}
    218c:	e12fff1e 	bx	lr
    2190:	e2944501 	adds	r4, r4, #4194304	; 0x400000
    2194:	32811601 	addcc	r1, r1, #1048576	; 0x100000
    2198:	38bd4030 	popcc	{r4, r5, lr}
    219c:	312fff1e 	bxcc	lr
    21a0:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    21a4:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
    21a8:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    21ac:	e3a00000 	mov	r0, #0
    21b0:	e8bd4030 	pop	{r4, r5, lr}
    21b4:	e12fff1e 	bx	lr
    21b8:	e1f0cac4 	mvns	ip, r4, asr #21
    21bc:	11a01003 	movne	r1, r3
    21c0:	11a00002 	movne	r0, r2
    21c4:	01f0cac5 	mvnseq	ip, r5, asr #21
    21c8:	11a03001 	movne	r3, r1
    21cc:	11a02000 	movne	r2, r0
    21d0:	e1904601 	orrs	r4, r0, r1, lsl #12
    21d4:	01925603 	orrseq	r5, r2, r3, lsl #12
    21d8:	01310003 	teqeq	r1, r3
    21dc:	13811702 	orrne	r1, r1, #524288	; 0x80000
    21e0:	e8bd4030 	pop	{r4, r5, lr}
    21e4:	e12fff1e 	bx	lr

000021e8 <__aeabi_ui2d>:
    21e8:	e3300000 	teq	r0, #0
    21ec:	03a01000 	moveq	r1, #0
    21f0:	012fff1e 	bxeq	lr
    21f4:	e92d4030 	push	{r4, r5, lr}
    21f8:	e3a04b01 	mov	r4, #1024	; 0x400
    21fc:	e2844032 	add	r4, r4, #50	; 0x32
    2200:	e3a05000 	mov	r5, #0
    2204:	e3a01000 	mov	r1, #0
    2208:	eaffff86 	b	2028 <len_USR_stack+0x28>

0000220c <__aeabi_i2d>:
    220c:	e3300000 	teq	r0, #0
    2210:	03a01000 	moveq	r1, #0
    2214:	012fff1e 	bxeq	lr
    2218:	e92d4030 	push	{r4, r5, lr}
    221c:	e3a04b01 	mov	r4, #1024	; 0x400
    2220:	e2844032 	add	r4, r4, #50	; 0x32
    2224:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
    2228:	42600000 	rsbmi	r0, r0, #0
    222c:	e3a01000 	mov	r1, #0
    2230:	eaffff7c 	b	2028 <len_USR_stack+0x28>

00002234 <__aeabi_f2d>:
    2234:	e1b02080 	lsls	r2, r0, #1
    2238:	e1a011c2 	asr	r1, r2, #3
    223c:	e1a01061 	rrx	r1, r1
    2240:	e1a00e02 	lsl	r0, r2, #28
    2244:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
    2248:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    224c:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
    2250:	112fff1e 	bxne	lr
    2254:	e3320000 	teq	r2, #0
    2258:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    225c:	012fff1e 	bxeq	lr
    2260:	e92d4030 	push	{r4, r5, lr}
    2264:	e3a04d0e 	mov	r4, #896	; 0x380
    2268:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    226c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    2270:	eaffff6c 	b	2028 <len_USR_stack+0x28>

00002274 <__aeabi_ul2d>:
    2274:	e1902001 	orrs	r2, r0, r1
    2278:	012fff1e 	bxeq	lr
    227c:	e92d4030 	push	{r4, r5, lr}
    2280:	e3a05000 	mov	r5, #0
    2284:	ea000006 	b	22a4 <__aeabi_l2d+0x1c>

00002288 <__aeabi_l2d>:
    2288:	e1902001 	orrs	r2, r0, r1
    228c:	012fff1e 	bxeq	lr
    2290:	e92d4030 	push	{r4, r5, lr}
    2294:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
    2298:	5a000001 	bpl	22a4 <__aeabi_l2d+0x1c>
    229c:	e2700000 	rsbs	r0, r0, #0
    22a0:	e2e11000 	rsc	r1, r1, #0
    22a4:	e3a04b01 	mov	r4, #1024	; 0x400
    22a8:	e2844032 	add	r4, r4, #50	; 0x32
    22ac:	e1b0cb21 	lsrs	ip, r1, #22
    22b0:	0affff44 	beq	1fc8 <__adddf3+0xf0>
    22b4:	e3a02003 	mov	r2, #3
    22b8:	e1b0c1ac 	lsrs	ip, ip, #3
    22bc:	12822003 	addne	r2, r2, #3
    22c0:	e1b0c1ac 	lsrs	ip, ip, #3
    22c4:	12822003 	addne	r2, r2, #3
    22c8:	e08221ac 	add	r2, r2, ip, lsr #3
    22cc:	e2623020 	rsb	r3, r2, #32
    22d0:	e1a0c310 	lsl	ip, r0, r3
    22d4:	e1a00230 	lsr	r0, r0, r2
    22d8:	e1800311 	orr	r0, r0, r1, lsl r3
    22dc:	e1a01231 	lsr	r1, r1, r2
    22e0:	e0844002 	add	r4, r4, r2
    22e4:	eaffff37 	b	1fc8 <__adddf3+0xf0>

000022e8 <__aeabi_dmul>:
    22e8:	e92d4070 	push	{r4, r5, r6, lr}
    22ec:	e3a0c0ff 	mov	ip, #255	; 0xff
    22f0:	e38ccc07 	orr	ip, ip, #1792	; 0x700
    22f4:	e01c4a21 	ands	r4, ip, r1, lsr #20
    22f8:	101c5a23 	andsne	r5, ip, r3, lsr #20
    22fc:	1134000c 	teqne	r4, ip
    2300:	1135000c 	teqne	r5, ip
    2304:	0b000075 	bleq	24e0 <offset_USR_stack+0x160>
    2308:	e0844005 	add	r4, r4, r5
    230c:	e0216003 	eor	r6, r1, r3
    2310:	e1c11a8c 	bic	r1, r1, ip, lsl #21
    2314:	e1c33a8c 	bic	r3, r3, ip, lsl #21
    2318:	e1905601 	orrs	r5, r0, r1, lsl #12
    231c:	11925603 	orrsne	r5, r2, r3, lsl #12
    2320:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    2324:	e3833601 	orr	r3, r3, #1048576	; 0x100000
    2328:	0a00001d 	beq	23a4 <offset_USR_stack+0x24>
    232c:	e08ec290 	umull	ip, lr, r0, r2
    2330:	e3a05000 	mov	r5, #0
    2334:	e0a5e291 	umlal	lr, r5, r1, r2
    2338:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
    233c:	e0a5e390 	umlal	lr, r5, r0, r3
    2340:	e3a06000 	mov	r6, #0
    2344:	e0a65391 	umlal	r5, r6, r1, r3
    2348:	e33c0000 	teq	ip, #0
    234c:	138ee001 	orrne	lr, lr, #1
    2350:	e24440ff 	sub	r4, r4, #255	; 0xff
    2354:	e3560c02 	cmp	r6, #512	; 0x200
    2358:	e2c44c03 	sbc	r4, r4, #768	; 0x300
    235c:	2a000002 	bcs	236c <offset_UND_stack+0x2c>
    2360:	e1b0e08e 	lsls	lr, lr, #1
    2364:	e0b55005 	adcs	r5, r5, r5
    2368:	e0a66006 	adc	r6, r6, r6
    236c:	e1821586 	orr	r1, r2, r6, lsl #11
    2370:	e1811aa5 	orr	r1, r1, r5, lsr #21
    2374:	e1a00585 	lsl	r0, r5, #11
    2378:	e1800aae 	orr	r0, r0, lr, lsr #21
    237c:	e1a0e58e 	lsl	lr, lr, #11
    2380:	e254c0fd 	subs	ip, r4, #253	; 0xfd
    2384:	835c0c07 	cmphi	ip, #1792	; 0x700
    2388:	8a000011 	bhi	23d4 <offset_USR_stack+0x54>
    238c:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
    2390:	01b0e0a0 	lsrseq	lr, r0, #1
    2394:	e2b00000 	adcs	r0, r0, #0
    2398:	e0a11a04 	adc	r1, r1, r4, lsl #20
    239c:	e8bd4070 	pop	{r4, r5, r6, lr}
    23a0:	e12fff1e 	bx	lr
    23a4:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
    23a8:	e1861001 	orr	r1, r6, r1
    23ac:	e1800002 	orr	r0, r0, r2
    23b0:	e0211003 	eor	r1, r1, r3
    23b4:	e05440ac 	subs	r4, r4, ip, lsr #1
    23b8:	c074500c 	rsbsgt	r5, r4, ip
    23bc:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    23c0:	c8bd4070 	popgt	{r4, r5, r6, lr}
    23c4:	c12fff1e 	bxgt	lr
    23c8:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    23cc:	e3a0e000 	mov	lr, #0
    23d0:	e2544001 	subs	r4, r4, #1
    23d4:	ca00005d 	bgt	2550 <offset_USR_stack+0x1d0>
    23d8:	e3740036 	cmn	r4, #54	; 0x36
    23dc:	d3a00000 	movle	r0, #0
    23e0:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
    23e4:	d8bd4070 	pople	{r4, r5, r6, lr}
    23e8:	d12fff1e 	bxle	lr
    23ec:	e2644000 	rsb	r4, r4, #0
    23f0:	e2544020 	subs	r4, r4, #32
    23f4:	aa00001a 	bge	2464 <offset_USR_stack+0xe4>
    23f8:	e294400c 	adds	r4, r4, #12
    23fc:	ca00000c 	bgt	2434 <offset_USR_stack+0xb4>
    2400:	e2844014 	add	r4, r4, #20
    2404:	e2645020 	rsb	r5, r4, #32
    2408:	e1a03510 	lsl	r3, r0, r5
    240c:	e1a00430 	lsr	r0, r0, r4
    2410:	e1800511 	orr	r0, r0, r1, lsl r5
    2414:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
    2418:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    241c:	e0900fa3 	adds	r0, r0, r3, lsr #31
    2420:	e0a21431 	adc	r1, r2, r1, lsr r4
    2424:	e19ee083 	orrs	lr, lr, r3, lsl #1
    2428:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    242c:	e8bd4070 	pop	{r4, r5, r6, lr}
    2430:	e12fff1e 	bx	lr
    2434:	e264400c 	rsb	r4, r4, #12
    2438:	e2645020 	rsb	r5, r4, #32
    243c:	e1a03410 	lsl	r3, r0, r4
    2440:	e1a00530 	lsr	r0, r0, r5
    2444:	e1800411 	orr	r0, r0, r1, lsl r4
    2448:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    244c:	e0900fa3 	adds	r0, r0, r3, lsr #31
    2450:	e2a11000 	adc	r1, r1, #0
    2454:	e19ee083 	orrs	lr, lr, r3, lsl #1
    2458:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    245c:	e8bd4070 	pop	{r4, r5, r6, lr}
    2460:	e12fff1e 	bx	lr
    2464:	e2645020 	rsb	r5, r4, #32
    2468:	e18ee510 	orr	lr, lr, r0, lsl r5
    246c:	e1a03430 	lsr	r3, r0, r4
    2470:	e1833511 	orr	r3, r3, r1, lsl r5
    2474:	e1a00431 	lsr	r0, r1, r4
    2478:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    247c:	e1c00431 	bic	r0, r0, r1, lsr r4
    2480:	e0800fa3 	add	r0, r0, r3, lsr #31
    2484:	e19ee083 	orrs	lr, lr, r3, lsl #1
    2488:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    248c:	e8bd4070 	pop	{r4, r5, r6, lr}
    2490:	e12fff1e 	bx	lr
    2494:	e3340000 	teq	r4, #0
    2498:	1a000008 	bne	24c0 <offset_USR_stack+0x140>
    249c:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
    24a0:	e1b00080 	lsls	r0, r0, #1
    24a4:	e0a11001 	adc	r1, r1, r1
    24a8:	e3110601 	tst	r1, #1048576	; 0x100000
    24ac:	02444001 	subeq	r4, r4, #1
    24b0:	0afffffa 	beq	24a0 <offset_USR_stack+0x120>
    24b4:	e1811006 	orr	r1, r1, r6
    24b8:	e3350000 	teq	r5, #0
    24bc:	112fff1e 	bxne	lr
    24c0:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
    24c4:	e1b02082 	lsls	r2, r2, #1
    24c8:	e0a33003 	adc	r3, r3, r3
    24cc:	e3130601 	tst	r3, #1048576	; 0x100000
    24d0:	02455001 	subeq	r5, r5, #1
    24d4:	0afffffa 	beq	24c4 <offset_USR_stack+0x144>
    24d8:	e1833006 	orr	r3, r3, r6
    24dc:	e12fff1e 	bx	lr
    24e0:	e134000c 	teq	r4, ip
    24e4:	e00c5a23 	and	r5, ip, r3, lsr #20
    24e8:	1135000c 	teqne	r5, ip
    24ec:	0a000007 	beq	2510 <offset_USR_stack+0x190>
    24f0:	e1906081 	orrs	r6, r0, r1, lsl #1
    24f4:	11926083 	orrsne	r6, r2, r3, lsl #1
    24f8:	1affffe5 	bne	2494 <offset_USR_stack+0x114>
    24fc:	e0211003 	eor	r1, r1, r3
    2500:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    2504:	e3a00000 	mov	r0, #0
    2508:	e8bd4070 	pop	{r4, r5, r6, lr}
    250c:	e12fff1e 	bx	lr
    2510:	e1906081 	orrs	r6, r0, r1, lsl #1
    2514:	01a00002 	moveq	r0, r2
    2518:	01a01003 	moveq	r1, r3
    251c:	11926083 	orrsne	r6, r2, r3, lsl #1
    2520:	0a000010 	beq	2568 <offset_USR_stack+0x1e8>
    2524:	e134000c 	teq	r4, ip
    2528:	1a000001 	bne	2534 <offset_USR_stack+0x1b4>
    252c:	e1906601 	orrs	r6, r0, r1, lsl #12
    2530:	1a00000c 	bne	2568 <offset_USR_stack+0x1e8>
    2534:	e135000c 	teq	r5, ip
    2538:	1a000003 	bne	254c <offset_USR_stack+0x1cc>
    253c:	e1926603 	orrs	r6, r2, r3, lsl #12
    2540:	11a00002 	movne	r0, r2
    2544:	11a01003 	movne	r1, r3
    2548:	1a000006 	bne	2568 <offset_USR_stack+0x1e8>
    254c:	e0211003 	eor	r1, r1, r3
    2550:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    2554:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    2558:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    255c:	e3a00000 	mov	r0, #0
    2560:	e8bd4070 	pop	{r4, r5, r6, lr}
    2564:	e12fff1e 	bx	lr
    2568:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    256c:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
    2570:	e8bd4070 	pop	{r4, r5, r6, lr}
    2574:	e12fff1e 	bx	lr

00002578 <__aeabi_ddiv>:
    2578:	e92d4070 	push	{r4, r5, r6, lr}
    257c:	e3a0c0ff 	mov	ip, #255	; 0xff
    2580:	e38ccc07 	orr	ip, ip, #1792	; 0x700
    2584:	e01c4a21 	ands	r4, ip, r1, lsr #20
    2588:	101c5a23 	andsne	r5, ip, r3, lsr #20
    258c:	1134000c 	teqne	r4, ip
    2590:	1135000c 	teqne	r5, ip
    2594:	0b00005e 	bleq	2714 <__aeabi_ddiv+0x19c>
    2598:	e0444005 	sub	r4, r4, r5
    259c:	e021e003 	eor	lr, r1, r3
    25a0:	e1925603 	orrs	r5, r2, r3, lsl #12
    25a4:	e1a01601 	lsl	r1, r1, #12
    25a8:	0a00004c 	beq	26e0 <__aeabi_ddiv+0x168>
    25ac:	e1a03603 	lsl	r3, r3, #12
    25b0:	e3a05201 	mov	r5, #268435456	; 0x10000000
    25b4:	e1853223 	orr	r3, r5, r3, lsr #4
    25b8:	e1833c22 	orr	r3, r3, r2, lsr #24
    25bc:	e1a02402 	lsl	r2, r2, #8
    25c0:	e1855221 	orr	r5, r5, r1, lsr #4
    25c4:	e1855c20 	orr	r5, r5, r0, lsr #24
    25c8:	e1a06400 	lsl	r6, r0, #8
    25cc:	e20e1102 	and	r1, lr, #-2147483648	; 0x80000000
    25d0:	e1550003 	cmp	r5, r3
    25d4:	01560002 	cmpeq	r6, r2
    25d8:	e2a440fd 	adc	r4, r4, #253	; 0xfd
    25dc:	e2844c03 	add	r4, r4, #768	; 0x300
    25e0:	2a000001 	bcs	25ec <__aeabi_ddiv+0x74>
    25e4:	e1b030a3 	lsrs	r3, r3, #1
    25e8:	e1a02062 	rrx	r2, r2
    25ec:	e0566002 	subs	r6, r6, r2
    25f0:	e0c55003 	sbc	r5, r5, r3
    25f4:	e1b030a3 	lsrs	r3, r3, #1
    25f8:	e1a02062 	rrx	r2, r2
    25fc:	e3a00601 	mov	r0, #1048576	; 0x100000
    2600:	e3a0c702 	mov	ip, #524288	; 0x80000
    2604:	e056e002 	subs	lr, r6, r2
    2608:	e0d5e003 	sbcs	lr, r5, r3
    260c:	20466002 	subcs	r6, r6, r2
    2610:	21a0500e 	movcs	r5, lr
    2614:	2180000c 	orrcs	r0, r0, ip
    2618:	e1b030a3 	lsrs	r3, r3, #1
    261c:	e1a02062 	rrx	r2, r2
    2620:	e056e002 	subs	lr, r6, r2
    2624:	e0d5e003 	sbcs	lr, r5, r3
    2628:	20466002 	subcs	r6, r6, r2
    262c:	21a0500e 	movcs	r5, lr
    2630:	218000ac 	orrcs	r0, r0, ip, lsr #1
    2634:	e1b030a3 	lsrs	r3, r3, #1
    2638:	e1a02062 	rrx	r2, r2
    263c:	e056e002 	subs	lr, r6, r2
    2640:	e0d5e003 	sbcs	lr, r5, r3
    2644:	20466002 	subcs	r6, r6, r2
    2648:	21a0500e 	movcs	r5, lr
    264c:	2180012c 	orrcs	r0, r0, ip, lsr #2
    2650:	e1b030a3 	lsrs	r3, r3, #1
    2654:	e1a02062 	rrx	r2, r2
    2658:	e056e002 	subs	lr, r6, r2
    265c:	e0d5e003 	sbcs	lr, r5, r3
    2660:	20466002 	subcs	r6, r6, r2
    2664:	21a0500e 	movcs	r5, lr
    2668:	218001ac 	orrcs	r0, r0, ip, lsr #3
    266c:	e195e006 	orrs	lr, r5, r6
    2670:	0a00000d 	beq	26ac <__aeabi_ddiv+0x134>
    2674:	e1a05205 	lsl	r5, r5, #4
    2678:	e1855e26 	orr	r5, r5, r6, lsr #28
    267c:	e1a06206 	lsl	r6, r6, #4
    2680:	e1a03183 	lsl	r3, r3, #3
    2684:	e1833ea2 	orr	r3, r3, r2, lsr #29
    2688:	e1a02182 	lsl	r2, r2, #3
    268c:	e1b0c22c 	lsrs	ip, ip, #4
    2690:	1affffdb 	bne	2604 <__aeabi_ddiv+0x8c>
    2694:	e3110601 	tst	r1, #1048576	; 0x100000
    2698:	1a000006 	bne	26b8 <__aeabi_ddiv+0x140>
    269c:	e1811000 	orr	r1, r1, r0
    26a0:	e3a00000 	mov	r0, #0
    26a4:	e3a0c102 	mov	ip, #-2147483648	; 0x80000000
    26a8:	eaffffd5 	b	2604 <__aeabi_ddiv+0x8c>
    26ac:	e3110601 	tst	r1, #1048576	; 0x100000
    26b0:	01811000 	orreq	r1, r1, r0
    26b4:	03a00000 	moveq	r0, #0
    26b8:	e254c0fd 	subs	ip, r4, #253	; 0xfd
    26bc:	835c0c07 	cmphi	ip, #1792	; 0x700
    26c0:	8affff43 	bhi	23d4 <offset_USR_stack+0x54>
    26c4:	e055c003 	subs	ip, r5, r3
    26c8:	0056c002 	subseq	ip, r6, r2
    26cc:	01b0c0a0 	lsrseq	ip, r0, #1
    26d0:	e2b00000 	adcs	r0, r0, #0
    26d4:	e0a11a04 	adc	r1, r1, r4, lsl #20
    26d8:	e8bd4070 	pop	{r4, r5, r6, lr}
    26dc:	e12fff1e 	bx	lr
    26e0:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
    26e4:	e18e1621 	orr	r1, lr, r1, lsr #12
    26e8:	e09440ac 	adds	r4, r4, ip, lsr #1
    26ec:	c074500c 	rsbsgt	r5, r4, ip
    26f0:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    26f4:	c8bd4070 	popgt	{r4, r5, r6, lr}
    26f8:	c12fff1e 	bxgt	lr
    26fc:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    2700:	e3a0e000 	mov	lr, #0
    2704:	e2544001 	subs	r4, r4, #1
    2708:	eaffff31 	b	23d4 <offset_USR_stack+0x54>
    270c:	e185e006 	orr	lr, r5, r6
    2710:	eaffff2f 	b	23d4 <offset_USR_stack+0x54>
    2714:	e00c5a23 	and	r5, ip, r3, lsr #20
    2718:	e134000c 	teq	r4, ip
    271c:	0135000c 	teqeq	r5, ip
    2720:	0affff90 	beq	2568 <offset_USR_stack+0x1e8>
    2724:	e134000c 	teq	r4, ip
    2728:	1a000006 	bne	2748 <__aeabi_ddiv+0x1d0>
    272c:	e1904601 	orrs	r4, r0, r1, lsl #12
    2730:	1affff8c 	bne	2568 <offset_USR_stack+0x1e8>
    2734:	e135000c 	teq	r5, ip
    2738:	1affff83 	bne	254c <offset_USR_stack+0x1cc>
    273c:	e1a00002 	mov	r0, r2
    2740:	e1a01003 	mov	r1, r3
    2744:	eaffff87 	b	2568 <offset_USR_stack+0x1e8>
    2748:	e135000c 	teq	r5, ip
    274c:	1a000004 	bne	2764 <__aeabi_ddiv+0x1ec>
    2750:	e1925603 	orrs	r5, r2, r3, lsl #12
    2754:	0affff68 	beq	24fc <offset_USR_stack+0x17c>
    2758:	e1a00002 	mov	r0, r2
    275c:	e1a01003 	mov	r1, r3
    2760:	eaffff80 	b	2568 <offset_USR_stack+0x1e8>
    2764:	e1906081 	orrs	r6, r0, r1, lsl #1
    2768:	11926083 	orrsne	r6, r2, r3, lsl #1
    276c:	1affff48 	bne	2494 <offset_USR_stack+0x114>
    2770:	e1904081 	orrs	r4, r0, r1, lsl #1
    2774:	1affff74 	bne	254c <offset_USR_stack+0x1cc>
    2778:	e1925083 	orrs	r5, r2, r3, lsl #1
    277c:	1affff5e 	bne	24fc <offset_USR_stack+0x17c>
    2780:	eaffff78 	b	2568 <offset_USR_stack+0x1e8>

00002784 <__gedf2>:
    2784:	e3e0c000 	mvn	ip, #0
    2788:	ea000002 	b	2798 <__cmpdf2+0x4>

0000278c <__ledf2>:
    278c:	e3a0c001 	mov	ip, #1
    2790:	ea000000 	b	2798 <__cmpdf2+0x4>

00002794 <__cmpdf2>:
    2794:	e3a0c001 	mov	ip, #1
    2798:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
    279c:	e1a0c081 	lsl	ip, r1, #1
    27a0:	e1f0cacc 	mvns	ip, ip, asr #21
    27a4:	e1a0c083 	lsl	ip, r3, #1
    27a8:	11f0cacc 	mvnsne	ip, ip, asr #21
    27ac:	0a00000e 	beq	27ec <__cmpdf2+0x58>
    27b0:	e28dd004 	add	sp, sp, #4
    27b4:	e190c081 	orrs	ip, r0, r1, lsl #1
    27b8:	0192c083 	orrseq	ip, r2, r3, lsl #1
    27bc:	11310003 	teqne	r1, r3
    27c0:	01300002 	teqeq	r0, r2
    27c4:	03a00000 	moveq	r0, #0
    27c8:	012fff1e 	bxeq	lr
    27cc:	e3700000 	cmn	r0, #0
    27d0:	e1310003 	teq	r1, r3
    27d4:	51510003 	cmppl	r1, r3
    27d8:	01500002 	cmpeq	r0, r2
    27dc:	21a00fc3 	asrcs	r0, r3, #31
    27e0:	31e00fc3 	mvncc	r0, r3, asr #31
    27e4:	e3800001 	orr	r0, r0, #1
    27e8:	e12fff1e 	bx	lr
    27ec:	e1a0c081 	lsl	ip, r1, #1
    27f0:	e1f0cacc 	mvns	ip, ip, asr #21
    27f4:	1a000001 	bne	2800 <__cmpdf2+0x6c>
    27f8:	e190c601 	orrs	ip, r0, r1, lsl #12
    27fc:	1a000004 	bne	2814 <__cmpdf2+0x80>
    2800:	e1a0c083 	lsl	ip, r3, #1
    2804:	e1f0cacc 	mvns	ip, ip, asr #21
    2808:	1affffe8 	bne	27b0 <__cmpdf2+0x1c>
    280c:	e192c603 	orrs	ip, r2, r3, lsl #12
    2810:	0affffe6 	beq	27b0 <__cmpdf2+0x1c>
    2814:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    2818:	e12fff1e 	bx	lr

0000281c <__aeabi_cdrcmple>:
    281c:	e1a0c000 	mov	ip, r0
    2820:	e1a00002 	mov	r0, r2
    2824:	e1a0200c 	mov	r2, ip
    2828:	e1a0c001 	mov	ip, r1
    282c:	e1a01003 	mov	r1, r3
    2830:	e1a0300c 	mov	r3, ip
    2834:	eaffffff 	b	2838 <__aeabi_cdcmpeq>

00002838 <__aeabi_cdcmpeq>:
    2838:	e92d4001 	push	{r0, lr}
    283c:	ebffffd4 	bl	2794 <__cmpdf2>
    2840:	e3500000 	cmp	r0, #0
    2844:	43700000 	cmnmi	r0, #0
    2848:	e8bd4001 	pop	{r0, lr}
    284c:	e12fff1e 	bx	lr

00002850 <__aeabi_dcmpeq>:
    2850:	e52de008 	str	lr, [sp, #-8]!
    2854:	ebfffff7 	bl	2838 <__aeabi_cdcmpeq>
    2858:	03a00001 	moveq	r0, #1
    285c:	13a00000 	movne	r0, #0
    2860:	e49de008 	ldr	lr, [sp], #8
    2864:	e12fff1e 	bx	lr

00002868 <__aeabi_dcmplt>:
    2868:	e52de008 	str	lr, [sp, #-8]!
    286c:	ebfffff1 	bl	2838 <__aeabi_cdcmpeq>
    2870:	33a00001 	movcc	r0, #1
    2874:	23a00000 	movcs	r0, #0
    2878:	e49de008 	ldr	lr, [sp], #8
    287c:	e12fff1e 	bx	lr

00002880 <__aeabi_dcmple>:
    2880:	e52de008 	str	lr, [sp, #-8]!
    2884:	ebffffeb 	bl	2838 <__aeabi_cdcmpeq>
    2888:	93a00001 	movls	r0, #1
    288c:	83a00000 	movhi	r0, #0
    2890:	e49de008 	ldr	lr, [sp], #8
    2894:	e12fff1e 	bx	lr

00002898 <__aeabi_dcmpge>:
    2898:	e52de008 	str	lr, [sp, #-8]!
    289c:	ebffffde 	bl	281c <__aeabi_cdrcmple>
    28a0:	93a00001 	movls	r0, #1
    28a4:	83a00000 	movhi	r0, #0
    28a8:	e49de008 	ldr	lr, [sp], #8
    28ac:	e12fff1e 	bx	lr

000028b0 <__aeabi_dcmpgt>:
    28b0:	e52de008 	str	lr, [sp, #-8]!
    28b4:	ebffffd8 	bl	281c <__aeabi_cdrcmple>
    28b8:	33a00001 	movcc	r0, #1
    28bc:	23a00000 	movcs	r0, #0
    28c0:	e49de008 	ldr	lr, [sp], #8
    28c4:	e12fff1e 	bx	lr

000028c8 <__aeabi_d2iz>:
    28c8:	e1a02081 	lsl	r2, r1, #1
    28cc:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    28d0:	2a00000c 	bcs	2908 <__aeabi_d2iz+0x40>
    28d4:	5a000009 	bpl	2900 <__aeabi_d2iz+0x38>
    28d8:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    28dc:	e0532ac2 	subs	r2, r3, r2, asr #21
    28e0:	9a00000a 	bls	2910 <__aeabi_d2iz+0x48>
    28e4:	e1a03581 	lsl	r3, r1, #11
    28e8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    28ec:	e1833aa0 	orr	r3, r3, r0, lsr #21
    28f0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    28f4:	e1a00233 	lsr	r0, r3, r2
    28f8:	12600000 	rsbne	r0, r0, #0
    28fc:	e12fff1e 	bx	lr
    2900:	e3a00000 	mov	r0, #0
    2904:	e12fff1e 	bx	lr
    2908:	e1900601 	orrs	r0, r0, r1, lsl #12
    290c:	1a000002 	bne	291c <__aeabi_d2iz+0x54>
    2910:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
    2914:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    2918:	e12fff1e 	bx	lr
    291c:	e3a00000 	mov	r0, #0
    2920:	e12fff1e 	bx	lr

00002924 <__aeabi_d2uiz>:
    2924:	e1b02081 	lsls	r2, r1, #1
    2928:	2a00000a 	bcs	2958 <_length_text+0x20>
    292c:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    2930:	2a00000a 	bcs	2960 <_length_text+0x28>
    2934:	5a000007 	bpl	2958 <_length_text+0x20>
    2938:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    293c:	e0532ac2 	subs	r2, r3, r2, asr #21
    2940:	4a000008 	bmi	2968 <_length_text+0x30>
    2944:	e1a03581 	lsl	r3, r1, #11
    2948:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    294c:	e1833aa0 	orr	r3, r3, r0, lsr #21
    2950:	e1a00233 	lsr	r0, r3, r2
    2954:	e12fff1e 	bx	lr
    2958:	e3a00000 	mov	r0, #0
    295c:	e12fff1e 	bx	lr
    2960:	e1900601 	orrs	r0, r0, r1, lsl #12
    2964:	1a000001 	bne	2970 <_length_text+0x38>
    2968:	e3e00000 	mvn	r0, #0
    296c:	e12fff1e 	bx	lr
    2970:	e3a00000 	mov	r0, #0
    2974:	e12fff1e 	bx	lr

Disassembly of section .init:

00002978 <_init>:
    2978:	e1a0c00d 	mov	ip, sp
    297c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    2980:	e24cb004 	sub	fp, ip, #4
    2984:	e24bd028 	sub	sp, fp, #40	; 0x28
    2988:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
    298c:	e12fff1e 	bx	lr

Disassembly of section .fini:

00002990 <_fini>:
    2990:	e1a0c00d 	mov	ip, sp
    2994:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    2998:	e24cb004 	sub	fp, ip, #4
    299c:	e24bd028 	sub	sp, fp, #40	; 0x28
    29a0:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
    29a4:	e12fff1e 	bx	lr

Disassembly of section .rodata:

000029a8 <_start_rodata>:
    29a8:	203d2069 	eorscs	r2, sp, r9, rrx
    29ac:	000a6425 	andeq	r6, sl, r5, lsr #8
    29b0:	33323130 	teqcc	r2, #48, 2
    29b4:	37363534 	undefined instruction 0x37363534
    29b8:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
    29bc:	66656463 	strbtvs	r6, [r5], -r3, ror #8
    29c0:	00000000 	andeq	r0, r0, r0
    29c4:	33323130 	teqcc	r2, #48, 2
    29c8:	37363534 	undefined instruction 0x37363534
    29cc:	00003938 	andeq	r3, r0, r8, lsr r9
    29d0:	616f6c66 	cmnvs	pc, r6, ror #24
    29d4:	61702074 	cmnvs	r0, r4, ror r0
    29d8:	6e697373 	mcrvs	3, 3, r7, cr9, cr3, {3}
    29dc:	72652067 	rsbvc	r2, r5, #103	; 0x67
    29e0:	0a726f72 	beq	1c9e7b0 <setting+0x1c9bcac>
    29e4:	00000000 	andeq	r0, r0, r0
    29e8:	00007830 	andeq	r7, r0, r0, lsr r8
    29ec:	00000000 	andeq	r0, r0, r0

000029f0 <C.3.926>:
    29f0:	00000000 	andeq	r0, r0, r0
    29f4:	3fe00000 	svccc	0x00e00000
    29f8:	9999999a 	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
    29fc:	3fa99999 	svccc	0x00a99999
    2a00:	47ae147b 	undefined instruction 0x47ae147b
    2a04:	3f747ae1 	svccc	0x00747ae1
    2a08:	d2f1a9fc 	rscsle	sl, r1, #252, 18	; 0x3f0000
    2a0c:	3f40624d 	svccc	0x0040624d
    2a10:	eb1c432d 	bl	7136cc <setting+0x710bc8>
    2a14:	3f0a36e2 	svccc	0x000a36e2
    2a18:	88e368f1 	stmiahi	r3!, {r0, r4, r5, r6, r7, fp, sp, lr}^
    2a1c:	3ed4f8b5 	mrccc	8, 6, pc, cr4, cr5, {5}
    2a20:	a0b5ed8d 	adcsge	lr, r5, sp, lsl #27
    2a24:	3ea0c6f7 	mcrcc	6, 5, ip, cr0, cr7, {7}
    2a28:	9abcaf48 	bls	fef2e750 <Top_of_stack_0+0xf6f2e750>
    2a2c:	3e6ad7f2 	mcrcc	7, 3, sp, cr10, cr2, {7}
    2a30:	e2308c3a 	eors	r8, r0, #14848	; 0x3a00
    2a34:	3e35798e 	cdpcc	9, 3, cr7, cr5, cr14, {4}
    2a38:	e826d695 	stmda	r6!, {r0, r2, r4, r7, r9, sl, ip, lr, pc}
    2a3c:	3e012e0b 	cdpcc	14, 0, cr2, cr1, cr11, {0}
    2a40:	6f727245 	svcvs	0x00727245
    2a44:	6e692072 	mcrvs	0, 3, r2, cr9, cr2, {3}
    2a48:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2a4c:	20747075 	rsbscs	r7, r4, r5, ror r0
    2a50:	626d756e 	rsbvs	r7, sp, #461373440	; 0x1b800000
    2a54:	000a7265 	andeq	r7, sl, r5, ror #4
    2a58:	61746144 	cmnvs	r4, r4, asr #2
    2a5c:	6f626120 	svcvs	0x00626120
    2a60:	45207472 	strmi	r7, [r0, #-1138]!	; 0x472
    2a64:	70656378 	rsbvc	r6, r5, r8, ror r3
    2a68:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2a6c:	21212120 	teqcs	r1, r0, lsr #2
    2a70:	0000000a 	andeq	r0, r0, sl
    2a74:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xe55
    2a78:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0x966
    2a7c:	78452064 	stmdavc	r5, {r2, r5, r6, sp}^
    2a80:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0x563
    2a84:	206e6f69 	rsbcs	r6, lr, r9, ror #30
    2a88:	0a212121 	beq	84af14 <setting+0x848410>
    2a8c:	00000000 	andeq	r0, r0, r0
    2a90:	524f430a 	subpl	r4, pc, #671088640	; 0x28000000
    2a94:	64252045 	strtvs	r2, [r5], #-69	; 0x45
    2a98:	49575320 	ldmdbmi	r7, {r5, r8, r9, ip, lr}^
    2a9c:	45203a20 	strmi	r3, [r0, #-2592]!	; 0xa20
    2aa0:	6f20646e 	svcvs	0x0020646e
    2aa4:	69732066 	ldmdbvs	r3!, {r1, r2, r5, r6, sp}^
    2aa8:	616c756d 	cmnvs	ip, sp, ror #10
    2aac:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2ab0:	21212120 	teqcs	r1, r0, lsr #2
    2ab4:	0000000a 	andeq	r0, r0, sl
    2ab8:	66657250 	undefined instruction 0x66657250
    2abc:	68637465 	stmdavs	r3!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2ac0:	6f626120 	svcvs	0x00626120
    2ac4:	45207472 	strmi	r7, [r0, #-1138]!	; 0x472
    2ac8:	70656378 	rsbvc	r6, r5, r8, ror r3
    2acc:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2ad0:	21212120 	teqcs	r1, r0, lsr #2
    2ad4:	0000000a 	andeq	r0, r0, sl
    2ad8:	20514946 	subscs	r4, r1, r6, asr #18
    2adc:	65637845 	strbvs	r7, [r3, #-2117]!	; 0x845
    2ae0:	6f697470 	svcvs	0x00697470
    2ae4:	2121206e 	teqcs	r1, lr, rrx
    2ae8:	00000a21 	andeq	r0, r0, r1, lsr #20

Disassembly of section .data:

00002aec <__dso_handle>:
    2aec:	00000000 	andeq	r0, r0, r0

Disassembly of section .init_array:

00002af0 <__frame_dummy_init_array_entry>:
    2af0:	0000016c 	andeq	r0, r0, ip, ror #2

Disassembly of section .fini_array:

00002af4 <__do_global_dtors_aux_fini_array_entry>:
    2af4:	00000150 	andeq	r0, r0, r0, asr r1

Disassembly of section .jcr:

00002af8 <__JCR_END__>:
    2af8:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss:

00002afc <_start_bss>:
	...

00002afd <_end_bss>:
    2afd:	00000000 	andeq	r0, r0, r0

00002b00 <core_id>:
    2b00:	00000000 	andeq	r0, r0, r0

00002b04 <setting>:
    2b04:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	00002a41 	andeq	r2, r0, r1, asr #20
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	61656100 	cmnvs	r5, r0, lsl #2
        LDR     PC, SWI_Addr
   8:	01006962 	tsteq	r0, r2, ror #18
        LDR     PC, PRE_Addr
   c:	00000020 	andeq	r0, r0, r0, lsr #32
        LDR     PC, DAB_Addr
  10:	412d3705 	teqmi	sp, r5, lsl #14
        NOP
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
        LDR     PC, IRQ_Addr           
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	14041202 	strne	r1, [r4], #-514	; 0x202
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	1a011803 	bne	46038 <setting+0x43534>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	43434700 	movtmi	r4, #14080	; 0x3700
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	5328203a 	teqpl	r8, #58	; 0x3a
        LDR     PC, SWI_Addr
   8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
        LDR     PC, PRE_Addr
   c:	20797265 	rsbscs	r7, r9, r5, ror #4
        LDR     PC, DAB_Addr
  10:	202b2b47 	eorcs	r2, fp, r7, asr #22
        NOP
  14:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0x94c
        LDR     PC, IRQ_Addr           
  18:	31303220 	teqcc	r0, r0, lsr #4
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	2d317130 	ldfcss	f7, [r1, #-192]!	; 0xffffff40
  20:	29383831 	ldmdbcs	r8!, {r0, r4, r5, fp, ip, sp}
  24:	342e3420 	strtcc	r3, [lr], #-1056	; 0x420
  28:	0000312e 	andeq	r3, r0, lr, lsr #2
  2c:	3a434347 	bcc	10d0d50 <setting+0x10ce24c>
  30:	6f532820 	svcvs	0x00532820
  34:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
  38:	47207972 	undefined instruction 0x47207972
  3c:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	20657469 	rsbcs	r7, r5, r9, ror #8
	mrs r1, cpsr
  44:	30313032 	eorscc	r3, r1, r2, lsr r0
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
  48:	312d3171 	teqcc	sp, r1, ror r1
	orr r1, r1, #0x00df
  4c:	20293838 	eorcs	r3, r9, r8, lsr r8
	msr cpsr_c, r1
  50:	2e342e34 	mrccs	14, 1, r2, cr4, cr4, {1}
.equ Top_of_stack_1, 0x07000000 @ 112MB
.equ Top_of_stack_2, 0x06000000 @ 96MB
.equ Top_of_stack_3, 0x05000000 @ 80MB

init_stack_part1:
	mrc p15, 0, r6, c0, c0, 5
  54:	47000031 	smladxmi	r0, r1, r0, r0
	
	mov r0, #Top_of_stack_3
  58:	203a4343 	eorscs	r4, sl, r3, asr #6
	cmp r6 , #0x3
  5c:	756f5328 	strbvc	r5, [pc, #-808]!	; fffffd3c <Top_of_stack_0+0xf7fffd3c>
	beq init_stack_part2
  60:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
	
	mov r0, #Top_of_stack_2
  64:	2b472079 	blcs	11c8250 <setting+0x11c574c>
	cmp r6 , #0x2
  68:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
	beq init_stack_part2
  6c:	32206574 	eorcc	r6, r0, #116, 10	; 0x1d000000
	
	mov r0, #Top_of_stack_1
  70:	71303130 	teqvc	r0, r0, lsr r1
	cmp r6 , #0x1
  74:	38312d31 	ldmdacc	r1!, {r0, r4, r5, r8, sl, fp, sp}
	beq init_stack_part2
  78:	34202938 	strtcc	r2, [r0], #-2360	; 0x938

	mov r0, #Top_of_stack_0
  7c:	312e342e 	teqcc	lr, lr, lsr #8
	cmp r6 , #0x0
  80:	43470000 	movtmi	r0, #28672	; 0x7000
	beq init_stack_part2
  84:	28203a43 	stmdacs	r0!, {r0, r1, r6, r9, fp, ip, sp}

	nop
  88:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
	b .
  8c:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^

init_stack_part2:
	sub sp, r0, #offset_USR_stack @ set user/sys mode stack pointer
  90:	2b2b4720 	blcs	ad1d18 <setting+0xacf214>
	
	msr cpsr_c, #Mode_FIQ|I_Bit|F_Bit @ set fiq mode stack pointer
  94:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xc20
	sub sp, r0, #offset_FIQ_stack
  98:	30322065 	eorscc	r2, r2, r5, rrx
	
	msr cpsr_c, #Mode_IRQ|I_Bit|F_Bit @ set irq mode stack pointer
  9c:	31713031 	cmncc	r1, r1, lsr r0
	sub sp, r0, #offset_IRQ_stack
  a0:	3838312d 	ldmdacc	r8!, {r0, r2, r3, r5, r8, ip, sp}
	
	msr cpsr_c, #Mode_SVC|I_Bit|F_Bit @ set svc mode stack pointer
  a4:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
	sub sp, r0, #offset_SVC_stack
  a8:	00312e34 	eorseq	r2, r1, r4, lsr lr
	
	msr cpsr_c, #Mode_ABT|I_Bit|F_Bit @ set abt mode stack pointer
  ac:	43434700 	movtmi	r4, #14080	; 0x3700
	sub sp, r0, #offset_ABT_stack
  b0:	5328203a 	teqpl	r8, #58	; 0x3a
	
	msr cpsr_c, #Mode_UND|I_Bit|F_Bit @ set und mode stack pointer
  b4:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
	sub sp, r0, #offset_UND_stack
  b8:	20797265 	rsbscs	r7, r9, r5, ror #4



/* to setup the BBS section */
init_bss:
	ldr r0, start_bss
  bc:	202b2b47 	eorcs	r2, fp, r7, asr #22
	ldr r1, length_bss
  c0:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0x94c
	eor r2, r2, r2			@ $r2 = 0
  c4:	31303220 	teqcc	r0, r0, lsr #4

bss_clear_loop:
	subs r1, r1, #4
  c8:	2d317130 	ldfcss	f7, [r1, #-192]!	; 0xffffff40
	bmi bss_clear_end
  cc:	29383831 	ldmdbcs	r8!, {r0, r4, r5, fp, ip, sp}
	str r2, [r0]
  d0:	342e3420 	strtcc	r3, [lr], #-1056	; 0x420
	b bss_clear_loop
  d4:	0000312e 	andeq	r3, r0, lr, lsr #2

bss_clear_end:

/* MMU enable */	
mmu_enable:
	mrc p15, 0, r2, c1, c0, 0 
  d8:	3a434347 	bcc	10d0dfc <setting+0x10ce2f8>
	mov r1, #0x00000001
  dc:	6f532820 	svcvs	0x00532820
	orr r2, r2, r1
  e0:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
	mcr p15, 0, r2, c1, c0, 0 @ Enable MMU
  e4:	47207972 	undefined instruction 0x47207972

	
/* I-Cache enable */
icache_enable:
	mrc p15, 0, r2, c1, c0, 0 
  e8:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
	mov r1, #0x00001000
  ec:	20657469 	rsbcs	r7, r5, r9, ror #8
	orr r2, r2, r1
  f0:	30313032 	eorscc	r3, r1, r2, lsr r0
	mcr p15, 0, r2, c1, c0, 0 @ Enable Icache
  f4:	312d3171 	teqcc	sp, r1, ror r1

/* I-Cache enable */	
dcache_enable:
	mrc p15, 0, r2, c1, c0, 0 
  f8:	20293838 	eorcs	r3, r9, r8, lsr r8
	mov r1, #0x00000004
  fc:	2e342e34 	mrccs	14, 1, r2, cr4, cr4, {1}
	orr r2, r2, r1
 100:	47000031 	smladxmi	r0, r1, r0, r0
	mcr p15, 0, r2, c1, c0, 0 @ Enable Dcache
 104:	203a4343 	eorscs	r4, sl, r3, asr #6
/****************************************************************************************************
 * the initialization process is done now
 * switch to USR mode and then go to the entry of the test program
 ****************************************************************************************************/
go:
	mrs r5, cpsr
 108:	756f5328 	strbvc	r5, [pc, #-808]!	; fffffde8 <Top_of_stack_0+0xf7fffde8>
	and r5, r5, #~0x00ff
 10c:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
	orr r5, r5, #0x0010
 110:	2b472079 	blcs	11c82fc <setting+0x11c57f8>
	msr cpsr_c, r5
 114:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
	bl main
 118:	32206574 	eorcc	r6, r0, #116, 10	; 0x1d000000
/****************************************************************************************************
 * the test program is also done now
 * terminate and shutdown the system through semihosting
 ****************************************************************************************************/
stop:
	swi 0x00ffffff
 11c:	71303130 	teqvc	r0, r0, lsr r1
	nop
 120:	38312d31 	ldmdacc	r1!, {r0, r4, r5, r8, sl, fp, sp}
	b .
 124:	34202938 	strtcc	r2, [r0], #-2360	; 0x938
 128:	312e342e 	teqcc	lr, lr, lsr #8
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
        LDR     PC, SWI_Addr
   8:	110e1b0e 	tstne	lr, lr, lsl #22
        LDR     PC, PRE_Addr
   c:	10011201 	andne	r1, r1, r1, lsl #4
        LDR     PC, DAB_Addr
  10:	02000006 	andeq	r0, r0, #6
        NOP
  14:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ffffff64 <Top_of_stack_0+0xf7ffff64>
        LDR     PC, IRQ_Addr           
  18:	0b3a0e03 	bleq	e8382c <setting+0xe80d28>
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  20:	01120111 	tsteq	r2, r1, lsl r1
  24:	13010640 	movwne	r0, #5696	; 0x1640
  28:	34030000 	strcc	r0, [r3], #-0
  2c:	3a080300 	bcc	200c34 <setting+0x1fe130>
  30:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  34:	000a0213 	andeq	r0, sl, r3, lsl r2
  38:	00240400 	eoreq	r0, r4, r0, lsl #8
  3c:	0b3e0b0b 	bleq	f82c70 <setting+0xf8016c>
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	00000803 	andeq	r0, r0, r3, lsl #16
	mrs r1, cpsr
  44:	00110100 	andseq	r0, r1, r0, lsl #2
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
  48:	01110610 	tsteq	r1, r0, lsl r6
	orr r1, r1, #0x00df
  4c:	08030112 	stmdaeq	r3, {r1, r4, r8}
	msr cpsr_c, r1
  50:	0825081b 	stmdaeq	r5!, {r0, r1, r3, r4, fp}
.equ Top_of_stack_1, 0x07000000 @ 112MB
.equ Top_of_stack_2, 0x06000000 @ 96MB
.equ Top_of_stack_3, 0x05000000 @ 80MB

init_stack_part1:
	mrc p15, 0, r6, c0, c0, 5
  54:	00000513 	andeq	r0, r0, r3, lsl r5
	
	mov r0, #Top_of_stack_3
  58:	00110100 	andseq	r0, r1, r0, lsl #2
	cmp r6 , #0x3
  5c:	01110610 	tsteq	r1, r0, lsl r6
	beq init_stack_part2
  60:	08030112 	stmdaeq	r3, {r1, r4, r8}
	
	mov r0, #Top_of_stack_2
  64:	0825081b 	stmdaeq	r5!, {r0, r1, r3, r4, fp}
	cmp r6 , #0x2
  68:	00000513 	andeq	r0, r0, r3, lsl r5
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	00000052 	andeq	r0, r0, r2, asr r0
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	00000002 	andeq	r0, r0, r2
        LDR     PC, SWI_Addr
   8:	01040000 	tsteq	r4, r0
        LDR     PC, PRE_Addr
   c:	00000000 	andeq	r0, r0, r0
        LDR     PC, DAB_Addr
  10:	00000c01 	andeq	r0, r0, r1, lsl #24
        NOP
  14:	00001d00 	andeq	r1, r0, r0, lsl #26
        LDR     PC, IRQ_Addr           
  18:	0001a000 	andeq	sl, r1, r0
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	0001ec00 	andeq	lr, r1, r0, lsl #24
  20:	00000000 	andeq	r0, r0, r0
  24:	44010200 	strmi	r0, [r1], #-512	; 0x200
  28:	01000000 	tsteq	r0, r0
  2c:	00004e05 	andeq	r4, r0, r5, lsl #28
  30:	0001a000 	andeq	sl, r1, r0
  34:	0001ec00 	andeq	lr, r1, r0, lsl #24
  38:	00000000 	andeq	r0, r0, r0
  3c:	00004e00 	andeq	r4, r0, r0, lsl #28
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	00690300 	rsbeq	r0, r9, r0, lsl #6
	mrs r1, cpsr
  44:	004e0801 	subeq	r0, lr, r1, lsl #16
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
  48:	91020000 	tstls	r2, r0
	orr r1, r1, #0x00df
  4c:	04040074 	streq	r0, [r4], #-116	; 0x74
	msr cpsr_c, r1
  50:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
.equ Top_of_stack_1, 0x07000000 @ 112MB
.equ Top_of_stack_2, 0x06000000 @ 96MB
.equ Top_of_stack_3, 0x05000000 @ 80MB

init_stack_part1:
	mrc p15, 0, r6, c0, c0, 5
  54:	00530000 	subseq	r0, r3, r0
	
	mov r0, #Top_of_stack_3
  58:	00020000 	andeq	r0, r2, r0
	cmp r6 , #0x3
  5c:	00000045 	andeq	r0, r0, r5, asr #32
	beq init_stack_part2
  60:	00420104 	subeq	r0, r2, r4, lsl #2
	
	mov r0, #Top_of_stack_2
  64:	00400000 	subeq	r0, r0, r0
	cmp r6 , #0x2
  68:	01480000 	cmpeq	r8, r0
	beq init_stack_part2
  6c:	6f620000 	svcvs	0x00620000
	
	mov r0, #Top_of_stack_1
  70:	732e746f 	teqvc	lr, #1862270976	; 0x6f000000
	cmp r6 , #0x1
  74:	6f682f00 	svcvs	0x00682f00
	beq init_stack_part2
  78:	752f656d 	strvc	r6, [pc, #-1389]!	; fffffb13 <Top_of_stack_0+0xf7fffb13>

	mov r0, #Top_of_stack_0
  7c:	65646f66 	strbvs	r6, [r4, #-3942]!	; 0xf66
	cmp r6 , #0x0
  80:	2f6b6572 	svccs	0x006b6572
	beq init_stack_part2
  84:	2f766564 	svccs	0x00766564

	nop
  88:	6b726f77 	blvs	1c9be6c <setting+0x1c99368>
	b .
  8c:	2f676e69 	svccs	0x00676e69

init_stack_part2:
	sub sp, r0, #offset_USR_stack @ set user/sys mode stack pointer
  90:	2f70766d 	svccs	0x0070766d
	
	msr cpsr_c, #Mode_FIQ|I_Bit|F_Bit @ set fiq mode stack pointer
  94:	72687462 	rsbvc	r7, r8, #1644167168	; 0x62000000
	sub sp, r0, #offset_FIQ_stack
  98:	00646165 	rsbeq	r6, r4, r5, ror #2
	
	msr cpsr_c, #Mode_IRQ|I_Bit|F_Bit @ set irq mode stack pointer
  9c:	20554e47 	subscs	r4, r5, r7, asr #28
	sub sp, r0, #offset_IRQ_stack
  a0:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
	
	msr cpsr_c, #Mode_SVC|I_Bit|F_Bit @ set svc mode stack pointer
  a4:	2e39312e 	rsfcsep	f3, f1, #0.5
	sub sp, r0, #offset_SVC_stack
  a8:	01003135 	tsteq	r0, r5, lsr r1
	
	msr cpsr_c, #Mode_ABT|I_Bit|F_Bit @ set abt mode stack pointer
  ac:	00005680 	andeq	r5, r0, r0, lsl #13
	sub sp, r0, #offset_ABT_stack
  b0:	59000200 	stmdbpl	r0, {r9}
	
	msr cpsr_c, #Mode_UND|I_Bit|F_Bit @ set und mode stack pointer
  b4:	04000000 	streq	r0, [r0], #-0
	sub sp, r0, #offset_UND_stack
  b8:	0000b301 	andeq	fp, r0, r1, lsl #6



/* to setup the BBS section */
init_bss:
	ldr r0, start_bss
  bc:	00000000 	andeq	r0, r0, r0
	ldr r1, length_bss
  c0:	00004000 	andeq	r4, r0, r0
	eor r2, r2, r2			@ $r2 = 0
  c4:	63657600 	cmnvs	r5, #0, 12

bss_clear_loop:
	subs r1, r1, #4
  c8:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
	bmi bss_clear_end
  cc:	2f00732e 	svccs	0x0000732e
	str r2, [r0]
  d0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xf68
	b bss_clear_loop
  d4:	6f66752f 	svcvs	0x0066752f

bss_clear_end:

/* MMU enable */	
mmu_enable:
	mrc p15, 0, r2, c1, c0, 0 
  d8:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0x564
	mov r1, #0x00000001
  dc:	65642f6b 	strbvs	r2, [r4, #-3947]!	; 0xf6b
	orr r2, r2, r1
  e0:	6f772f76 	svcvs	0x00772f76
	mcr p15, 0, r2, c1, c0, 0 @ Enable MMU
  e4:	6e696b72 	vmovvs.8	d9[7], r6

	
/* I-Cache enable */
icache_enable:
	mrc p15, 0, r2, c1, c0, 0 
  e8:	766d2f67 	strbtvc	r2, [sp], -r7, ror #30
	mov r1, #0x00001000
  ec:	74622f70 	strbtvc	r2, [r2], #-3952	; 0xf70
	orr r2, r2, r1
  f0:	61657268 	cmnvs	r5, r8, ror #4
	mcr p15, 0, r2, c1, c0, 0 @ Enable Icache
  f4:	4e470064 	cdpmi	0, 4, cr0, cr7, cr4, {3}

/* I-Cache enable */	
dcache_enable:
	mrc p15, 0, r2, c1, c0, 0 
  f8:	53412055 	movtpl	r2, #4181	; 0x1055
	mov r1, #0x00000004
  fc:	312e3220 	teqcc	lr, r0, lsr #4
	orr r2, r2, r1
 100:	31352e39 	teqcc	r5, r9, lsr lr
	mcr p15, 0, r2, c1, c0, 0 @ Enable Dcache
 104:	Address 0x00000104 is out of bounds.


Disassembly of section .debug_line:

00000000 <.debug_line>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	0000003e 	andeq	r0, r0, lr, lsr r0
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	00270002 	eoreq	r0, r7, r2
        LDR     PC, SWI_Addr
   8:	01020000 	tsteq	r2, r0
        LDR     PC, PRE_Addr
   c:	000d0efb 	strdeq	r0, [sp], -fp
        LDR     PC, DAB_Addr
  10:	01010101 	tsteq	r1, r1, lsl #2
        NOP
  14:	01000000 	tsteq	r0, r0
        LDR     PC, IRQ_Addr           
  18:	54010000 	strpl	r0, [r1], #-0
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	5f747365 	svcpl	0x00747365
  20:	676f7270 	undefined instruction 0x676f7270
  24:	65740000 	ldrbvs	r0, [r4, #-0]!
  28:	632e7473 	teqvs	lr, #1929379840	; 0x73000000
  2c:	00000100 	andeq	r0, r0, r0, lsl #2
  30:	02050000 	andeq	r0, r5, #0
  34:	000001a0 	andeq	r0, r0, r0, lsr #3
  38:	65676c17 	strbvs	r6, [r7, #-3095]!	; 0xc17
  3c:	000602db 	ldrdeq	r0, [r6], -fp
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	006d0101 	rsbeq	r0, sp, r1, lsl #2
	mrs r1, cpsr
  44:	00020000 	andeq	r0, r2, r0
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
  48:	0000001d 	andeq	r0, r0, sp, lsl r0
	orr r1, r1, #0x00df
  4c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
	msr cpsr_c, r1
  50:	0101000d 	tsteq	r1, sp
.equ Top_of_stack_1, 0x07000000 @ 112MB
.equ Top_of_stack_2, 0x06000000 @ 96MB
.equ Top_of_stack_3, 0x05000000 @ 80MB

init_stack_part1:
	mrc p15, 0, r6, c0, c0, 5
  54:	00000101 	andeq	r0, r0, r1, lsl #2
	
	mov r0, #Top_of_stack_3
  58:	00000100 	andeq	r0, r0, r0, lsl #2
	cmp r6 , #0x3
  5c:	6f620001 	svcvs	0x00620001
	beq init_stack_part2
  60:	732e746f 	teqvc	lr, #1862270976	; 0x6f000000
	
	mov r0, #Top_of_stack_2
  64:	00000000 	andeq	r0, r0, r0
	cmp r6 , #0x2
  68:	02050000 	andeq	r0, r5, #0
	beq init_stack_part2
  6c:	00000040 	andeq	r0, r0, r0, asr #32
	
	mov r0, #Top_of_stack_1
  70:	2f011903 	svccs	0x00011903
	cmp r6 , #0x1
  74:	032f2f2f 	teqeq	pc, #47, 30	; 0xbc
	beq init_stack_part2
  78:	2f302e25 	svccs	0x00302e25

	mov r0, #Top_of_stack_0
  7c:	2f2f302f 	svccs	0x002f302f
	cmp r6 , #0x0
  80:	302f2f30 	eorcc	r2, pc, r0, lsr pc
	beq init_stack_part2
  84:	2f302f2f 	svccs	0x00302f2f

	nop
  88:	302f3031 	eorcc	r3, pc, r1, lsr r0
	b .
  8c:	302f302f 	eorcc	r3, pc, pc, lsr #32

init_stack_part2:
	sub sp, r0, #offset_USR_stack @ set user/sys mode stack pointer
  90:	342f302f 	strtcc	r3, [pc], #47	; 98 <init_stack_part2+0x8>
	
	msr cpsr_c, #Mode_FIQ|I_Bit|F_Bit @ set fiq mode stack pointer
  94:	2f312f2f 	svccs	0x00312f2f
	sub sp, r0, #offset_FIQ_stack
  98:	2f342f2f 	svccs	0x00342f2f
	
	msr cpsr_c, #Mode_IRQ|I_Bit|F_Bit @ set irq mode stack pointer
  9c:	2f332f2f 	svccs	0x00332f2f
	sub sp, r0, #offset_IRQ_stack
  a0:	2f322f2f 	svccs	0x00322f2f
	
	msr cpsr_c, #Mode_SVC|I_Bit|F_Bit @ set svc mode stack pointer
  a4:	2f352f2f 	svccs	0x00352f2f
	sub sp, r0, #offset_SVC_stack
  a8:	352f2f2f 	strcc	r2, [pc, #-3887]!	; fffff181 <Top_of_stack_0+0xf7fff181>
	
	msr cpsr_c, #Mode_ABT|I_Bit|F_Bit @ set abt mode stack pointer
  ac:	12022f2f 	andne	r2, r2, #47, 30	; 0xbc
	sub sp, r0, #offset_ABT_stack
  b0:	3c010100 	stfccs	f0, [r1], {-0}
	
	msr cpsr_c, #Mode_UND|I_Bit|F_Bit @ set und mode stack pointer
  b4:	02000000 	andeq	r0, r0, #0
	sub sp, r0, #offset_UND_stack
  b8:	00002000 	andeq	r2, r0, r0



/* to setup the BBS section */
init_bss:
	ldr r0, start_bss
  bc:	fb010200 	blx	408c6 <setting+0x3ddc2>
	ldr r1, length_bss
  c0:	01000d0e 	tsteq	r0, lr, lsl #26
	eor r2, r2, r2			@ $r2 = 0
  c4:	00010101 	andeq	r0, r1, r1, lsl #2

bss_clear_loop:
	subs r1, r1, #4
  c8:	00010000 	andeq	r0, r1, r0
	bmi bss_clear_end
  cc:	76000100 	strvc	r0, [r0], -r0, lsl #2
	str r2, [r0]
  d0:	6f746365 	svcvs	0x00746365
	b bss_clear_loop
  d4:	732e7372 	teqvc	lr, #-939524095	; 0xc8000001

bss_clear_end:

/* MMU enable */	
mmu_enable:
	mrc p15, 0, r2, c1, c0, 0 
  d8:	00000000 	andeq	r0, r0, r0
	mov r1, #0x00000001
  dc:	02050000 	andeq	r0, r5, #0
	orr r2, r2, r1
  e0:	00000000 	andeq	r0, r0, r0
	mcr p15, 0, r2, c1, c0, 0 @ Enable MMU
  e4:	30011903 	andcc	r1, r1, r3, lsl #18

	
/* I-Cache enable */
icache_enable:
	mrc p15, 0, r2, c1, c0, 0 
  e8:	2f2f2f2f 	svccs	0x002f2f2f
	mov r1, #0x00001000
  ec:	1202302f 	andne	r3, r2, #47	; 0x2f
	orr r2, r2, r1
  f0:	Address 0x000000f0 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	00000000 	andeq	r0, r0, r0
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	00000004 	andeq	r0, r0, r4
        LDR     PC, SWI_Addr
   8:	045d0001 	ldrbeq	r0, [sp], #-1
        LDR     PC, PRE_Addr
   c:	08000000 	stmdaeq	r0, {}
        LDR     PC, DAB_Addr
  10:	02000000 	andeq	r0, r0, #0
        NOP
  14:	08087d00 	stmdaeq	r8, {r8, sl, fp, ip, sp, lr}
        LDR     PC, IRQ_Addr           
  18:	4c000000 	stcmi	0, cr0, [r0], {-0}
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	02000000 	andeq	r0, r0, #0
  20:	00047b00 	andeq	r7, r4, r0, lsl #22
  24:	00000000 	andeq	r0, r0, r0
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	00000017 	andeq	r0, r0, r7, lsl r0
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	00000002 	andeq	r0, r0, r2
        LDR     PC, SWI_Addr
   8:	00560000 	subseq	r0, r6, r0
        LDR     PC, PRE_Addr
   c:	00250000 	eoreq	r0, r5, r0
        LDR     PC, DAB_Addr
  10:	616d0000 	cmnvs	sp, r0
        NOP
  14:	00006e69 	andeq	r6, r0, r9, ror #28
        LDR     PC, IRQ_Addr           
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	00000002 	andeq	r0, r0, r2
        LDR     PC, SWI_Addr
   8:	00040000 	andeq	r0, r4, r0
        LDR     PC, PRE_Addr
   c:	00000000 	andeq	r0, r0, r0
        LDR     PC, DAB_Addr
  10:	000001a0 	andeq	r0, r0, r0, lsr #3
        NOP
  14:	0000004c 	andeq	r0, r0, ip, asr #32
	...
        LDR     PC, IRQ_Addr           
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00560002 	subseq	r0, r6, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00000040 	andeq	r0, r0, r0, asr #32
  34:	00000108 	andeq	r0, r0, r8, lsl #2
	...
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
	mrs r1, cpsr
  44:	00ad0002 	adceq	r0, sp, r2
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
  48:	00040000 	andeq	r0, r4, r0
	...
.equ Top_of_stack_1, 0x07000000 @ 112MB
.equ Top_of_stack_2, 0x06000000 @ 96MB
.equ Top_of_stack_3, 0x05000000 @ 80MB

init_stack_part1:
	mrc p15, 0, r6, c0, c0, 5
  54:	00000040 	andeq	r0, r0, r0, asr #32
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	20554e47 	subscs	r4, r5, r7, asr #28
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	2e342043 	cdpcs	0, 3, cr2, cr4, cr3, {2}
        LDR     PC, SWI_Addr
   8:	00312e34 	eorseq	r2, r1, r4, lsr lr
        LDR     PC, PRE_Addr
   c:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0x554
        LDR     PC, DAB_Addr
  10:	6f72705f 	svcvs	0x0072705f
        NOP
  14:	65742f67 	ldrbvs	r2, [r4, #-3943]!	; 0xf67
        LDR     PC, IRQ_Addr           
  18:	632e7473 	teqvs	lr, #1929379840	; 0x73000000
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	6f682f00 	svcvs	0x00682f00
  20:	752f656d 	strvc	r6, [pc, #-1389]!	; fffffabb <Top_of_stack_0+0xf7fffabb>
  24:	65646f66 	strbvs	r6, [r4, #-3942]!	; 0xf66
  28:	2f6b6572 	svccs	0x006b6572
  2c:	2f766564 	svccs	0x00766564
  30:	6b726f77 	blvs	1c9be14 <setting+0x1c99310>
  34:	2f676e69 	svccs	0x00676e69
  38:	2f70766d 	svccs	0x0070766d
  3c:	72687462 	rsbvc	r7, r8, #1644167168	; 0x62000000
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	00646165 	rsbeq	r6, r4, r5, ror #2
	mrs r1, cpsr
  44:	6e69616d 	powvsez	f6, f1, #5.0
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
.extern  DAB_Handler		@ Data abort handler
.extern  IRQ_Handler		@ Interrupt request handler
.extern  FIQ_Handler		@ Fast interrupt request handler

.text     
        mov     PC, #0x40
   0:	0000000c 	andeq	r0, r0, ip
        @LDR     PC, RST_Addr
        LDR     PC, UND_Addr
   4:	ffffffff 	undefined instruction 0xffffffff
        LDR     PC, SWI_Addr
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
        LDR     PC, PRE_Addr
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
        LDR     PC, DAB_Addr
  10:	00000018 	andeq	r0, r0, r8, lsl r0
        NOP
  14:	00000000 	andeq	r0, r0, r0
        LDR     PC, IRQ_Addr           
  18:	000001a0 	andeq	r0, r0, r0, lsr #3
        @LDR     PC, [PC, #-0xff0]       @ Load VECTADDR into PC (VIC)
        LDR     PC, FIQ_Addr
  1c:	0000004c 	andeq	r0, r0, ip, asr #32
  20:	42080e42 	andmi	r0, r8, #1056	; 0x420
  24:	028b018e 	addeq	r0, fp, #-2147483613	; 0x80000023
  28:	00040b0c 	andeq	r0, r4, ip, lsl #22
  2c:	0000000c 	andeq	r0, r0, ip
  30:	ffffffff 	undefined instruction 0xffffffff
  34:	7c010001 	stcvc	0, cr0, [r1], {1}
  38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  3c:	0000000c 	andeq	r0, r0, ip
.section .start, "x", "a"	@ executable & allocatable section
.align 4

/* the code entry */
_start:
	mov r0, #0x0000
  40:	0000002c 	andeq	r0, r0, ip, lsr #32
	mrs r1, cpsr
  44:	00001db4 	strheq	r1, [r0], -r4
	and r1, r1, #0xff00		@ disable IRQ & FIQ, then switch to SYS mode
  48:	000000f4 	strdeq	r0, [r0], -r4
